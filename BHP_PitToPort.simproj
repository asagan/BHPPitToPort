<?xml version="1.0" encoding="utf-8"?>
<Project ProductVersion="6.97.10725.24016" FileVersion="92" Id="8e9e0853-dcf4-49ae-a224-b765f7c4e7a6" xmlns="http://www.simio.com/projects/v1">
  <DocumentInfo LicenseInfo="5:0" UserName="Sales and Support" Organization="Solosi Pty Ltd" SerialNumber="4106" SaveDate="2014-02-16T06:55:44" />
  <Models>
    <Model Definition="ModelEntity" Runnable="False">
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <ViewInfo />
    </Model>
    <Model Definition="MineMaterialHandlingModel">
      <RunSetup AnimationInterval="5" ReplicationNumber="1">
        <StartDate>2014-02-10T00:00:00</StartDate>
        <EndDate>2014-02-11T00:00:00</EndDate>
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="USD">0.0</Property>
          <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ProductEntityType">ProductEntity</Property>
          <Property Name="ProductYield">0.8</Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics>
        <FileRef Name="Results\MineMaterialHandlingModel\Interactive_Results.stats" />
      </InteractiveStatistics>
      <ViewInfo>
        <Facility>
          <Camera Orientation="Perspective" Location="63.7276412042979 49.7827118949188 57.2155108208557" Direction="-0.0995058998997231 -0.577350269001478 -0.810410539645843" Zoom="120.631393432617" />
          <ObjectDisplay Axis="False" Grid="False" Background="ffffff" />
        </Facility>
        <External>
          <Camera Orientation="Top" Location="79.5733481454084 120.975059509277 -27.3297577808044" Direction="0 -1 2.22044604925031E-16" Zoom="120.975059509277" />
          <ObjectDisplay Background="ffffff" />
        </External>
        <OperationalPlanningOwnerGantt>
          <Gantt>
            <Columns>
              <Column Name="Entity" Width="150" />
              <Column Name="#" Width="50" />
            </Columns>
          </Gantt>
        </OperationalPlanningOwnerGantt>
        <OperationalPlanningResourceGantt>
          <Gantt>
            <Columns>
              <Column Name="Resource" Width="150" />
            </Columns>
          </Gantt>
        </OperationalPlanningResourceGantt>
        <OperationalFacility>
          <Camera Orientation="Top" Location="16.6639988671098 36.4431486880466 -1.6400302820436" Direction="0 -1 2.22044604925031E-16" Zoom="36.4431486880466" />
          <ObjectDisplay Grid="False" Background="ffffff" />
        </OperationalFacility>
      </ViewInfo>
    </Model>
    <Model Definition="TruckCircuitModel">
      <RunSetup AnimationInterval="2" ReplicationNumber="1">
        <StartDate>2014-02-10T00:00:00</StartDate>
        <EndDate>2014-02-11T00:00:00</EndDate>
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="USD">0.0</Property>
          <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="EntityType">RomOre</Property>
          <Property Name="NumberOfTrucks">4</Property>
          <Property Name="TruckLoadingTime">30</Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics>
        <FileRef Name="Results\TruckCircuitModel\Interactive_Results.stats" />
      </InteractiveStatistics>
      <ViewInfo>
        <Facility>
          <Camera Orientation="Top" Location="48.0725485366527 163.145076375807 -1.78634996640733" Direction="0 -1 2.22044604925031E-16" Zoom="163.145076375807" />
          <ObjectDisplay Axis="False" Grid="False" Background="ffffff" />
        </Facility>
        <External>
          <Camera Orientation="Top" Location="90.3856489365415 151.783209862752 23.4047633705072" Direction="0 -1 2.22044604925031E-16" Zoom="151.783209862752" />
          <ObjectDisplay Background="ffffff" />
        </External>
        <StandardTables>
          <DotNetMagicIncantation Layout="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xD;&#xA;&lt;!-- DotNetMagic, The User Interface library for .NET (www.crownwood.net) --&gt;&#xD;&#xA;&lt;!-- Modifying this generated file will probably render it invalid --&gt;&#xD;&#xA;&lt;TabbedGroups FormatVersion=&quot;1&quot; ActiveLeaf=&quot;60&quot;&gt;&#xD;&#xA;  &lt;CustomGlobalData /&gt;&#xD;&#xA;  &lt;Sequence Count=&quot;1&quot; Unique=&quot;58&quot; Space=&quot;100&quot; Direction=&quot;Horizontal&quot;&gt;&#xD;&#xA;    &lt;Leaf Count=&quot;1&quot; Unique=&quot;60&quot; Space=&quot;100&quot;&gt;&#xD;&#xA;      &lt;Page Title=&quot;Sequence Table1&quot; ImageList=&quot;False&quot; ImageIndex=&quot;-1&quot; Selected=&quot;True&quot; Control=&quot;null&quot; UniqueName=&quot;&quot;&gt;&#xD;&#xA;        &lt;CustomPageData /&gt;&#xD;&#xA;      &lt;/Page&gt;&#xD;&#xA;    &lt;/Leaf&gt;&#xD;&#xA;  &lt;/Sequence&gt;&#xD;&#xA;&lt;/TabbedGroups&gt;" />
          <Tables SelectedTable="SequenceTable1">
            <Table Name="SequenceTable1" FilterEnabled="True">
              <Columns>
                <Column Name="Sequence" Width="94" />
              </Columns>
            </Table>
          </Tables>
        </StandardTables>
        <OperationalPlanningOwnerGantt>
          <Gantt>
            <Columns>
              <Column Name="Entity" Width="150" />
              <Column Name="#" Width="50" />
            </Columns>
          </Gantt>
        </OperationalPlanningOwnerGantt>
        <OperationalPlanningResourceGantt>
          <Gantt>
            <Columns>
              <Column Name="Resource" Width="150" />
            </Columns>
          </Gantt>
        </OperationalPlanningResourceGantt>
        <OperationalFacility>
          <Camera Orientation="Top" Location="42.6561975574157 114.201545809414 -8.17504805575106" Direction="0 -1 2.22044604925031E-16" Zoom="114.201545809414" />
          <ObjectDisplay Grid="False" Background="ffffff" />
        </OperationalFacility>
      </ViewInfo>
    </Model>
    <Model Definition="MineModel">
      <RunSetup AnimationInterval="20" ReplicationNumber="1">
        <StartDate>2014-02-10T00:00:00</StartDate>
        <EndDate>2014-02-11T00:00:00</EndDate>
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="USD">0.0</Property>
          <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ProductEntityType">ModelEntity1</Property>
          <Property Name="ROMEntityType">ModelEntity1</Property>
          <Property Name="NumberOfTrucksCircuit1">3</Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics>
        <FileRef Name="Results\MineModel\Interactive_Results.stats" />
      </InteractiveStatistics>
      <ViewInfo>
        <Facility>
          <Camera Orientation="Top" Location="-18.197145459986 341.610773063098 61.0528325980244" Direction="0 -1 2.22044604925031E-16" Zoom="341.610773063098" />
          <ObjectDisplay Axis="False" Grid="False" Background="ffffff" />
        </Facility>
        <External>
          <Camera Orientation="Top" Location="-37.257805385245 376.400675956392 -38.0308887458908" Direction="0 -1 2.22044604925031E-16" Zoom="376.400675956392" />
          <ObjectDisplay Background="ffffff" />
        </External>
        <Dashboard>
          <Camera Orientation="Top" Location="1.81898940354586E-12 12.5 -1.81898940354586E-12" Direction="0 -1 2.22044604925031E-16" Zoom="12.5" />
          <ObjectDisplay Background="ffffff" />
        </Dashboard>
        <OperationalPlanningOwnerGantt>
          <Gantt>
            <Columns>
              <Column Name="Entity" Width="150" />
              <Column Name="#" Width="50" />
            </Columns>
          </Gantt>
        </OperationalPlanningOwnerGantt>
        <OperationalPlanningResourceGantt>
          <Gantt>
            <Columns>
              <Column Name="Resource" Width="150" />
            </Columns>
          </Gantt>
        </OperationalPlanningResourceGantt>
        <OperationalFacility>
          <Camera Orientation="Perspective" Location="110.526065498368 73.5050553375058 59.6202555578433" Direction="0.155794907733068 -0.57735026888845 -0.801495236254639" Zoom="89.1201433037112" />
          <ObjectDisplay Grid="False" Background="ffffff" />
        </OperationalFacility>
      </ViewInfo>
    </Model>
    <Model Definition="RailModel">
      <RunSetup AnimationInterval="1" ReplicationNumber="1">
        <StartDate>2014-02-10T00:00:00</StartDate>
        <RunLength Units="Hours">100</RunLength>
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="USD">0.0</Property>
          <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics>
        <FileRef Name="Results\RailModel\Interactive_Results.stats" />
      </InteractiveStatistics>
      <ViewInfo>
        <Facility>
          <Camera Orientation="Top" Location="-3998.17802382777 7.5788806469228 -1.43699843503564" Direction="0 -1 2.22044604925031E-16" Zoom="7.5788806469228" />
          <ObjectDisplay Axis="False" Grid="False" LineArrows="False" Background="ffffff" />
        </Facility>
        <External>
          <Camera Orientation="Top" Location="202182.129601892 271747.084031977 7195.27188195919" Direction="0 -1 2.22044604925031E-16" Zoom="271747.084031977" />
          <ObjectDisplay Background="ffffff" />
        </External>
        <StandardTables>
          <DotNetMagicIncantation Layout="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xD;&#xA;&lt;!-- DotNetMagic, The User Interface library for .NET (www.crownwood.net) --&gt;&#xD;&#xA;&lt;!-- Modifying this generated file will probably render it invalid --&gt;&#xD;&#xA;&lt;TabbedGroups FormatVersion=&quot;1&quot; ActiveLeaf=&quot;145&quot;&gt;&#xD;&#xA;  &lt;CustomGlobalData /&gt;&#xD;&#xA;  &lt;Sequence Count=&quot;1&quot; Unique=&quot;143&quot; Space=&quot;100&quot; Direction=&quot;Horizontal&quot;&gt;&#xD;&#xA;    &lt;Leaf Count=&quot;4&quot; Unique=&quot;145&quot; Space=&quot;100&quot;&gt;&#xD;&#xA;      &lt;Page Title=&quot;Mine1&quot; ImageList=&quot;False&quot; ImageIndex=&quot;-1&quot; Selected=&quot;False&quot; Control=&quot;null&quot; UniqueName=&quot;&quot;&gt;&#xD;&#xA;        &lt;CustomPageData /&gt;&#xD;&#xA;      &lt;/Page&gt;&#xD;&#xA;      &lt;Page Title=&quot;Mine2&quot; ImageList=&quot;False&quot; ImageIndex=&quot;-1&quot; Selected=&quot;False&quot; Control=&quot;null&quot; UniqueName=&quot;&quot;&gt;&#xD;&#xA;        &lt;CustomPageData /&gt;&#xD;&#xA;      &lt;/Page&gt;&#xD;&#xA;      &lt;Page Title=&quot;Mine3&quot; ImageList=&quot;False&quot; ImageIndex=&quot;-1&quot; Selected=&quot;False&quot; Control=&quot;null&quot; UniqueName=&quot;&quot;&gt;&#xD;&#xA;        &lt;CustomPageData /&gt;&#xD;&#xA;      &lt;/Page&gt;&#xD;&#xA;      &lt;Page Title=&quot;Mine4&quot; ImageList=&quot;False&quot; ImageIndex=&quot;-1&quot; Selected=&quot;True&quot; Control=&quot;null&quot; UniqueName=&quot;&quot;&gt;&#xD;&#xA;        &lt;CustomPageData /&gt;&#xD;&#xA;      &lt;/Page&gt;&#xD;&#xA;    &lt;/Leaf&gt;&#xD;&#xA;  &lt;/Sequence&gt;&#xD;&#xA;&lt;/TabbedGroups&gt;" />
          <Tables SelectedTable="Mine4">
            <Table Name="Mine1" FilterEnabled="True">
              <Columns>
                <Column Name="Sequence" Width="122" />
              </Columns>
            </Table>
            <Table Name="Mine2" FilterEnabled="True">
              <Columns>
                <Column Name="Sequence" Width="122" />
              </Columns>
            </Table>
            <Table Name="Mine3" FilterEnabled="True">
              <Columns>
                <Column Name="Sequence" Width="122" />
              </Columns>
            </Table>
            <Table Name="Mine4" FilterEnabled="True">
              <Columns>
                <Column Name="Sequence" Width="122" />
              </Columns>
            </Table>
          </Tables>
        </StandardTables>
        <OperationalPlanningOwnerGantt>
          <Gantt>
            <Columns>
              <Column Name="Entity" Width="150" />
              <Column Name="#" Width="50" />
            </Columns>
          </Gantt>
        </OperationalPlanningOwnerGantt>
        <OperationalPlanningResourceGantt>
          <Gantt>
            <Columns>
              <Column Name="Resource" Width="150" />
            </Columns>
          </Gantt>
        </OperationalPlanningResourceGantt>
        <OperationalFacility>
          <Camera Orientation="Top" Location="989.682754884507 64.4194209754435 -2002.67698765991" Direction="0 -1 2.22044604925031E-16" Zoom="64.4194209754435" />
          <ObjectDisplay Axis="False" Grid="False" LineArrows="False" Background="ffffff" />
        </OperationalFacility>
      </ViewInfo>
    </Model>
    <Model Definition="ChannelModel">
      <RunSetup AnimationInterval="100" ReplicationNumber="1">
        <StartDate>2014-02-17T00:00:00</StartDate>
        <EndDate>2014-02-18T00:00:00</EndDate>
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="USD">0.0</Property>
          <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics>
        <FileRef Name="Results\ChannelModel\Interactive_Results.stats" />
      </InteractiveStatistics>
      <ViewInfo>
        <Facility>
          <Camera Orientation="Top" Location="2051.55297472353 51952.4571230651 -5055.0496528114" Direction="0 -1 2.22044604925031E-16" Zoom="51952.4571230651" />
          <ObjectDisplay Axis="False" Grid="False" Background="ffffff" />
        </Facility>
        <External>
          <Camera Orientation="Top" Location="892.400723757645 45672.53515625 -12177.5605236166" Direction="0 -1 2.22044604925031E-16" Zoom="45672.53515625" />
          <ObjectDisplay Background="ffffff" />
        </External>
        <OperationalPlanningOwnerGantt>
          <Gantt>
            <Columns>
              <Column Name="Entity" Width="150" />
              <Column Name="#" Width="50" />
            </Columns>
          </Gantt>
        </OperationalPlanningOwnerGantt>
        <OperationalPlanningResourceGantt>
          <Gantt>
            <Columns>
              <Column Name="Resource" Width="150" />
            </Columns>
          </Gantt>
        </OperationalPlanningResourceGantt>
        <OperationalFacility>
          <Camera Orientation="Top" Location="-21.5511103074258 15.016592920354 -4.5839466140635" Direction="0 -1 2.22044604925031E-16" Zoom="15.016592920354" />
          <ObjectDisplay Grid="False" Background="ffffff" />
        </OperationalFacility>
      </ViewInfo>
    </Model>
    <Model Definition="PortStockyardModel">
      <RunSetup AnimationInterval="5" ReplicationNumber="1">
        <StartDate>2014-02-10T00:00:00</StartDate>
        <EndDate>2014-02-11T00:00:00</EndDate>
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="USD">0.0</Property>
          <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics>
        <FileRef Name="Results\PortStockyardModel\Interactive_Results.stats" />
      </InteractiveStatistics>
      <ViewInfo>
        <Facility>
          <Camera Orientation="Top" Location="445.471117378047 581.807601038227 -42.0781809731091" Direction="0 -1 2.22044604925031E-16" Zoom="581.807601038227" />
          <ObjectDisplay Background="ffffff" />
        </Facility>
        <External>
          <Camera Orientation="Top" Location="999.885055776184 151.783209862752 8.61109048621683" Direction="0 -1 2.22044604925031E-16" Zoom="151.783209862752" />
          <ObjectDisplay Background="ffffff" />
        </External>
        <OperationalPlanningOwnerGantt>
          <Gantt>
            <Columns>
              <Column Name="Entity" Width="150" />
              <Column Name="#" Width="50" />
            </Columns>
          </Gantt>
        </OperationalPlanningOwnerGantt>
        <OperationalPlanningResourceGantt>
          <Gantt>
            <Columns>
              <Column Name="Resource" Width="150" />
            </Columns>
          </Gantt>
        </OperationalPlanningResourceGantt>
      </ViewInfo>
    </Model>
    <Model Definition="PortModel">
      <RunSetup AnimationInterval="100" StatusMassUnits="Metric Tons" StatusMassFlowRateUnits="Metric Tons per Hour" ReplicationNumber="1">
        <StartDate>2014-02-17T00:00:00</StartDate>
        <EndDate>2014-02-18T00:00:00</EndDate>
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="USD">0.0</Property>
          <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ShiploadingRate">12000</Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics>
        <FileRef Name="Results\PortModel\Interactive_Results.stats" />
      </InteractiveStatistics>
      <ViewInfo>
        <Facility>
          <Camera Orientation="Top" Location="-15486.3828047797 60245.2102985318 -23739.6762049331" Direction="0 -1 2.22044604925031E-16" Zoom="60245.2102985318" />
          <ObjectDisplay Axis="False" Grid="False" Background="ffffff" />
        </Facility>
        <External>
          <Camera Orientation="Top" Location="-5848.64589488266 65246.474876077 -18653.2692547304" Direction="0 -1 2.22044604925031E-16" Zoom="65246.474876077" />
          <ObjectDisplay Background="ffffff" />
        </External>
        <OperationalPlanningOwnerGantt>
          <Gantt>
            <Columns>
              <Column Name="Entity" Width="150" />
              <Column Name="#" Width="50" />
            </Columns>
          </Gantt>
        </OperationalPlanningOwnerGantt>
        <OperationalPlanningResourceGantt>
          <Gantt>
            <Columns>
              <Column Name="Resource" Width="150" />
            </Columns>
          </Gantt>
        </OperationalPlanningResourceGantt>
      </ViewInfo>
    </Model>
    <Model Definition="PitToPortModel">
      <RunSetup AnimationInterval="5" ReplicationNumber="1">
        <StartDate>2014-02-10T00:00:00</StartDate>
        <EndDate>2014-02-11T00:00:00</EndDate>
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="USD">0.0</Property>
          <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics>
        <FileRef Name="Results\PitToPortModel\Interactive_Results.stats" />
      </InteractiveStatistics>
      <ViewInfo ActiveModel="True" ActiveView="Facility">
        <Facility>
          <Camera Orientation="Top" Location="34520.88671875 499274.412609943 -14857.1865234376" Direction="0 -1 2.22044604925031E-16" Zoom="500053.384411701" />
          <ObjectDisplay Axis="False" Grid="False" Background="ffffff" />
        </Facility>
        <OperationalPlanningOwnerGantt>
          <Gantt>
            <Columns>
              <Column Name="Entity" Width="150" />
              <Column Name="#" Width="50" />
            </Columns>
          </Gantt>
        </OperationalPlanningOwnerGantt>
        <OperationalPlanningResourceGantt>
          <Gantt>
            <Columns>
              <Column Name="Resource" Width="150" />
            </Columns>
          </Gantt>
        </OperationalPlanningResourceGantt>
      </ViewInfo>
    </Model>
  </Models>
  <Symbols>
    <SymbolRef Id="6398e060-868d-4b91-ab2b-4847b4f5f903" />
    <SymbolRef Id="fc3e0e73-d453-4717-850c-0c599fd47097" />
    <SymbolRef Id="0a81ae10-8cca-4a2b-b7de-af0a23a00f44" />
    <SymbolRef Id="c26768aa-0772-4299-a770-fce1d879199a" />
    <SymbolRef Id="4c13af81-460c-4c68-acf7-fd646b5e1b16" />
    <SymbolRef Id="43ac0539-44aa-47ce-9fdb-49c672cb8fff" />
    <SymbolRef Id="cba813a6-a342-427c-86b6-64bcbdfdce42" />
    <SymbolRef Id="5aa83ba5-20f4-4c67-843a-62482d3f85e5" />
  </Symbols>
  <Materials>
    <MaterialRef Id="38836c5e-220f-4ecb-b958-ef8fa9b33a0b" />
    <MaterialRef Id="a89a3131-f279-4113-915a-f11b8ad60fef" />
  </Materials>
  <PathDecorators>
    <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
  </PathDecorators>
  <Libraries>
    <LibraryRef Name="Transportation Library" Id="112dbc1b-cccc-49b8-9f14-21ad5d7c3849" PathHint="C:\Users\AlanSagan\Documents\GitHub\SolosiLibraries\TransportationLibrary\TransportationLibrary.simproj" />
  </Libraries>
  <CommonItems>
    <Definitions>
      <EntityDefinition Name="ModelEntity" Id="f6570181-af76-481c-b703-1179b251be2f" Revision="14" Author="Sales and Support" Description="The default entity definition for your project." CheckBaseForAdvancedProperties="True">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="CurrentSizeIndex" DefaultValue="$(DefinitionName).Picture" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <DiscreteState Name="Picture" Description="A utility state to hold a picture index. This state can then be referenced in an expression for Current Symbol Index." />
          <StringState Name="Animation" Description="A utility state to hold the name of an animation. This state can then be referenced in an expression for Current Animation Index." />
        </States>
        <Events />
        <Processes>
          <Process Name="OnEnteredFreeSpace" IsOverride="True" InterfaceProcessID="Entity.OnEnteredFreeSpace" BeginStepID="2" ExcludedFromLimits="True">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Decide" Name="IfDestinationNode" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">DestinationNode != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfEnteredFreeSpaceFromNode" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(PreviousNode != Nothing, DirectDistanceTo.Object(PreviousNode) == 0.0, False)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Assign" Name="MovementRate" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">0</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfNearestInputNode" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PreviousNode.Nearest.InputNode != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfNearestNode" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PreviousNode.Nearest.Node != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="SetNode" Name="ToNearestNode" ID="7">
                <Properties>
                  <Property Name="NodeName">PreviousNode.Nearest.Node</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="SetNode" Name="ToNearestInputNode" ID="8">
                <Properties>
                  <Property Name="NodeName">PreviousNode.Nearest.InputNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Travel" Name="ToDestinationNode" ID="9">
                <Properties>
                  <Property Name="DestinationObject">DestinationNode</Property>
                  <Property Name="MaximumMovementRate">DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Transfer" Name="ToDestinationNode" ID="10">
                <Properties>
                  <Property Name="NodeName">DestinationNode</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <Graphics>
            <Polygon Center="0 0 0" Color="008000" YHeight="0.25" ExternallyVisible="True">
              <Points>
                <Point Location="-0.25 0 0.25" />
                <Point Location="-0.25 0 -0.25" />
                <Point Location="0.25 0 0" />
              </Points>
            </Polygon>
            <DefaultFlowMaterial>
              <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
            </DefaultFlowMaterial>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </EntityDefinition>
      <FixedDefinition Name="ChannelModel" Id="ac3fdd61-46b2-4055-a842-d607b12a8ff1" Revision="8" Author="Sales and Support">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="ShiploadingRate" DisplayName="Shiploading Rate" Category="Shiploading" CategoryExpanded="True" DefaultValue="12000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="ShipCapacity" DisplayName="Ship Capacity" Category="Ship Arrivals" DefaultValue="160000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ShipInterarrivalTime" DisplayName="Ship Interarrival Time" Category="Ship Arrivals" DefaultValue="Random.Exponential(1)" NullString="null" UnitType="Time" DefaultUnits="Days" />
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="TransferNode" />
          <UsedObject Name="Resource" />
          <UsedObject Name="FlowNode" />
          <UsedObject Name="ContainerEntity" />
          <UsedObject Name="Filler" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Processes>
          <Process Name="BasicNode2_Entered" BeginStepID="2" Category="BasicNode2 AddOn Processes">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="empty?" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.Is.ContainerEntity &amp;&amp; ContainerEntity.FlowContainer.Contents.Weight == 0</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="3" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Seize" Name="Berth" ID="3">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">ChannelAuthority</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Release" Name="Berth" ID="4">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">ChannelAuthority</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Objects>
          <Fixed Name="Source1" Type="Source" Location="-209.01989463555 6.66133814775094E-16 -20120.7416893732" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@Source1" Type="TransferNode" Location="-207.51989463555 6.66133814775094E-16 -20120.7416893732" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DestinationType">Specific</Property>
                  <Property Name="DestinationNodeName">ContainerInput@Berth</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ContainerEntity1</Property>
              <Property Name="InterarrivalTime" Units="Days">ShipInterarrivalTime</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="0">
                <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
                  <Points>
                    <Point Location="-3924.8714582188 6.66133814775094E-16 -19996.050856361" />
                    <Point Location="-161.977012502775 6.66133814775094E-16 -19993.8551241189" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Entity Name="ContainerEntity1" Type="ContainerEntity" Location="-797.607610840653 0 -20708.6181512463" Size="276.010772705078 39.3699970245361 53.6580887884254" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity" Units="Metric Tons">ShipCapacity</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ContainerEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="5aa83ba5-20f4-4c67-843a-62482d3f85e5" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="1 6">
                <StackedBar Center="-804.974216724654 29.1631074197529 -20708.778981744" Width="26.1832135279187" Height="201.530693696033" Rotation="1.57087993412279" ExternallyVisible="True" Type="Queue" Expression="Entity.Volume" QueueName="FlowContainer.Contents" />
                <StatusLabel Center="-847.649803256051 16.2419053609758 -20735.6444751299" Width="70.5187464934967" Height="26.5284814999977" BackColor="00ffffff" Expression="String.FromReal(Math.round(FlowContainer.Contents.Weight / FlowContainer.CurrentWeightCapacity * 100, 0)) + &quot;%&quot;" />
              </AttachedObjects>
            </Graphics>
          </Entity>
          <Fixed Name="Berth" Type="Filler" Location="-14.8493153615081 0 0.317211089168183" Size="1.79999992090078 1.63670219655316 1.01239019889105" Scope="Public">
            <AssociatedNodes>
              <Node Name="ContainerInput@Berth" Type="BasicNode" Location="-16.3493153615081 0 -0.182788910831817" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="FlowInput@Berth" Type="FlowNode" Location="-16.3493153615081 0 0.817211089168183" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">ShiploadingRate</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@Berth" Type="TransferNode" Location="-13.3493153615081 0 0.317211089168183" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DestinationType">Specific</Property>
                  <Property Name="DestinationNodeName">Input@Sink1</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <IndexedSizes>
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SecondaryResourceForProcessingObjectName">Shiploader</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Filler.ResourceState">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="70193ba6-0be9-4acd-90b2-86d90e10b56a" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="3ffa66e5-d33c-4d00-84e7-1021775d4e68" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="726b97ea-e96c-4b3a-ae79-0c615da3feb0" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="958215c2-ee27-40a5-a1a9-a01f9ae876b4" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="2 3 4">
                <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
                  <Points>
                    <Point Location="-15.8493144214153 0 0.317210968583822" />
                    <Point Location="-18.8493144214153 0 0.317210968583822" />
                  </Points>
                </Queue>
                <Queue Queue="Processing.Contents" ExternallyVisible="True">
                  <Points>
                    <Point Location="-312.385147314777 0 -1.56912730242992" />
                    <Point Location="-11.1260205426241 0 -1.88732286241999" />
                  </Points>
                </Queue>
                <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
                  <Points>
                    <Point Location="-13.8493144214153 0 0.817210968583822" />
                    <Point Location="-10.8493144214153 0 0.817210968583822" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="Sink1" Type="Sink" Location="191.71989433263 0 -20147.6406531272" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@Sink1" Type="BasicNode" Location="190.21989433263 0 -20147.6406531272" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="5">
                <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
                  <Points>
                    <Point Location="190.719989929348 0 -20147.1403689347" />
                    <Point Location="187.719989929348 0 -20147.1403689347" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="ChannelAuthority" Type="Resource" Location="6459.65851059094 0 -13068.6864516348" Size="2952.88831237946 1450.63203178871 882.54025562428" Scope="Public">
            <IndexedSizes>
              <IndexedSize Size="2952.88831237946 1450.63203178871 882.54025562428" />
              <IndexedSize Size="2952.88831237946 1450.63203178871 882.54025562428" />
              <IndexedSize Size="2952.88831237946 1450.63203178871 882.54025562428" />
              <IndexedSize Size="2952.88831237946 1450.63203178871 882.54025562428" />
              <IndexedSize Size="2952.88831237946 1450.63203178871 882.54025562428" />
              <IndexedSize Size="2952.88831237946 1450.63203178871 882.54025562428" />
              <IndexedSize Size="2952.88831237946 1450.63203178871 882.54025562428" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Resource.ResourceState">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="058b36ed-429c-4b02-b099-5c8bd99e8090" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="4d00a968-705b-4378-9470-fd424a6f711b" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="149296e1-b221-4f6e-9ef0-87cd53ccf9a4" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="b479091d-451e-4f0e-a7c7-30f3b9b0fb73" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="3b8a2172-9f5d-40ab-98b9-e63a31dba868" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="4577d29d-5313-4f0a-aa39-293072d270a5" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSource1" Type="FlowSource" Location="-20.8325412322494 -3.33066907387547E-16 0.819977939487488" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource1" Type="FlowNode" Location="-19.8325412322494 -3.33066907387547E-16 0.819977939487488" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ModelEntity1</Property>
              <Property Name="MaximumTime">Math.If(InputFlow == Nothing, Infinity, 0)</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Entity Name="ModelEntity1" Type="ModelEntity" Location="-26.9797616431056 0 0.482425076769091" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <FlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Fixed Name="Shiploader" Type="Resource" Location="-174.905726160171 17.2358264923096 38.6072405167579" Size="64.5346551475517 31.7032098792928 19.2877024206347" Scope="Public">
            <IndexedSizes>
              <IndexedSize Size="64.5346551475517 31.7032098792928 19.2877024206347" />
              <IndexedSize Size="64.5346551475517 31.7032098792928 19.2877024206347" />
              <IndexedSize Size="64.5346551475517 31.7032098792928 19.2877024206347" />
              <IndexedSize Size="64.5346551475517 31.7032098792928 19.2877024206347" />
              <IndexedSize Size="64.5346551475517 31.7032098792928 19.2877024206347" />
              <IndexedSize Size="64.5346551475517 31.7032098792928 19.2877024206347" />
              <IndexedSize Size="64.5346551475517 31.7032098792928 19.2877024206347" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Resource.ResourceState">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="058b36ed-429c-4b02-b099-5c8bd99e8090" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="4d00a968-705b-4378-9470-fd424a6f711b" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="149296e1-b221-4f6e-9ef0-87cd53ccf9a4" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="b479091d-451e-4f0e-a7c7-30f3b9b0fb73" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="3b8a2172-9f5d-40ab-98b9-e63a31dba868" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="4577d29d-5313-4f0a-aa39-293072d270a5" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Node Name="BasicNode1" Type="BasicNode" Location="-14.6108841180966 0 -1.79167689188468" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="BasicNode2" Type="BasicNode" Location="-18.2961333245215 0 -20000" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EnteredAddOnProcess">BasicNode2_Entered</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="FlowNode1" Type="FlowNode" Location="-16.3302743736479 0 2.33341439436447" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
            </Properties>
            <Graphics />
          </Node>
          <Link Name="Connector1" Type="Connector" Size="0 0 0" Scope="Public" Start="BasicNode1" End="ContainerInput@Berth">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Connector2" Type="Connector" Size="0 0 0" Scope="Public" Start="Output@Berth" End="BasicNode1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Connector3" Type="Connector" Size="0 0 0" Scope="Public" Start="Output@Source1" End="BasicNode2">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Connector4" Type="Connector" Size="0 0 0" Scope="Public" Start="BasicNode2" End="Input@Sink1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource1" End="FlowInput@Berth">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector2" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="FlowNode1" End="FlowInput@Berth">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="Path1" Type="Path" Size="20484.79 0 0" Scope="Public" Start="BasicNode2" End="BasicNode1">
            <Points>
              <Point Location="-141.251864445943 0 -520.676499323985" />
              <Point Location="-154.707831324976 0 -493.541758921295" />
              <Point Location="-177.756686546252 0 -472.223268812054" />
              <Point Location="-209.668487594607 0 -456.561628310472" />
              <Point Location="-253.920440861438 0 -437.294813106259" />
              <Point Location="-286.326514647925 0 -417.400703981396" />
              <Point Location="-311.98233032021 0 -388.463401247789" />
              <Point Location="-342.71097958892 0 -322.592289541385" />
              <Point Location="-411.8883552212 0 -188.973540553715" />
              <Point Location="-426.278497083412 0 -64.8000230592545" />
              <Point Location="-421.081361058017 0 -45.7917710822959" />
              <Point Location="-407.922257403313 0 -37.2527919583851" />
              <Point Location="-324.686747987826 0 -6.61880888492612" />
              <Point Location="-301.801649946558 0 -1.48218658659622" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
              <Property Name="AllowPassing">False</Property>
              <Property Name="SpeedLimit" Units="Nautical Miles per Hour">10</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
        </Objects>
        <External>
          <TransferPoints>
            <ExternalNode Name="InputFlow" Location="111.735859117178,0,6665.39302000918" ID="e94a9cdd-268e-444c-924f-65be72652956">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">FlowNode1</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="InitialMaximumFlowRate" Value="Infinity" />
              </InitialValues>
            </ExternalNode>
          </TransferPoints>
        </External>
        <Graphics>
          <FloorLabel Center="-12625.3715309999 81.5449531382328 -15809.9878390263" Width="18856.2152696421" Height="2239.83782047965" ExternallyVisible="True" Locked="True" Text="Ships at Anchor:  {Source1.OutputBuffer.Contents }" />
          <Rectangle Center="-12635.5263703686 -1.81898940354586E-12 -15792.5264836063" Width="19675.0197640904" Height="2810.73629243375" ExternallyVisible="True">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="af95d7f4-2f1a-4a66-9ab5-df362f61515b" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="11672.7558326494 81.5449531382328 -16205.6876094904" Width="18856.2152696421" Height="3311.417015125" ExternallyVisible="True" Locked="True" Text="Channel Reserved For: {ChannelAuthority.ResourceOwners.FirstItem}&#xD;&#xA;" />
          <Rectangle Center="11638.6847638703 -1.81898940354586E-12 -16239.1743586463" Width="19675.0197640904" Height="3949.28918674444" ExternallyVisible="True">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="af95d7f4-2f1a-4a66-9ab5-df362f61515b" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <Rectangle Center="-171.85433477453 0 46.3334088447042" Width="496.608327847192" Height="62.2415770901814" ExternallyVisible="True" LineWidth="4" YHeight="10">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="a89a3131-f279-4113-915a-f11b8ad60fef" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="af95d7f4-2f1a-4a66-9ab5-df362f61515b" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <Rectangle Center="-28.7406621439622 -229.936602041606 -11167.8576288731" Width="49835.5344975174" Height="32999.4957193312" ExternallyVisible="True" Locked="True" LineWidth="500" YHeight="20">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="66dbab2d-bbe6-4e41-bc99-60cea6d238ca" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="-12556.9280542039 0 -24744.1597677434" Width="21909.9675745697" Height="3922.74528627668" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Channel Model" />
          <Pie Center="-14140.282620277 0 -1158.55259506835" Width="19792.4268741828" Height="11374.3857727615" ExternallyVisible="True" Locked="True" Title="Berth Utilisation" ListState="Berth.ResourceState" TextScale="1400" />
          <Rectangle Center="14302.9587821488 -1.81898940354586E-12 1149.5742911274" Width="19675.0197640904" Height="3949.28918674444" ExternallyVisible="True">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="af95d7f4-2f1a-4a66-9ab5-df362f61515b" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="14369.9324070452 81.5449531382328 1082.60058449285" Width="18856.2152696421" Height="3311.417015125" ExternallyVisible="True" Locked="True" Text="Cargo Loaded: &#xD;&#xA;{math.round(Math.if(Berth.CurrentFlowContainer == Nothing, 0, Berth.CurrentFlowContainer.Contents.Weight/1000),0)} t&#xD;&#xA;" />
          <Rectangle Center="-87.8008933267137 -32.8864189605506 -9900.3549976871" Width="895.907185028443" Height="19827.255655482" ExternallyVisible="True" Locked="True">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0452c2ae-cc4a-474a-a0bf-1ab13f2df208" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="MineMaterialHandlingModel" Id="93be5772-059f-42c6-ac4e-5404ab3e3b1f" Revision="21" Author="Sales and Support">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <DynamicObjectInstanceProperty Name="ProductEntityType" Category="Product" DefaultValue="null" Required="False" NullString="null" UseDefaultEntity="False" ValidObjectType="Agent" />
          <ExpressionProperty Name="ProductYield" Category="Product" DefaultValue="1" NullString="null" />
          <ExpressionProperty Name="ROMConveyorRate" Category="Rates" DefaultValue="6000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="ProductConveyorRate" Category="Rates" DefaultValue="5000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="TLOLoadingRate" Category="Rates" DefaultValue="5000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="ROMStockpileCapacity" Category="Stockpiles" DefaultValue="50000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ProductStockpileCapacity" Category="Stockpiles" DefaultValue="500000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ROMBinCapacity" Category="Bin Capacity" DefaultValue="300" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="TLOBinCapacity" Category="Bin Capacity" DefaultValue="500" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ProductStockpileInitialContents" Category="Stockpiles" DefaultValue="100000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <Overrides>
            <Override Name="ReportStatistics" Visible="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayName" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="CurrentSizeIndex" Visible="False" />
            <Override Name="TransferInConstraintsType" Visible="False" />
            <Override Name="TransferOutConstraintsType" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="TransferNode" />
          <UsedObject Name="FlowNode" />
          <UsedObject Name="ContainerEntity" />
          <UsedObject Name="Filler" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Processes />
        <Objects>
          <Entity Name="ROMEntity" Type="ModelEntity" Location="-25.8982469478013 -1.66533453693773E-15 -6.66844422257367" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <IndexedSizes>
              <IndexedSize Size="0.5 0.5 0.25" />
              <IndexedSize Size="0.5 0.5 0.25" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="0">
                      <MaterialRef Id="203998cf-1d24-445d-8b5d-c3f4413ae823" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="203998cf-1d24-445d-8b5d-c3f4413ae823" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Fixed Name="ROMBin" Type="Tank" Location="-17.7332761639683 -1.66533453693773E-15 0.324277272307436" Size="1.5000000659115 1.02541471142509 1.00951097244363" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@ROMBin" Type="FlowNode" Location="-18.7332761639683 -1.66533453693773E-15 0.324277272307436" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@ROMBin" Type="FlowNode" Location="-16.6503035375092 -1.66533453693773E-15 0.321056523406069" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate" Units="Metric Tons per Hour">6000</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity">ROMBinCapacity</Property>
              <Property Name="RefillEntityType">ROMEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="0">
                <StackedBar Center="-17.7997637886861 -1.77635683940025E-15 -2.46027460801361" Width="4.88824337890114" Height="4.56910365288969" ExternallyVisible="True" Shape="1" FloorDisplayType="2" Type="Queue" Expression="Entity.Volume" QueueName="FlowContainer.Contents" TotalExpression="Math.If(FlowContainer.Contents &gt; 0, Math.If(FlowContainer.Contents.FirstItem.Entity.Weight &gt; 0, FlowContainer.CurrentWeightCapacity / (FlowContainer.Contents.FirstItem.Entity.Weight / FlowContainer.Contents.FirstItem.Entity.Volume), 0), 0)" />
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="ROMStockpile" Type="Tank" Location="-3.20703217536157 0 0.332501579007788" Size="1.5000000659115 1.02541471142509 1.00951097244363" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@ROMStockpile" Type="FlowNode" Location="-4.19629634569035 0 0.332501579007788" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@ROMStockpile" Type="FlowNode" Location="-2.20703217536157 0 0.332501579007788" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">ROMConveyorRate</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity">ROMStockpileCapacity</Property>
              <Property Name="RefillEntityType">ROMEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="1">
                <StackedBar Center="-4.06242963377948 0 -36.6979262791404" Width="19.8620652587759" Height="71.1314287536469" ExternallyVisible="True" FloorDisplayType="2" Type="Queue" Expression="Entity.Volume" QueueName="FlowContainer.Contents" TotalExpression="Math.If(FlowContainer.Contents &gt; 0, Math.If(FlowContainer.Contents.FirstItem.Entity.Weight &gt; 0, FlowContainer.CurrentWeightCapacity / (FlowContainer.Contents.FirstItem.Entity.Weight / FlowContainer.Contents.FirstItem.Entity.Volume), 0), 0)" />
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="WasteStockpile" Type="Tank" Location="10.9267032710075 0 12.0718903063187" Size="1.5000000659115 1.02541471142509 1.00951097244363" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@WasteStockpile" Type="FlowNode" Location="9.92670327100746 0 12.0718903063187" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@WasteStockpile" Type="FlowNode" Location="11.9267032710075 0 12.0718903063187" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="RefillEntityType">ROMEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="11">
                <StackedBar Center="10.9267035070807 0 10.0718897916377" Width="3" Height="3" ExternallyVisible="True" Shape="1" FloorDisplayType="2" Type="Container" Container="FlowContainer" />
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="ProductStockpile" Type="Tank" Location="68.7024204259209 0 0.341780189429085" Size="1.5000000659115 1.02541471142509 1.00951097244363" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@ProductStockpile" Type="FlowNode" Location="67.7024204259209 0 0.341780189429085" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@ProductStockpile" Type="FlowNode" Location="69.7024204259209 0 0.341780189429085" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">ProductConveyorRate</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity">ProductStockpileCapacity</Property>
              <Property Name="InitialContents">
                <Rows>
                  <Properties>
                    <Property Name="InitialContentEntityType">ProductEntityType</Property>
                    <Property Name="InitialContentUnitType">Weight</Property>
                    <Property Name="InitialContentQuantity">ProductStockpileInitialContents</Property>
                  </Properties>
                </Rows>
              </Property>
              <Property Name="RefillEntityType">ROMEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="2">
                <StackedBar Center="65.7802434471845 0 -36.784727718386" Width="77.5551700380043" Height="71.0853452412496" ExternallyVisible="True" Locked="True" FloorDisplayType="2" Type="Queue" Expression="Entity.Volume" QueueName="FlowContainer.Contents" TotalExpression="Math.If(FlowContainer.Contents &gt; 0, Math.If(FlowContainer.Contents.FirstItem.Entity.Weight &gt; 0, FlowContainer.CurrentWeightCapacity / (FlowContainer.Contents.FirstItem.Entity.Weight / FlowContainer.Contents.FirstItem.Entity.Volume), 0), 0)" />
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="TLOBin" Type="Tank" Location="120.326528716427 -1.11022302462516E-16 0.142773375512679" Size="1.5000000659115 1.02541471142509 1.00951097244363" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@TLOBin" Type="FlowNode" Location="119.326528716427 -1.11022302462516E-16 0.142773375512679" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@TLOBin" Type="FlowNode" Location="121.326528716427 -1.11022302462516E-16 0.142773375512679" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="OutputFlowControlMode">Single Flow (No Splitting)</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">TLOLoadingRate</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity">TLOBinCapacity</Property>
              <Property Name="RefillEntityType">ROMEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="3">
                <StackedBar Center="120.501047391381 -1.11022302462516E-16 -5.23380594678376" Width="7.9737431568427" Height="9.45529508538492" ExternallyVisible="True" Shape="1" FloorDisplayType="2" Type="Queue" Expression="Entity.Volume" QueueName="FlowContainer.Contents" TotalExpression="Math.If(FlowContainer.Contents &gt; 0, Math.If(FlowContainer.Contents.FirstItem.Entity.Weight &gt; 0, FlowContainer.CurrentWeightCapacity / (FlowContainer.Contents.FirstItem.Entity.Weight / FlowContainer.Contents.FirstItem.Entity.Volume), 0), 0)" />
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="TLO" Type="Filler" Location="125.975674177799 -1.11022302462516E-16 -0.351856763978407" Size="1.79999992090078 1.63670219655316 1.01239019889105" Scope="Public">
            <AssociatedNodes>
              <Node Name="ContainerInput@TLO" Type="BasicNode" Location="127.188361848897 -1.11022302462516E-16 -0.958236672648892" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="FlowInput@TLO" Type="FlowNode" Location="124.475674177799 -1.11022302462516E-16 0.148143236021594" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@TLO" Type="TransferNode" Location="127.475674177799 -1.11022302462516E-16 -0.351856763978407" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <IndexedSizes>
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Filler.ResourceState">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="0e4284db-cf32-4bf6-ba80-3f9b43e3ac2d" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="761763d1-d20a-41cc-af77-c43eb9e0324f" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="a93960fa-4872-479e-9563-00f059353d91" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="2a03af2b-d334-4e6c-bb56-775fb6e5c75e" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="4 5 6">
                <Queue Queue="InputBuffer.Contents">
                  <Points>
                    <Point Location="124.975674631074 -1.11022302462516E-16 -0.351856715977189" />
                    <Point Location="121.975674631074 -1.11022302462516E-16 -0.351856715977189" />
                  </Points>
                </Queue>
                <Queue Queue="Processing.Contents">
                  <Points>
                    <Point Location="124.975674631074 -1.11022302462516E-16 -1.35185671597719" />
                    <Point Location="126.975674631074 -1.11022302462516E-16 -1.35185671597719" />
                  </Points>
                </Queue>
                <Queue Queue="OutputBuffer.Contents">
                  <Points>
                    <Point Location="126.975674631074 -1.11022302462516E-16 0.148143284022811" />
                    <Point Location="129.975674631074 -1.11022302462516E-16 0.148143284022811" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="Source1" Type="Source" Location="129.523480784689 -1.11022302462516E-16 -6.22540848343293" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@Source1" Type="TransferNode" Location="131.023480784689 -1.11022302462516E-16 -6.22540848343293" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ContainerEntity1</Property>
              <Property Name="MaximumTime">Math.If(Output == Nothing, Infinity, 0)</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="7">
                <Queue Queue="OutputBuffer.Contents">
                  <Points>
                    <Point Location="130.523481167853 -1.11022302462516E-16 -5.72540847212076" />
                    <Point Location="133.523481167853 -1.11022302462516E-16 -5.72540847212076" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Entity Name="ContainerEntity1" Type="ContainerEntity" Location="126.695277680243 -1.11022302462516E-16 -6.15963631821325" Size="0.5 0.5 0.25" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity" Units="Metric Tons">100</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ContainerEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="55d73438-76c6-476c-9957-c486ab3c78e0" />
                  <FlowDecoration>
                    <MaterialRef Id="e6dd0118-4999-40d6-8492-ec19f4f5faa4" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e6dd0118-4999-40d6-8492-ec19f4f5faa4" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="8">
                <StackedBar Center="126.69527881965 -1.11022302462516E-16 -6.70963649749756" Width="0.6" Height="0.6" Shape="1" FloorDisplayType="2" Type="Container" Container="FlowContainer" />
              </AttachedObjects>
            </Graphics>
          </Entity>
          <Fixed Name="Sink1" Type="Sink" Location="133.173835954382 -1.11022302462516E-16 6.40284723874543" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@Sink1" Type="BasicNode" Location="131.673835954382 -1.11022302462516E-16 6.40284723874543" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="9">
                <Queue Queue="InputBuffer.Contents">
                  <Points>
                    <Point Location="132.173835996538 -1.11022302462516E-16 6.9028473906219" />
                    <Point Location="129.173835996538 -1.11022302462516E-16 6.9028473906219" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSource1" Type="FlowSource" Location="-20.7029649865074 -1.4432899320127E-15 0.365965590457717" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource1" Type="FlowNode" Location="-19.736417831763 -1.4432899320127E-15 0.341122880598504" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">ROMConveyorRate</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ROMEntity</Property>
              <Property Name="MaximumTime">Math.If(Input == Nothing, Infinity, 0)</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSink1" Type="FlowSink" Location="13.4929596341689 0 12.0814388510651" Size="1.49999998972574 1.02541474951797 0.990350564924091" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@FlowSink1" Type="FlowNode" Location="12.4929596341689 0 12.0814388510651" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Entity Name="ProductEntity" Type="ModelEntity" Location="-25.9065431480487 -1.66533453693773E-15 -4.99517315538767" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <IndexedSizes>
              <IndexedSize Size="0.5 0.5 0.25" />
              <IndexedSize Size="0.5 0.5 0.25" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="0">
                      <MaterialRef Id="b078bfee-1cc7-4b4d-ac51-d3988a2a8445" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="b078bfee-1cc7-4b4d-ac51-d3988a2a8445" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Entity Name="WasteEntity" Type="ModelEntity" Location="-25.9080615972611 -1.66533453693773E-15 -3.14758202241032" Size="0.5 0.5 0.25" Scope="Public" DefaultEntity="True" Density="2000">
            <IndexedSizes>
              <IndexedSize Size="0.5 0.5 0.25" />
              <IndexedSize Size="0.5 0.5 0.25" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="0">
                      <MaterialRef Id="e061e709-ca07-4390-81f6-16f233a2890c" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="e061e709-ca07-4390-81f6-16f233a2890c" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Node Name="FlowNode1" Type="FlowNode" Location="9.9751906546667 0 0.307336476146036" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="OutputFlowControlMode">Split Flow</Property>
              <Property Name="FlowSplitAllocationRule">Proportional Based On Link Weights</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="FlowNode2" Type="FlowNode" Location="9.98091667606451 0 0.54954168105661" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
              <Property Name="InitialMaximumFlowRate">ROMConveyorRate</Property>
              <Property Name="InitialDesiredOutputEntityType">WasteEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="FlowNode3" Type="FlowNode" Location="10.2590309280919 0 0.298191831116386" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
              <Property Name="InitialMaximumFlowRate">ROMConveyorRate</Property>
              <Property Name="InitialDesiredOutputEntityType">ProductEntityType</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="FlowNode4" Type="FlowNode" Location="-18.7307614026287 -1.66533453693773E-15 0.99006937625909" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="FlowNode5" Type="FlowNode" Location="121.320661137813 0 1.2477944240413" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
              <Property Name="BoundExternalOutputNode">Output</Property>
            </Properties>
            <Graphics />
          </Node>
          <Link Name="TimePath2" Type="TimePath" Size="8.42 0 0" Scope="Public" Start="Output@TLO" End="Input@Sink1">
            <Points>
              <Point Location="128.076493149856 -1.11022302462516E-16 3.212897225591" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector2" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="FlowNode1" End="FlowNode2">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">1-ProductYield</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector3" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="FlowNode1" End="FlowNode3">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">ProductYield</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Pipe1" Type="Pipe" Size="11.52 2 1" Scope="Public" Start="FlowNode2" End="Input@WasteStockpile">
            <Points>
              <Point Location="10.0028892772597 0 5.84520336257991" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialDesiredSpeed">2.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <PathDecoratorUsage>
                <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
                <RepeatUsages />
              </PathDecoratorUsage>
            </Graphics>
          </Link>
          <Link Name="Pipe2" Type="Pipe" Size="57.44 2 1" Scope="Public" Start="FlowNode3" End="Input@ProductStockpile">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialDesiredSpeed">2.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <PathDecoratorUsage>
                <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
                <RepeatUsages />
              </PathDecoratorUsage>
            </Graphics>
          </Link>
          <Link Name="Pipe3" Type="Pipe" Size="12.18 2 1" Scope="Public" Start="Output@ROMStockpile" End="FlowNode1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialDesiredSpeed">2.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <PathDecoratorUsage>
                <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
                <RepeatUsages />
              </PathDecoratorUsage>
            </Graphics>
          </Link>
          <Link Name="Pipe4" Type="Pipe" Size="49.62 2 1" Scope="Public" Start="Output@ProductStockpile" End="Input@TLOBin">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialDesiredSpeed">2.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <PathDecoratorUsage>
                <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
                <RepeatUsages />
              </PathDecoratorUsage>
            </Graphics>
          </Link>
          <Link Name="FlowConnector4" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@TLOBin" End="FlowInput@TLO">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">Output == nothing</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="TimePath1" Type="TimePath" Size="7.57 0 0" Scope="Public" Start="Output@Source1" End="ContainerInput@TLO">
            <Points>
              <Point Location="131.108002715008 -1.11022302462516E-16 -4.21337217719773" />
              <Point Location="127.851573604716 -1.11022302462516E-16 -2.88805970970892" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource1" End="Input@ROMBin">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector5" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="FlowNode4" End="Input@ROMBin">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="MyPipe1" Type="MyPipe" Size="12.45 2 1" Scope="Public" Start="Output@ROMBin" End="Input@ROMStockpile">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <PathDecoratorUsage>
                <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
                <RepeatUsages />
              </PathDecoratorUsage>
            </Graphics>
          </Link>
          <Link Name="FlowConnector6" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@WasteStockpile" End="Input@FlowSink1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector7" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@TLOBin" End="FlowNode5">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">Output != Nothing</Property>
            </Properties>
            <Graphics />
          </Link>
        </Objects>
        <External>
          <TransferPoints>
            <ExternalNode Name="Input" Location="-34.8748084482024,0,0.118648853480427" ID="6ee19e39-e6d6-4ccc-b578-1cb7a9e477a4">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">FlowNode4</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="InitialMaximumFlowRate" Value="Infinity" />
              </InitialValues>
            </ExternalNode>
            <ExternalNode Name="Output" Location="140.824225825659,0,-0.394852570266435" ID="0e1fa679-bada-4c5a-9b56-eb57a4b80b6a">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="InitialMaximumFlowRate" Value="Infinity" />
              </InitialValues>
            </ExternalNode>
          </TransferPoints>
        </External>
        <Schedules>
          <Schedule Name="StandardWeek" CycleDays="7" StartDate="2011-01-03T00:00:00" Description="Standard Work Week Schedule">
            <DayPatternRefs>
              <DayPatternRef DayNumber="1" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="2" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="3" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="4" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="5" DayPattern="StandardDay" />
            </DayPatternRefs>
          </Schedule>
        </Schedules>
        <DayPatterns>
          <DayPattern Name="StandardDay" Description="Standard 8-5 Work Day">
            <Periods>
              <Period Start="08:00:00" End="12:00:00" Value="1" CostMultiplier="1" />
              <Period Start="13:00:00" End="17:00:00" Value="1" CostMultiplier="1" />
            </Periods>
          </DayPattern>
        </DayPatterns>
        <Graphics>
          <SymbolInstance Center="10.1238834939132 -8.88178419700127E-16 0.0925962486649485" Scale="0.14930718611448" ExternallyVisible="True">
            <SymbolRef Id="0a81ae10-8cca-4a2b-b7de-af0a23a00f44" />
          </SymbolInstance>
          <Rectangle Center="52.6289302240325 -6.4315049309355 -41.322618401841" Width="168.225806189596" Height="111.40198570309" ExternallyVisible="True" Locked="True" LineWidth="2" YHeight="5">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="dccd9578-bbf4-4a77-ae31-74fe2149e1bb" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="2c90b9fa-d990-4171-8ec9-4764f43f099c" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="10.1215128125467 0 -87.830628328102" Width="75.8508369559493" Height="12.0599660159014" ExternallyVisible="True" Locked="True" BackColor="00ffffff" Text="Mine Stockyard Model" />
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="MineModel" Id="ee0bcf22-cc0e-46fc-9d40-c217f5a1c8c1" Revision="16" Author="Sales and Support">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <DynamicObjectInstanceProperty Name="ProductEntityType" Category="Product" DefaultValue="null" NullString="null" ValidObjectType="Agent" />
          <DynamicObjectInstanceProperty Name="ROMEntityType" Category="Entity Generation" DefaultValue="null" NullString="null" ValidObjectType="Agent" />
          <ExpressionProperty Name="ProductYield" Category="Product" DefaultValue="1" NullString="null" />
          <IntegerProperty Name="NumberOfTrucksCircuit1" DisplayName="Number Of Trucks" Category="Truck Circuit 1" DefaultValue="1" NullString="null" />
          <ExpressionProperty Name="TruckLoadingTimeCircuit1" DisplayName="TruckLoadingTime" Category="Truck Circuit 1" DefaultValue="60" NullString="null" UnitType="Time" DefaultUnits="Seconds" />
          <ExpressionProperty Name="TruckUnloadTimeCircuit1" DisplayName="TruckUnloadTime" Category="Truck Circuit 1" DefaultValue="60" NullString="null" UnitType="Time" DefaultUnits="Seconds" />
          <ExpressionProperty Name="TruckWeightCapacityCircuit1" DisplayName="TruckWeightCapacity" Category="Truck Circuit 1" DefaultValue="100" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="TruckWeightCapacityCircuit2" DisplayName="TruckWeightCapacity" Category="Truck Circuit 1" DefaultValue="100" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <IntegerProperty Name="NumberOfTrucksCircuit2" DisplayName="NumberOfTrucks" Category="Truck Circuit 2" DefaultValue="1" NullString="null" />
          <ExpressionProperty Name="TruckLoadTimeCircuit2" DisplayName="TruckLoadTime" Category="Truck Circuit 2" DefaultValue="60" NullString="null" UnitType="Time" DefaultUnits="Seconds" />
          <ExpressionProperty Name="TruckUnloadTimeCircuit2" DisplayName="TruckUnloadTime" Category="Truck Circuit 2" DefaultValue="60" NullString="null" UnitType="Time" DefaultUnits="Seconds" />
          <ExpressionProperty Name="ROMConveyorRate" Category="Rates" DefaultValue="6000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="ProductConveyorRate" Category="Rates" DefaultValue="5000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="TLOLoadingRate" Category="Rates" DefaultValue="5000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="ROMStockpileCapacity" Category="Stockpiles" DefaultValue="50000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ProductStockpileCapacity" Category="Stockpiles" DefaultValue="500000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ROMBinCapacity" Category="Bins" DefaultValue="300" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="TLOBinCapacity" Category="Bins" DefaultValue="500" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ProductStockpileInitialContents" Category="Stockpiles" DefaultValue="100000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="TransferNode" />
          <UsedObject Name="FlowNode" />
          <UsedObject Name="ContainerEntity" />
          <UsedObject Name="Filler" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Processes />
        <Objects>
          <Fixed Name="TruckCircuitModel1" Type="TruckCircuitModel" Location="-98.1994386571031 0 -51.3846181106177" Size="174.45906344857 79.3962645937527 6.59445524215698" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@TruckCircuitModel1" Type="BasicNode" Location="-5.28397830126367 0 -49.9198910637345" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ROMEntityType</Property>
              <Property Name="WeightCapacity">TruckWeightCapacityCircuit1</Property>
              <Property Name="NumberOfTrucks">NumberOfTrucksCircuit1</Property>
              <Property Name="TruckLoadingTime">TruckLoadingTimeCircuit1</Property>
              <Property Name="UnloadTime">TruckUnloadTimeCircuit1</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Entity Name="ModelEntity1" Type="ModelEntity" Location="-163.5929561621 0 -112.019534725509" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <FlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Fixed Name="MaterialHandlingModel1" Type="MineMaterialHandlingModel" Location="95.6623081648263 0 -79.7780454716027" Size="170.225806189596 113.40198570309 4.43478492842032" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@MaterialHandlingModel1" Type="FlowNode" Location="7.84580655581384 0 -37.6572150091014" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="Output@MaterialHandlingModel1" Type="FlowNode" Location="184.997779237335 0 -41.6468085750346" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate" Units="Metric Tons per Hour">5000</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ProductEntityType">ProductEntityType</Property>
              <Property Name="ProductYield">ProductYield</Property>
              <Property Name="ROMConveyorRate">ROMConveyorRate</Property>
              <Property Name="ProductConveyorRate">ProductConveyorRate</Property>
              <Property Name="TLOLoadingRate">TLOLoadingRate</Property>
              <Property Name="ROMStockpileCapacity">ROMStockpileCapacity</Property>
              <Property Name="ProductStockpileCapacity">ProductStockpileCapacity</Property>
              <Property Name="ROMBinCapacity">ROMBinCapacity</Property>
              <Property Name="TLOBinCapacity">TLOBinCapacity</Property>
              <Property Name="ProductStockpileInitialContents">ProductStockpileInitialContents</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="TruckCircuitModel2" Type="TruckCircuitModel" Location="-98.0094592812987 0 35.5566444554357" Size="174.45906344857 79.3962645937527 6.59445524215698" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@TruckCircuitModel2" Type="BasicNode" Location="-5.76389892088192 0 40.3708715648153" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ROMEntityType</Property>
              <Property Name="WeightCapacity">TruckWeightCapacityCircuit2</Property>
              <Property Name="NumberOfTrucks">NumberOfTrucksCircuit2</Property>
              <Property Name="TruckLoadingTime">TruckLoadTimeCircuit2</Property>
              <Property Name="UnloadTime">TruckUnloadTimeCircuit2</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="TLO" Type="Filler" Location="192.461226328032 0 -26.0877976255699" Size="1.79999992090078 1.63670219655316 1.01239019889105" Scope="Public">
            <AssociatedNodes>
              <Node Name="ContainerInput@TLO" Type="BasicNode" Location="190.961226328032 0 -26.5877976255699" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="FlowInput@TLO" Type="FlowNode" Location="190.961226328032 0 -25.5877976255699" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@TLO" Type="TransferNode" Location="193.961226328032 0 -26.0877976255699" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <IndexedSizes>
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Filler.ResourceState">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="70193ba6-0be9-4acd-90b2-86d90e10b56a" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="3ffa66e5-d33c-4d00-84e7-1021775d4e68" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="726b97ea-e96c-4b3a-ae79-0c615da3feb0" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="958215c2-ee27-40a5-a1a9-a01f9ae876b4" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="0 1 2">
                <Queue Queue="InputBuffer.Contents">
                  <Points>
                    <Point Location="191.461229592562 0 -26.0877981595695" />
                    <Point Location="188.461229592562 0 -26.0877981595695" />
                  </Points>
                </Queue>
                <Queue Queue="Processing.Contents">
                  <Points>
                    <Point Location="191.461229592562 0 -27.0877981595695" />
                    <Point Location="193.461229592562 0 -27.0877981595695" />
                  </Points>
                </Queue>
                <Queue Queue="OutputBuffer.Contents">
                  <Points>
                    <Point Location="193.461229592562 0 -25.5877981595695" />
                    <Point Location="196.461229592562 0 -25.5877981595695" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="Source1" Type="Source" Location="202.256564552489 0 -35.4890705191593" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@Source1" Type="TransferNode" Location="203.756564552489 0 -35.4890705191593" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ContainerEntity1</Property>
              <Property Name="MaximumTime">Math.If(Output == Nothing, Infinity, 0)</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="3">
                <Queue Queue="OutputBuffer.Contents">
                  <Points>
                    <Point Location="203.25655759126 0 -34.989071033895" />
                    <Point Location="206.25655759126 0 -34.989071033895" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="Sink1" Type="Sink" Location="236.004870345766 0 -13.3042263524038" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@Sink1" Type="BasicNode" Location="234.504870345766 0 -13.3042263524038" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="4">
                <Queue Queue="InputBuffer.Contents">
                  <Points>
                    <Point Location="235.00487742573 0 -12.8042274191975" />
                    <Point Location="232.00487742573 0 -12.8042274191975" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Entity Name="ContainerEntity1" Type="ContainerEntity" Location="197.832837655189 0 -34.3610861906516" Size="0.5 0.5 0.25" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity" Units="Metric Tons">100</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ContainerEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="264ca011-1a56-4c68-a031-13f5d589d5d9" />
                  <FlowDecoration>
                    <MaterialRef Id="8eab1f51-55bc-4a03-b7b8-b51a1dbe8329" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="8eab1f51-55bc-4a03-b7b8-b51a1dbe8329" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="5">
                <StackedBar Center="197.832842387259 0 -34.9110862605274" Width="0.6" Height="0.6" Shape="1" FloorDisplayType="2" Type="Container" Container="FlowContainer" />
              </AttachedObjects>
            </Graphics>
          </Entity>
          <Node Name="FlowNode1" Type="FlowNode" Location="187.317210088962 0 -24.136273517012" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
              <Property Name="BoundExternalOutputNode">Output</Property>
            </Properties>
            <Graphics />
          </Node>
          <Link Name="Connector1" Type="Connector" Size="0 0 0" Scope="Public" Start="Output@TruckCircuitModel1" End="Input@MaterialHandlingModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Connector2" Type="Connector" Size="0 0 0" Scope="Public" Start="Output@TruckCircuitModel2" End="Input@MaterialHandlingModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Path1" Type="Path" Size="17.28 0 0" Scope="Public" Start="Output@Source1" End="ContainerInput@TLO">
            <Points>
              <Point Location="203.720235781431 0 -32.1676627304061" />
              <Point Location="199.498107236407 0 -29.8595657924591" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="Path2" Type="Path" Size="42.73 0 0" Scope="Public" Start="Output@TLO" End="Input@Sink1">
            <Points>
              <Point Location="199.892172567275 0 -22.5412096477488" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@MaterialHandlingModel1" End="FlowInput@TLO">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">Output == Nothing</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector2" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@MaterialHandlingModel1" End="FlowNode1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">Output != Nothing</Property>
            </Properties>
            <Graphics />
          </Link>
        </Objects>
        <External>
          <TransferPoints>
            <ExternalNode Name="Output" Location="208.565327301446,0,-26.6798431165743" ID="abcc087f-c94f-44d9-9932-cd0def2da5c6">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
        </External>
        <Graphics>
          <Rectangle Center="-3.44849559352602 -10.9708724504222 -46.6167315987473" Width="401.507919158426" Height="291.454219542549" ExternallyVisible="True" Locked="True" LineWidth="5" YHeight="5">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="2c90b9fa-d990-4171-8ec9-4764f43f099c" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="af497585-5dcd-48a2-9c43-a1d188e2fa51" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="-100.647139958535 0 -167.407279017496" Width="190.397231152939" Height="34.4179606419269" ExternallyVisible="True" BackColor="00ffffff" CharsPerLine="10" Text="&lt;b&gt;&lt;white&gt;Mine Model" />
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="PortStockyardModel" Id="978e6ea4-444a-4072-b85f-781f248cc45b" Revision="21" Author="Sales and Support">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="UnloadingRate" Category="Rates" DefaultValue="6000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="ReclaimingRate" Category="Rates" DefaultValue="5000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="ShiploadingRate" Category="Rates" DefaultValue="5000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="StockpileCapacity" Category="Stockpiles" DefaultValue="500000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="DumperBinCapacity" Category="Bin Capacity" DefaultValue="300" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="SurgeBinCapacity" Category="Bin Capacity" DefaultValue="500" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <Overrides>
            <Override Name="ReportStatistics" Visible="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayName" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="CurrentSizeIndex" Visible="False" />
            <Override Name="TransferInConstraintsType" Visible="False" />
            <Override Name="TransferOutConstraintsType" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="TransferNode" />
          <UsedObject Name="FlowNode" />
          <UsedObject Name="ContainerEntity" />
          <UsedObject Name="Filler" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Processes />
        <Objects>
          <Fixed Name="DumpBin" Type="Tank" Location="1.51586353890837 5.32907051820076E-15 0.192919652486915" Size="1.5000000659115 1.02541471142509 1.00951097244363" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@DumpBin" Type="FlowNode" Location="0.515863538908373 5.32907051820076E-15 0.192919652486915" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">UnloadingRate</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@DumpBin" Type="FlowNode" Location="2.60921752129968 5.32907051820076E-15 0.189698903585548" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate" Units="Metric Tons per Hour">UnloadingRate</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity">DumperBinCapacity</Property>
              <Property Name="RefillEntityType">ROMEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="0">
                <StackedBar Center="1.4493757288596 5.21804821573824E-15 -2.59163225176691" Width="4.88824337890114" Height="4.56910365288969" ExternallyVisible="True" Shape="1" FloorDisplayType="2" Type="Queue" Expression="Entity.Volume" QueueName="FlowContainer.Contents" TotalExpression="Math.If(FlowContainer.Contents &gt; 0, Math.If(FlowContainer.Contents.FirstItem.Entity.Weight &gt; 0, FlowContainer.CurrentWeightCapacity / (FlowContainer.Contents.FirstItem.Entity.Weight / FlowContainer.Contents.FirstItem.Entity.Volume), 0), 0)" />
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="ProductStockpile" Type="Tank" Location="500 0 0" Size="1.5000000659115 1.02541471142509 1.00951097244363" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@ProductStockpile" Type="FlowNode" Location="499 0 0" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@ProductStockpile" Type="FlowNode" Location="501 0 0" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">ReclaimingRate</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity">StockpileCapacity</Property>
              <Property Name="RefillEntityType">ROMEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="1">
                <StackedBar Center="497.844495923064 0 -13.4327885926196" Width="959.184480527245" Height="14.9075759389116" ExternallyVisible="True" Type="Queue" Expression="Entity.Volume" QueueName="FlowContainer.Contents" TotalExpression="Math.If(FlowContainer.Contents &gt; 0, Math.If(FlowContainer.Contents.FirstItem.Entity.Weight &gt; 0, FlowContainer.CurrentWeightCapacity / (FlowContainer.Contents.FirstItem.Entity.Weight / FlowContainer.Contents.FirstItem.Entity.Volume), 0), 0)" />
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="TLOBin" Type="Tank" Location="997.394206900869 -1.11022302462516E-16 0.241992086290665" Size="1.5000000659115 1.02541471142509 1.00951097244363" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@TLOBin" Type="FlowNode" Location="996.394206900869 -1.11022302462516E-16 0.241992086290665" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@TLOBin" Type="FlowNode" Location="998.394206900869 -1.11022302462516E-16 0.241992086290665" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="OutputFlowControlMode">Single Flow (No Splitting)</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">ShiploadingRate</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity">SurgeBinCapacity</Property>
              <Property Name="RefillEntityType">ROMEntity</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="2">
                <StackedBar Center="997.56872149178 -1.11022302462516E-16 -5.13458579011414" Width="7.9737431568427" Height="9.45529508538492" ExternallyVisible="True" Shape="1" FloorDisplayType="2" Type="Queue" Expression="Entity.Volume" QueueName="FlowContainer.Contents" TotalExpression="Math.If(FlowContainer.Contents &gt; 0, Math.If(FlowContainer.Contents.FirstItem.Entity.Weight &gt; 0, FlowContainer.CurrentWeightCapacity / (FlowContainer.Contents.FirstItem.Entity.Weight / FlowContainer.Contents.FirstItem.Entity.Volume), 0), 0)" />
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="Shiploader" Type="Filler" Location="1003.04335236224 -1.11022302462516E-16 -0.252638053200428" Size="1.79999992090078 1.63670219655316 1.01239019889105" Scope="Public">
            <AssociatedNodes>
              <Node Name="ContainerInput@Shiploader" Type="BasicNode" Location="1004.25604003334 -1.11022302462516E-16 -0.859017961870919" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="FlowInput@Shiploader" Type="FlowNode" Location="1001.54335236224 -1.11022302462516E-16 0.247361946799572" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="Output@Shiploader" Type="TransferNode" Location="1004.54335236224 -1.11022302462516E-16 -0.252638053200428" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <IndexedSizes>
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
              <IndexedSize Size="1.79999992090078 1.63670219655316 1.01239019889105" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Filler.ResourceState">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="0e4284db-cf32-4bf6-ba80-3f9b43e3ac2d" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="761763d1-d20a-41cc-af77-c43eb9e0324f" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="a93960fa-4872-479e-9563-00f059353d91" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="2a03af2b-d334-4e6c-bb56-775fb6e5c75e" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="3 4 5">
                <Queue Queue="InputBuffer.Contents">
                  <Points>
                    <Point Location="1002.04334873147 -1.11022302462516E-16 -0.252636559307561" />
                    <Point Location="999.043348731473 -1.11022302462516E-16 -0.252636559307561" />
                  </Points>
                </Queue>
                <Queue Queue="Processing.Contents">
                  <Points>
                    <Point Location="1002.04334873147 -1.11022302462516E-16 -1.25263655930756" />
                    <Point Location="1004.04334873147 -1.11022302462516E-16 -1.25263655930756" />
                  </Points>
                </Queue>
                <Queue Queue="OutputBuffer.Contents">
                  <Points>
                    <Point Location="1004.04334873147 -1.11022302462516E-16 0.247363440692439" />
                    <Point Location="1007.04334873147 -1.11022302462516E-16 0.247363440692439" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="Source1" Type="Source" Location="1006.59115896913 -1.11022302462516E-16 -6.12618977265495" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@Source1" Type="TransferNode" Location="1008.09115896913 -1.11022302462516E-16 -6.12618977265495" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ContainerEntity1</Property>
              <Property Name="MaximumTime">Math.If(Output == Nothing, Infinity, 0)</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="6">
                <Queue Queue="OutputBuffer.Contents">
                  <Points>
                    <Point Location="1007.59115526825 -1.11022302462516E-16 -5.62618831545113" />
                    <Point Location="1010.59115526825 -1.11022302462516E-16 -5.62618831545113" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Entity Name="ContainerEntity1" Type="ContainerEntity" Location="1006.79261688163 -1.11022302462516E-16 -7.92482438709628" Size="0.5 0.5 0.25" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapacityUnitType">Weight</Property>
              <Property Name="InitialWeightCapacity" Units="Metric Tons">100</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ContainerEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="55d73438-76c6-476c-9957-c486ab3c78e0" />
                  <FlowDecoration>
                    <MaterialRef Id="e6dd0118-4999-40d6-8492-ec19f4f5faa4" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e6dd0118-4999-40d6-8492-ec19f4f5faa4" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="7">
                <StackedBar Center="1006.79261400923 -1.11022302462516E-16 -8.47482316493987" Width="0.6" Height="0.6" Shape="1" FloorDisplayType="2" Type="Container" Container="FlowContainer" />
              </AttachedObjects>
            </Graphics>
          </Entity>
          <Fixed Name="Sink1" Type="Sink" Location="1010.24151413882 -1.11022302462516E-16 6.50206594952341" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@Sink1" Type="BasicNode" Location="1008.74151413882 -1.11022302462516E-16 6.50206594952341" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="8">
                <Queue Queue="InputBuffer.Contents">
                  <Points>
                    <Point Location="1009.24151009694 -1.11022302462516E-16 7.00206754729153" />
                    <Point Location="1006.24151009694 -1.11022302462516E-16 7.00206754729153" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSource1" Type="FlowSource" Location="-8.18952819571486 6.77236045021346E-15 0.258146826222399" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource1" Type="FlowNode" Location="-7.22298104097046 6.77236045021346E-15 0.233304116363185" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">UnloadingRate</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ProductEntity</Property>
              <Property Name="MaximumTime">Math.If(Input == Nothing, Infinity, 0)</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Entity Name="ProductEntity" Type="ModelEntity" Location="-7.6335965711797 -1.66533453693773E-15 -2.84921285466967" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <IndexedSizes>
              <IndexedSize Size="0.5 0.5 0.25" />
              <IndexedSize Size="0.5 0.5 0.25" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="0">
                      <MaterialRef Id="b078bfee-1cc7-4b4d-ac51-d3988a2a8445" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="b078bfee-1cc7-4b4d-ac51-d3988a2a8445" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Node Name="FlowNode3" Type="FlowNode" Location="10.2590309280919 0 0.298191831116386" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
              <Property Name="InitialMaximumFlowRate">UnloadingRate</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="FlowNode4" Type="FlowNode" Location="0.51837824812741 5.32907051820076E-15 1.81370383288511" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="FlowNode5" Type="FlowNode" Location="998.388339322255 0 1.34701313481928" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
              <Property Name="BoundExternalOutputNode">Output</Property>
            </Properties>
            <Graphics />
          </Node>
          <Link Name="TimePath2" Type="TimePath" Size="8.42 0 0" Scope="Public" Start="Output@Shiploader" End="Input@Sink1">
            <Points>
              <Point Location="1005.1441713343 -1.11022302462516E-16 3.31211593636898" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="Pipe2" Type="Pipe" Size="488.74 2 1" Scope="Public" Start="FlowNode3" End="Input@ProductStockpile">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialDesiredSpeed">2.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <PathDecoratorUsage>
                <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
                <RepeatUsages />
              </PathDecoratorUsage>
            </Graphics>
          </Link>
          <Link Name="Pipe4" Type="Pipe" Size="495.39 2 1" Scope="Public" Start="Output@ProductStockpile" End="Input@TLOBin">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialDesiredSpeed">2.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <PathDecoratorUsage>
                <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
                <RepeatUsages />
              </PathDecoratorUsage>
            </Graphics>
          </Link>
          <Link Name="FlowConnector4" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@TLOBin" End="FlowInput@Shiploader">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">Output == nothing</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="TimePath1" Type="TimePath" Size="7.57 0 0" Scope="Public" Start="Output@Source1" End="ContainerInput@Shiploader">
            <Points>
              <Point Location="1008.17568089945 -1.11022302462516E-16 -4.11415346641975" />
              <Point Location="1004.91925178916 -1.11022302462516E-16 -2.78884099893094" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource1" End="Input@DumpBin">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector5" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="FlowNode4" End="Input@DumpBin">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector7" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@TLOBin" End="FlowNode5">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">Output != Nothing</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector2" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@DumpBin" End="FlowNode3">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
        </Objects>
        <External>
          <TransferPoints>
            <ExternalNode Name="Input" Location="-7.45635249288,0,0.240193540600097" ID="6ee19e39-e6d6-4ccc-b578-1cb7a9e477a4">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">FlowNode4</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="InitialMaximumFlowRate" Value="Infinity" />
              </InitialValues>
            </ExternalNode>
            <ExternalNode Name="Output" Location="1027.8933220444,0,0.129512562774539" ID="0e1fa679-bada-4c5a-9b56-eb57a4b80b6a">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="InitialMaximumFlowRate" Value="Infinity" />
              </InitialValues>
            </ExternalNode>
          </TransferPoints>
        </External>
        <Schedules>
          <Schedule Name="StandardWeek" CycleDays="7" StartDate="2011-01-03T00:00:00" Description="Standard Work Week Schedule">
            <DayPatternRefs>
              <DayPatternRef DayNumber="1" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="2" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="3" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="4" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="5" DayPattern="StandardDay" />
            </DayPatternRefs>
          </Schedule>
        </Schedules>
        <DayPatterns>
          <DayPattern Name="StandardDay" Description="Standard 8-5 Work Day">
            <Periods>
              <Period Start="08:00:00" End="12:00:00" Value="1" CostMultiplier="1" />
              <Period Start="13:00:00" End="17:00:00" Value="1" CostMultiplier="1" />
            </Periods>
          </DayPattern>
        </DayPatterns>
        <Graphics>
          <Rectangle Center="508.627272991441 -6.4315049309355 -20.3218283827816" Width="1025.68344004492" Height="69.4004056649712" ExternallyVisible="True" Locked="True" LineWidth="2" YHeight="5">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="dccd9578-bbf4-4a77-ae31-74fe2149e1bb" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="2c90b9fa-d990-4171-8ec9-4764f43f099c" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="95.8355025538208 0 -36.3192426321397" Width="192.181743767065" Height="32.1440663557031" ExternallyVisible="True" BackColor="00ffffff" CharsPerLine="13" Text="Port Stockyard Model" />
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="PortModel" Id="0cb4ff57-8655-423f-8324-0a7c6448efbe" Revision="2" Author="Sales and Support">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="ShiploadingRate" Category="Rates" DefaultValue="5000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="UnloadingRate" Category="Rates" DefaultValue="6000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="ReclaimingRate" Category="Rates" DefaultValue="5000" NullString="null" UnitType="WeightFlowRate" DefaultUnits="Metric Tons per Hour" />
          <ExpressionProperty Name="StockpileCapacity" Category="Stockpiles" DefaultValue="500000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="DumperBinCapacity" Category="Bins" DefaultValue="300" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="SurgeBinCapacity" Category="Bins" DefaultValue="500" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ShipCapacity" Category="Ships" DefaultValue="160000" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <ExpressionProperty Name="ShipInterarrivalTime" Category="Ships" DefaultValue="Random.Exponential(1)" NullString="null" UnitType="Time" DefaultUnits="Days" />
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="FlowNode" />
          <UsedObject Name="ChannelModel" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Processes />
        <Objects>
          <Fixed Name="PortStockyardModel1" Type="PortStockyardModel" Location="-380.017600638156 -1.29007915461443E-13 -6511.59651218827" Size="1027.68344004492 71.4004056649712 1.00951098320058" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@PortStockyardModel1" Type="FlowNode" Location="-900.614337413598 4.15223411209809E-14 -6491.02454458489" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="Output@PortStockyardModel1" Type="FlowNode" Location="147.287598242622 -1.53210777398272E-14 -6494.57292478285" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="UnloadingRate">UnloadingRate</Property>
              <Property Name="ReclaimingRate">ReclaimingRate</Property>
              <Property Name="ShiploadingRate">ShiploadingRate</Property>
              <Property Name="StockpileCapacity">StockpileCapacity</Property>
              <Property Name="DumperBinCapacity">DumperBinCapacity</Property>
              <Property Name="SurgeBinCapacity">SurgeBinCapacity</Property>
            </Properties>
            <Graphics EditsLocked="True" ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="ChannelModel1" Type="ChannelModel" Location="177.834272484838 6.3664629124105E-12 -17803.9109694462" Size="50335.5344975174 33499.4957193312 81.6449531382328" Scope="Public">
            <AssociatedNodes>
              <Node Name="InputFlow@ChannelModel1" Type="FlowNode" Location="151.795646505383 6.53699316899292E-12 -6543.03315545009" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ShiploadingRate">ShiploadingRate</Property>
              <Property Name="ShipCapacity">ShipCapacity</Property>
              <Property Name="ShipInterarrivalTime">ShipInterarrivalTime</Property>
            </Properties>
            <Graphics EditsLocked="True" ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSource1" Type="FlowSource" Location="-911.172147235249 0 -6493.03845255005" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource1" Type="FlowNode" Location="-910.172147235249 0 -6493.03845255005" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate" Units="Metric Tons per Hour">3000</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">ModelEntity1</Property>
              <Property Name="MaximumTime">Math.If(Input == Nothing, Infinity, 0)</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Entity Name="ModelEntity1" Type="ModelEntity" Location="117.574438129609 0 30.8494647788725" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <FlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Node Name="FlowNode1" Type="FlowNode" Location="-901.436052309021 -1.27897692436818E-13 -6475.203659871" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@PortStockyardModel1" End="InputFlow@ChannelModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector2" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource1" End="Input@PortStockyardModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector3" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="FlowNode1" End="Input@PortStockyardModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
        </Objects>
        <External>
          <TransferPoints>
            <ExternalNode Name="Input" Location="-41895.6273321369,0,-3010.67656842148" ID="5218a4f9-c17a-485d-933c-d1d866452850">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">FlowNode1</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
        </External>
        <Graphics>
          <Rectangle Center="-6487.49796439602 -2599.60444320026 -21567.9640401762" Width="66093.798196495" Height="44538.0270820506" ExternallyVisible="True" LineWidth="500" YHeight="20">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="af497585-5dcd-48a2-9c43-a1d188e2fa51" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="2c90b9fa-d990-4171-8ec9-4764f43f099c" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="-26873.3606366457 0 -40673.2867294992" Width="21909.9675745697" Height="3922.74528627668" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="&lt;b&gt;&lt;white&gt;Port Model" />
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="RailModel" Id="957f1852-4b3c-4343-9d4a-7625619cafda" Revision="21" Author="Sales and Support">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <IntegerState Name="IntegerState1" />
        </States>
        <Events />
        <UsedObjects>
          <UsedObject Name="FlowNode" />
          <UsedObject Name="HopperCar" />
          <UsedObject Name="Locomotive" />
          <UsedObject Name="Dock" />
          <UsedObject Name="ControlNode" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Create" Name="TrainEntity" ID="2">
                <Properties>
                  <Property Name="ObjectInstanceName">TrainEntity</Property>
                </Properties>
                <Exit Name="Original" Type="Primary" NextID="5" />
                <Exit Name="Created" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Transfer" Name="loco" ID="3">
                <Properties>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">Locomotive1[1].RideStation</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="4" />
              </Step>
              <Step Type="SetNode" Name="SetNode1" ID="4">
                <Properties>
                  <Property Name="NodeName">trainEntityProxyDestination</Property>
                </Properties>
              </Step>
              <Step Type="Create" Name="TrainEntity" ID="5">
                <Properties>
                  <Property Name="ObjectInstanceName">TrainEntity</Property>
                </Properties>
                <Exit Name="Original" Type="Primary" NextID="6" />
                <Exit Name="Created" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Create" Name="TrainEntity" ID="6">
                <Properties>
                  <Property Name="ObjectInstanceName">TrainEntity</Property>
                </Properties>
                <Exit Name="Original" Type="Primary" NextID="7" />
                <Exit Name="Created" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Create" Name="TrainEntity" ID="7">
                <Properties>
                  <Property Name="ObjectInstanceName">TrainEntity</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Transfer" Name="loco" ID="8">
                <Properties>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">Locomotive2[1].RideStation</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="loco" ID="9">
                <Properties>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">Locomotive3[1].RideStation</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="loco" ID="10">
                <Properties>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">Locomotive4[1].RideStation</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="4" />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Objects>
          <Fixed Name="Dock_Mine1" Type="Dock" Location="-4000 0 0" Size="0.763747454175153 0.751018329938895 0" Scope="Public">
            <AssociatedNodes>
              <Node Name="OutputFlow@Dock_Mine1" Type="FlowNode" Location="-3999.42718940923 0 0.159114053732817" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="DockNode@Dock_Mine1" Type="ControlNode" Location="-4000.6109979632 0 -0.0318228083116609" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DestinationType">Specific</Property>
                  <Property Name="DestinationNodeName">DockNode@Dock_Port</Property>
                  <Property Name="RideOnTransporter">True</Property>
                  <Property Name="TransporterName">HopperCar1</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="InputFlow@Dock_Mine1" Type="FlowNode" Location="-3999.43469219408 0 -0.311863543008524" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Dock_Mine2" Type="Dock" Location="11000 0 -2000" Size="0.763747454175153 0.751018329938895 0" Scope="Public">
            <AssociatedNodes>
              <Node Name="OutputFlow@Dock_Mine2" Type="FlowNode" Location="11000.5728105908 0 -1999.84088594627" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="DockNode@Dock_Mine2" Type="ControlNode" Location="10999.3890020368 0 -2000.03182280981" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DestinationType">Specific</Property>
                  <Property Name="DestinationNodeName">DockNode@Dock_Port</Property>
                  <Property Name="RideOnTransporter">True</Property>
                  <Property Name="TransporterName">HopperCar2</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="InputFlow@Dock_Mine2" Type="FlowNode" Location="11000.5653078059 0 -2000.31186354301" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Dock_Mine3" Type="Dock" Location="96000 0 4000" Size="0.763747454175153 0.751018329938895 0" Scope="Public">
            <AssociatedNodes>
              <Node Name="OutputFlow@Dock_Mine3" Type="FlowNode" Location="96000.5728105908 0 4000.15911405373" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="DockNode@Dock_Mine3" Type="ControlNode" Location="95999.3690628603 0 3999.96817719019" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DestinationType">Specific</Property>
                  <Property Name="DestinationNodeName">DockNode@Dock_Port</Property>
                  <Property Name="RideOnTransporter">True</Property>
                  <Property Name="TransporterName">HopperCar3</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="InputFlow@Dock_Mine3" Type="FlowNode" Location="96000.5653078059 0 3999.68813645699" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Dock_Mine4" Type="Dock" Location="46000 0 2000" Size="0.763747454175153 0.751018329938895 0" Scope="Public">
            <AssociatedNodes>
              <Node Name="OutputFlow@Dock_Mine4" Type="FlowNode" Location="46000.5728105908 0 2000.15911405373" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="DockNode@Dock_Mine4" Type="ControlNode" Location="45999.3890020368 0 1999.96817719019" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DestinationType">Specific</Property>
                  <Property Name="DestinationNodeName">DockNode@Dock_Port</Property>
                  <Property Name="RideOnTransporter">True</Property>
                  <Property Name="TransporterName">HopperCar4</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="InputFlow@Dock_Mine4" Type="FlowNode" Location="46000.5653078059 0 1999.68813645699" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Dock_Port" Type="Dock" Location="406000 0 0" Size="0.763747454175153 0.751018329938895 0" Scope="Public">
            <AssociatedNodes>
              <Node Name="OutputFlow@Dock_Port" Type="FlowNode" Location="406000.572810591 0 0.159114053732817" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">10000000</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="DockNode@Dock_Port" Type="ControlNode" Location="405999.389002037 0 -0.0318228098109709" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="InputFlow@Dock_Port" Type="FlowNode" Location="406000.565307806 0 -0.311863543008524" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSource1" Type="FlowSource" Location="-4000.43424385352 0 -4.81350731604771" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource1" Type="FlowNode" Location="-3999.43424385352 0 -4.7995498931252" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate" Units="Metric Tons per Hour">4000</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">Product</Property>
              <Property Name="MaximumTime">Math.If(InputFlow_Mine1 == nothing, Infinity, 0)</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Entity Name="Product" Type="ModelEntity" Location="-14622.125 0 -918" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <FlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Transporter Name="HopperCar1" Type="HopperCar" Location="-14642.0419547064 0 -918" Size="10.655 3.15 2.538" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNumberInSystem">200</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNode">ControlNode_Mine1Holding</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
              <Property Name="InitialPickupLocomotive">Locomotive1</Property>
              <Property Name="VolumeCapacity">Infinity</Property>
              <Property Name="WeightCapacity" Units="Metric Tons">100</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="2">
                <StackedBar Center="-14641.972040243 0.855939430766994 -918.076042771968" Width="7.94234991895428" Height="3.12396213937359" ExternallyVisible="True" Type="Queue" Expression="Entity.Volume" QueueName="RideStation.Contents" />
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Transporter Name="HopperCar2" Type="HopperCar" Location="-14642.125 0 -913" Size="10.655 3.15 2.538" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNumberInSystem">200</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNode">ControlNode_Mine2Holding</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
              <Property Name="InitialPickupLocomotive">Locomotive2</Property>
              <Property Name="VolumeCapacity">Infinity</Property>
              <Property Name="WeightCapacity" Units="Metric Tons">100</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="3">
                <StackedBar Center="-14641.9838742275 0.855939430766994 -913.076042904602" Width="7.91386538326515" Height="3.12396213937336" ExternallyVisible="True" Type="Queue" Expression="Entity.Volume" QueueName="RideStation.Contents" />
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Transporter Name="HopperCar3" Type="HopperCar" Location="-14642.125 0 -908" Size="10.655 3.15 2.538" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNumberInSystem">200</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNode">ControlNode_Mine3Holding</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
              <Property Name="InitialPickupLocomotive">Locomotive3</Property>
              <Property Name="VolumeCapacity">Infinity</Property>
              <Property Name="WeightCapacity" Units="Metric Tons">100</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="4">
                <StackedBar Center="-14641.9411474119 0.855939430766994 -908.033316844921" Width="7.82841177619775" Height="3.20941574644962" ExternallyVisible="True" Type="Queue" Expression="Entity.Volume" QueueName="RideStation.Contents" />
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Transporter Name="HopperCar4" Type="HopperCar" Location="-14642.125 0 -903" Size="10.655 3.15 2.538" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNumberInSystem">200</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNode">ControlNode_Mine4Holding</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
              <Property Name="InitialPickupLocomotive">Locomotive4</Property>
              <Property Name="VolumeCapacity">Infinity</Property>
              <Property Name="WeightCapacity" Units="Metric Tons">100</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="5">
                <StackedBar Center="-14641.9411473416 0.855939430766994 -903.076042173431" Width="7.82841177619048" Height="3.12396213937348" ExternallyVisible="True" Type="Queue" Expression="Entity.Volume" QueueName="RideStation.Contents" />
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Fixed Name="FlowSource2" Type="FlowSource" Location="11000 0 -2001.5" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource2" Type="FlowNode" Location="11001 0 -2001.5" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">4000000</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">Product</Property>
              <Property Name="MaximumTime">Math.If(InputFlow_Mine2 == nothing, Infinity, 0)</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSource3" Type="FlowSource" Location="96000 0 3998.5" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource3" Type="FlowNode" Location="96001 0 3998.5" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">4000000</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">Product</Property>
              <Property Name="MaximumTime">Math.If(InputFlow_Mine3 == nothing, Infinity, 0)</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSource4" Type="FlowSource" Location="46000 0 1998.5" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource4" Type="FlowNode" Location="46001 0 1998.5" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">4000000</Property>
                </Properties>
                <Graphics EditsLocked="True" ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">Product</Property>
              <Property Name="MaximumTime">Math.If(InputFlow_Mine4 == nothing, Infinity, 0)</Property>
            </Properties>
            <Graphics EditsLocked="True" ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="FlowSink1" Type="FlowSink" Location="406001.56 0 2" Size="1.49999998972574 1.02541474951797 0.990350564924091" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@FlowSink1" Type="FlowNode" Location="406000.56 0 1.99316086246046" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Transporter Name="Locomotive1" Type="Locomotive" Location="-14661.2945468036 0 -917.833909393157" Size="20.0577224580872 2.90064012125853 4.68587923049927" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNode">ControlNode_Mine1Holding</Property>
              <Property Name="RoutingType">Fixed Route</Property>
              <Property Name="RouteSequence">Mine1</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="6">
                <Queue Queue="RideStation.Contents">
                  <Points>
                    <Point Location="-14647.4621225901 599.238641702249 -914.464084667883" />
                    <Point Location="-20739.5601183436 599.238641702249 -931.06791184171" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Entity Name="TrainEntity" Type="ModelEntity" Location="-17115.8808654269 0 -3814.60718378623" Size="4963.86917035996 1500 2481.93458517997" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <FlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Transporter Name="Locomotive2" Type="Locomotive" Location="-14661.4104826297 0 -913.717234703933" Size="20.0577224580872 2.90064012125853 4.68587923049927" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNode">ControlNode_Mine2Holding</Property>
              <Property Name="RoutingType">Fixed Route</Property>
              <Property Name="RouteSequence">Mine2</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="7">
                <Queue Queue="RideStation.Contents">
                  <Points>
                    <Point Location="-14647.5780584747 599.238641702249 -910.347409840266" />
                    <Point Location="-20739.6760542281 599.238641702249 -926.951237014093" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Transporter Name="Locomotive3" Type="Locomotive" Location="-14661.2445480248 0 -909.434459198706" Size="20.0577224580872 2.90064012125853 4.68587923049927" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNode">ControlNode_Mine3Holding</Property>
              <Property Name="RoutingType">Fixed Route</Property>
              <Property Name="RouteSequence">Mine3</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="8">
                <Queue Queue="RideStation.Contents">
                  <Points>
                    <Point Location="-14647.4121239063 599.238641702249 -906.064634956789" />
                    <Point Location="-20739.5101196597 599.238641702249 -922.668462130616" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Transporter Name="Locomotive4" Type="Locomotive" Location="-14661.5407179129 0 -905.400831098586" Size="20.0577224580872 2.90064012125853 4.68587923049927" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNode">ControlNode_Mine4Holding</Property>
              <Property Name="RoutingType">Fixed Route</Property>
              <Property Name="RouteSequence">Mine4</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="9">
                <Queue Queue="RideStation.Contents">
                  <Points>
                    <Point Location="-14647.7082938255 599.238641702249 -902.031006055251" />
                    <Point Location="-20739.8062895789 599.238641702249 -918.634833229078" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Node Name="ControlNode_Siding1_West" Type="ControlNode" Location="30000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding1_East" Type="ControlNode" Location="34000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding2_West" Type="ControlNode" Location="65000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding2_East" Type="ControlNode" Location="69000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding3_West" Type="ControlNode" Location="100000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding3_East" Type="ControlNode" Location="104000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding4_West" Type="ControlNode" Location="135000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding4_East" Type="ControlNode" Location="139000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding5_West" Type="ControlNode" Location="170000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding5_East" Type="ControlNode" Location="174000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding6_West" Type="ControlNode" Location="205000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding6_East" Type="ControlNode" Location="209000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding7_West" Type="ControlNode" Location="240000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding7_East" Type="ControlNode" Location="244000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding8_West" Type="ControlNode" Location="275000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding8_East" Type="ControlNode" Location="279000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding9_West" Type="ControlNode" Location="310000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding9_East" Type="ControlNode" Location="314000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding10_West" Type="ControlNode" Location="345000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding10_East" Type="ControlNode" Location="349000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding11_West" Type="ControlNode" Location="380000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding11_East" Type="ControlNode" Location="384000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding12_West" Type="ControlNode" Location="100000 0 2000" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding12_East" Type="ControlNode" Location="104000 0 2000" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding13_West" Type="ControlNode" Location="75000 0 2000" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Siding13_East" Type="ControlNode" Location="79000 0 2000" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Mine1Gate" Type="ControlNode" Location="0 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Mine1Holding" Type="ControlNode" Location="-2731.76 0 -5" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Mine2Gate" Type="ControlNode" Location="15000 0 -2000" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Mine2Holding" Type="ControlNode" Location="12268.24 0 -2005" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Mine3Gate" Type="ControlNode" Location="100000 0 4000" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Mine3Holding" Type="ControlNode" Location="97268.24 0 3995" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Mine4Gate" Type="ControlNode" Location="50000 0 2000" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_Mine4Holding" Type="ControlNode" Location="47268.24 0 1995" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_PortGate" Type="ControlNode" Location="400000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="ControlNode_PortHolding" Type="ControlNode" Location="403000 0 0" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Node Name="FlowNode1" Type="FlowNode" Location="-3999.41154353528 0 -0.798485964680336" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="trainEntityProxyDestination" Type="BasicNode" Location="-14700.7251089979 0 -908.20312374403" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="FlowNode2" Type="FlowNode" Location="406000.940956586 0 0.175329369324062" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="BoundExternalOutputNode">OutputFlow</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Link Name="Mine1_To_Siding1" Type="Track" Size="30000 0 0" Scope="Public" Start="ControlNode_Mine1Gate" End="ControlNode_Siding1_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding1_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding1_West" End="ControlNode_Siding1_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding1_To_Siding2" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding1_East" End="ControlNode_Siding2_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding2_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding2_West" End="ControlNode_Siding2_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding2_To_Siding3" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding2_East" End="ControlNode_Siding3_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding3_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding3_West" End="ControlNode_Siding3_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding3_To_Siding4" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding3_East" End="ControlNode_Siding4_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding4_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding4_West" End="ControlNode_Siding4_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding4_To_Siding5" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding4_East" End="ControlNode_Siding5_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding5_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding5_West" End="ControlNode_Siding5_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding5_To_Siding6" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding5_East" End="ControlNode_Siding6_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding6_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding6_West" End="ControlNode_Siding6_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding6_To_Siding7" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding6_East" End="ControlNode_Siding7_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding7_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding7_West" End="ControlNode_Siding7_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding7_To_Siding8" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding7_East" End="ControlNode_Siding8_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding8_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding8_West" End="ControlNode_Siding8_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding8_To_Siding9" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding8_East" End="ControlNode_Siding9_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding9_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding9_West" End="ControlNode_Siding9_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding9_To_Siding10" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding9_East" End="ControlNode_Siding10_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding10_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding10_West" End="ControlNode_Siding10_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding10_To_Siding11" Type="Track" Size="31000 0 0" Scope="Public" Start="ControlNode_Siding10_East" End="ControlNode_Siding11_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding11_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding11_West" End="ControlNode_Siding11_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding11_To_Port" Type="Track" Size="16000 0 0" Scope="Public" Start="ControlNode_Siding11_East" End="ControlNode_PortGate">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine4_To_Siding13" Type="Track" Size="25000 0 0" Scope="Public" Start="ControlNode_Mine4Gate" End="ControlNode_Siding13_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding13_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding13_West" End="ControlNode_Siding13_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding13_To_Siding12" Type="Track" Size="21000 0 0" Scope="Public" Start="ControlNode_Siding13_East" End="ControlNode_Siding12_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding12_Main" Type="Track" Size="4000 0 0" Scope="Public" Start="ControlNode_Siding12_West" End="ControlNode_Siding12_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding12_To_Siding4" Type="Track" Size="31064.45 0 0" Scope="Public" Start="ControlNode_Siding12_East" End="ControlNode_Siding4_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine3_To_Siding12" Type="Track" Size="4472.14 0 0" Scope="Public" Start="ControlNode_Mine3Gate" End="ControlNode_Siding12_East">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine2_To_Siding1" Type="Track" Size="15132.75 0 0" Scope="Public" Start="ControlNode_Mine2Gate" End="ControlNode_Siding1_West">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine1Gate_To_Mine1Holding" Type="Track" Size="2733.83 0 0" Scope="Public" Start="ControlNode_Mine1Gate" End="ControlNode_Mine1Holding">
            <Points>
              <Point Location="-5 0 -5" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine2Gate_To_Mine2Holding" Type="Track" Size="2733.83 0 0" Scope="Public" Start="ControlNode_Mine2Gate" End="ControlNode_Mine2Holding">
            <Points>
              <Point Location="14995 0 -2005" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine3Gate_To_Mine3Holding" Type="Track" Size="2733.83 0 0" Scope="Public" Start="ControlNode_Mine3Gate" End="ControlNode_Mine3Holding">
            <Points>
              <Point Location="99995 0 3995" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine4Gate_To_Mine4Holding" Type="Track" Size="2733.83 0 0" Scope="Public" Start="ControlNode_Mine4Gate" End="ControlNode_Mine4Holding">
            <Points>
              <Point Location="49995 0 1995" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="PortGate_To_PortHolding" Type="Track" Size="3000 0 0" Scope="Public" Start="ControlNode_PortGate" End="ControlNode_PortHolding">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine1Holding_To_Mine1_Loading" Type="Track" Size="3990.27 0 0" Scope="Public" Start="ControlNode_Mine1Holding" End="DockNode@Dock_Mine1">
            <Points>
              <Point Location="-2786.8092903948 0 -7.40350392508162" />
              <Point Location="-2841.43962245003 0 -14.5957235841813" />
              <Point Location="-2895.23522635205 0 -26.5219218429121" />
              <Point Location="-2947.78668507249 0 -43.09133313129" />
              <Point Location="-2998.69405027904 0 -64.1778542245263" />
              <Point Location="-3047.56988618379 0 -89.6210039647117" />
              <Point Location="-3094.04221816346 0 -119.22714461933" />
              <Point Location="-3137.75736371091 0 -152.770955581322" />
              <Point Location="-3178.38262417262 0 -189.997148194961" />
              <Point Location="-3215.60881678626 0 -230.622408656668" />
              <Point Location="-3249.15262774825 0 -274.337554204125" />
              <Point Location="-3278.75876840287 0 -320.809886183791" />
              <Point Location="-3304.20191814306 0 -369.685722088538" />
              <Point Location="-3325.28843923629 0 -420.593087295095" />
              <Point Location="-3341.85785052467 0 -473.144546015532" />
              <Point Location="-3353.7840487834 0 -526.94014991755" />
              <Point Location="-3360.9762684425 0 -581.570481972778" />
              <Point Location="-3363.37977236758 0 -636.619772367582" />
              <Point Location="-3365.8023028022 0 -692.104841476123" />
              <Point Location="-3373.0514571867 0 -747.167635705948" />
              <Point Location="-3385.07206507905 0 -801.389093945143" />
              <Point Location="-3401.77264239494 0 -854.356558156696" />
              <Point Location="-3423.02608765692 0 -905.666913955328" />
              <Point Location="-3448.67064931337 0 -954.929658551372" />
              <Point Location="-3478.51115676547 0 -1001.76987271279" />
              <Point Location="-3512.32050573331 0 -1045.83107412693" />
              <Point Location="-3549.84138665661 0 -1086.77793044613" />
              <Point Location="-3590.78824297582 0 -1124.29881136944" />
              <Point Location="-3634.84944438995 0 -1158.10816033728" />
              <Point Location="-3681.68965855137 0 -1187.94866778937" />
              <Point Location="-3730.95240314742 0 -1213.59322944582" />
              <Point Location="-3782.26275894605 0 -1234.8466747078" />
              <Point Location="-3835.2302231576 0 -1251.5472520237" />
              <Point Location="-3889.4516813968 0 -1263.56785991604" />
              <Point Location="-3944.51447562662 0 -1270.81701430054" />
              <Point Location="-3999.99954473516 0 -1273.23954473516" />
              <Point Location="-4055.4846138437 0 -1270.81701430054" />
              <Point Location="-4110.54740807353 0 -1263.56785991604" />
              <Point Location="-4164.76886631272 0 -1251.5472520237" />
              <Point Location="-4217.73633052428 0 -1234.8466747078" />
              <Point Location="-4269.04668632291 0 -1213.59322944582" />
              <Point Location="-4318.30943091895 0 -1187.94866778937" />
              <Point Location="-4365.14964508037 0 -1158.10816033728" />
              <Point Location="-4409.21084649451 0 -1124.29881136944" />
              <Point Location="-4450.15770281372 0 -1086.77793044613" />
              <Point Location="-4487.67858373702 0 -1045.83107412693" />
              <Point Location="-4521.48793270486 0 -1001.76987271279" />
              <Point Location="-4551.32844015695 0 -954.929658551373" />
              <Point Location="-4576.9730018134 0 -905.666913955329" />
              <Point Location="-4598.22644707538 0 -854.356558156697" />
              <Point Location="-4614.92702439128 0 -801.389093945143" />
              <Point Location="-4626.94763228362 0 -747.167635705948" />
              <Point Location="-4634.19678666812 0 -692.104841476123" />
              <Point Location="-4636.61931710274 0 -636.619772367582" />
              <Point Location="-4634.19678666812 0 -581.13470325904" />
              <Point Location="-4626.94763228362 0 -526.071909029215" />
              <Point Location="-4614.92702439128 0 -471.85045079002" />
              <Point Location="-4598.22644707538 0 -418.882986578467" />
              <Point Location="-4576.9730018134 0 -367.572630779834" />
              <Point Location="-4551.32844015695 0 -318.309886183791" />
              <Point Location="-4521.48793270486 0 -271.46967202237" />
              <Point Location="-4487.67858373702 0 -227.408470608235" />
              <Point Location="-4450.15770281372 0 -186.461614289029" />
              <Point Location="-4409.21084649451 0 -148.940733365727" />
              <Point Location="-4365.14964508038 0 -115.131384397885" />
              <Point Location="-4318.30943091895 0 -85.2908769457896" />
              <Point Location="-4269.04668632291 0 -59.6463152893431" />
              <Point Location="-4217.73633052428 0 -38.3928700273605" />
              <Point Location="-4164.76886631272 0 -21.6922927114668" />
              <Point Location="-4110.54740807353 0 -9.6716848191204" />
              <Point Location="-4055.4846138437 0 -2.42253043462301" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine2Holding_To_Mine2_Loading" Type="Track" Size="3990.27 0 0" Scope="Public" Start="ControlNode_Mine2Holding" End="DockNode@Dock_Mine2">
            <Points>
              <Point Location="12213.1907096052 0 -2007.40350392508" />
              <Point Location="12158.56037755 0 -2014.59572358418" />
              <Point Location="12104.764773648 0 -2026.52192184291" />
              <Point Location="12052.2133149275 0 -2043.09133313129" />
              <Point Location="12001.305949721 0 -2064.17785422453" />
              <Point Location="11952.4301138162 0 -2089.62100396471" />
              <Point Location="11905.9577818365 0 -2119.22714461933" />
              <Point Location="11862.2426362891 0 -2152.77095558132" />
              <Point Location="11821.6173758274 0 -2189.99714819496" />
              <Point Location="11784.3911832137 0 -2230.62240865667" />
              <Point Location="11750.8473722517 0 -2274.33755420412" />
              <Point Location="11721.2412315971 0 -2320.80988618379" />
              <Point Location="11695.7980818569 0 -2369.68572208854" />
              <Point Location="11674.7115607637 0 -2420.5930872951" />
              <Point Location="11658.1421494753 0 -2473.14454601553" />
              <Point Location="11646.2159512166 0 -2526.94014991755" />
              <Point Location="11639.0237315575 0 -2581.57048197278" />
              <Point Location="11636.6202276324 0 -2636.61977236758" />
              <Point Location="11634.1976971978 0 -2692.10484147612" />
              <Point Location="11626.9485428133 0 -2747.16763570595" />
              <Point Location="11614.927934921 0 -2801.38909394514" />
              <Point Location="11598.2273576051 0 -2854.3565581567" />
              <Point Location="11576.9739123431 0 -2905.66691395533" />
              <Point Location="11551.3293506866 0 -2954.92965855137" />
              <Point Location="11521.4888432345 0 -3001.76987271279" />
              <Point Location="11487.6794942667 0 -3045.83107412693" />
              <Point Location="11450.1586133434 0 -3086.77793044613" />
              <Point Location="11409.2117570242 0 -3124.29881136944" />
              <Point Location="11365.15055561 0 -3158.10816033728" />
              <Point Location="11318.3103414486 0 -3187.94866778937" />
              <Point Location="11269.0475968526 0 -3213.59322944582" />
              <Point Location="11217.737241054 0 -3234.8466747078" />
              <Point Location="11164.7697768424 0 -3251.5472520237" />
              <Point Location="11110.5483186032 0 -3263.56785991604" />
              <Point Location="11055.4855243734 0 -3270.81701430054" />
              <Point Location="11000.0004552648 0 -3273.23954473516" />
              <Point Location="10944.5153861563 0 -3270.81701430054" />
              <Point Location="10889.4525919265 0 -3263.56785991604" />
              <Point Location="10835.2311336873 0 -3251.5472520237" />
              <Point Location="10782.2636694757 0 -3234.8466747078" />
              <Point Location="10730.9533136771 0 -3213.59322944582" />
              <Point Location="10681.690569081 0 -3187.94866778937" />
              <Point Location="10634.8503549196 0 -3158.10816033728" />
              <Point Location="10590.7891535055 0 -3124.29881136944" />
              <Point Location="10549.8422971863 0 -3086.77793044613" />
              <Point Location="10512.321416263 0 -3045.83107412693" />
              <Point Location="10478.5120672951 0 -3001.76987271279" />
              <Point Location="10448.671559843 0 -2954.92965855137" />
              <Point Location="10423.0269981866 0 -2905.66691395533" />
              <Point Location="10401.7735529246 0 -2854.3565581567" />
              <Point Location="10385.0729756087 0 -2801.38909394514" />
              <Point Location="10373.0523677164 0 -2747.16763570595" />
              <Point Location="10365.8032133319 0 -2692.10484147612" />
              <Point Location="10363.3806828973 0 -2636.61977236758" />
              <Point Location="10365.8032133319 0 -2581.13470325904" />
              <Point Location="10373.0523677164 0 -2526.07190902922" />
              <Point Location="10385.0729756087 0 -2471.85045079002" />
              <Point Location="10401.7735529246 0 -2418.88298657847" />
              <Point Location="10423.0269981866 0 -2367.57263077983" />
              <Point Location="10448.671559843 0 -2318.30988618379" />
              <Point Location="10478.5120672951 0 -2271.46967202237" />
              <Point Location="10512.321416263 0 -2227.40847060823" />
              <Point Location="10549.8422971863 0 -2186.46161428903" />
              <Point Location="10590.7891535055 0 -2148.94073336573" />
              <Point Location="10634.8503549196 0 -2115.13138439788" />
              <Point Location="10681.690569081 0 -2085.29087694579" />
              <Point Location="10730.9533136771 0 -2059.64631528934" />
              <Point Location="10782.2636694757 0 -2038.39287002736" />
              <Point Location="10835.2311336873 0 -2021.69229271147" />
              <Point Location="10889.4525919265 0 -2009.67168481912" />
              <Point Location="10944.5153861563 0 -2002.42253043462" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine3Holding_To_Mine3_Loading" Type="Track" Size="3990.25 0 0" Scope="Public" Start="ControlNode_Mine3Holding" End="DockNode@Dock_Mine3">
            <Points>
              <Point Location="97213.1907096052 0 3992.59649607492" />
              <Point Location="97158.56037755 0 3985.40427641582" />
              <Point Location="97104.764773648 0 3973.47807815709" />
              <Point Location="97052.2133149275 0 3956.90866686871" />
              <Point Location="97001.305949721 0 3935.82214577547" />
              <Point Location="96952.4301138162 0 3910.37899603529" />
              <Point Location="96905.9577818366 0 3880.77285538067" />
              <Point Location="96862.2426362891 0 3847.22904441868" />
              <Point Location="96821.6173758274 0 3810.00285180504" />
              <Point Location="96784.3911832138 0 3769.37759134333" />
              <Point Location="96750.8473722518 0 3725.66244579588" />
              <Point Location="96721.2412315971 0 3679.19011381621" />
              <Point Location="96695.7980818569 0 3630.31427791146" />
              <Point Location="96674.7115607637 0 3579.4069127049" />
              <Point Location="96658.1421494753 0 3526.85545398447" />
              <Point Location="96646.2159512166 0 3473.05985008245" />
              <Point Location="96639.0237315575 0 3418.42951802722" />
              <Point Location="96636.6202276324 0 3363.38022763242" />
              <Point Location="96634.1976971978 0 3307.89515852388" />
              <Point Location="96626.9485428133 0 3252.83236429405" />
              <Point Location="96614.927934921 0 3198.61090605486" />
              <Point Location="96598.2273576051 0 3145.6434418433" />
              <Point Location="96576.9739123431 0 3094.33308604467" />
              <Point Location="96551.3293506866 0 3045.07034144863" />
              <Point Location="96521.4888432345 0 2998.23012728721" />
              <Point Location="96487.6794942667 0 2954.16892587307" />
              <Point Location="96450.1586133434 0 2913.22206955387" />
              <Point Location="96409.2117570242 0 2875.70118863056" />
              <Point Location="96365.15055561 0 2841.89183966272" />
              <Point Location="96318.3103414486 0 2812.05133221063" />
              <Point Location="96269.0475968526 0 2786.40677055418" />
              <Point Location="96217.737241054 0 2765.1533252922" />
              <Point Location="96164.7697768424 0 2748.4527479763" />
              <Point Location="96110.5483186032 0 2736.43214008396" />
              <Point Location="96055.4855243734 0 2729.18298569946" />
              <Point Location="96000.0004552648 0 2726.76045526484" />
              <Point Location="95944.5153861563 0 2729.18298569946" />
              <Point Location="95889.4525919265 0 2736.43214008396" />
              <Point Location="95835.2311336873 0 2748.4527479763" />
              <Point Location="95782.2636694757 0 2765.1533252922" />
              <Point Location="95730.9533136771 0 2786.40677055418" />
              <Point Location="95681.6905690811 0 2812.05133221063" />
              <Point Location="95634.8503549196 0 2841.89183966272" />
              <Point Location="95590.7891535055 0 2875.70118863056" />
              <Point Location="95549.8422971863 0 2913.22206955387" />
              <Point Location="95512.321416263 0 2954.16892587307" />
              <Point Location="95478.5120672951 0 2998.23012728721" />
              <Point Location="95448.671559843 0 3045.07034144863" />
              <Point Location="95423.0269981866 0 3094.33308604467" />
              <Point Location="95401.7735529246 0 3145.6434418433" />
              <Point Location="95385.0729756087 0 3198.61090605486" />
              <Point Location="95373.0523677164 0 3252.83236429405" />
              <Point Location="95365.8032133319 0 3307.89515852388" />
              <Point Location="95363.3806828973 0 3363.38022763242" />
              <Point Location="95365.8032133319 0 3418.86529674096" />
              <Point Location="95373.0523677164 0 3473.92809097079" />
              <Point Location="95385.0729756087 0 3528.14954920998" />
              <Point Location="95401.7735529246 0 3581.11701342153" />
              <Point Location="95423.0269981866 0 3632.42736922017" />
              <Point Location="95448.671559843 0 3681.69011381621" />
              <Point Location="95478.5120672951 0 3728.53032797763" />
              <Point Location="95512.321416263 0 3772.59152939177" />
              <Point Location="95549.8422971863 0 3813.53838571097" />
              <Point Location="95590.7891535055 0 3851.05926663427" />
              <Point Location="95634.8503549196 0 3884.86861560212" />
              <Point Location="95681.6905690811 0 3914.70912305421" />
              <Point Location="95730.9533136771 0 3940.35368471066" />
              <Point Location="95782.2636694757 0 3961.60712997264" />
              <Point Location="95835.2311336873 0 3978.30770728853" />
              <Point Location="95889.4525919265 0 3990.32831518088" />
              <Point Location="95944.5153861563 0 3997.57746956538" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine4Holding_To_Mine4_Loading" Type="Track" Size="3990.27 0 0" Scope="Public" Start="ControlNode_Mine4Holding" End="DockNode@Dock_Mine4">
            <Points>
              <Point Location="47213.1907096052 0 1992.59649607492" />
              <Point Location="47158.56037755 0 1985.40427641582" />
              <Point Location="47104.7647736479 0 1973.47807815709" />
              <Point Location="47052.2133149275 0 1956.90866686871" />
              <Point Location="47001.305949721 0 1935.82214577547" />
              <Point Location="46952.4301138162 0 1910.37899603529" />
              <Point Location="46905.9577818365 0 1880.77285538067" />
              <Point Location="46862.2426362891 0 1847.22904441868" />
              <Point Location="46821.6173758274 0 1810.00285180504" />
              <Point Location="46784.3911832137 0 1769.37759134333" />
              <Point Location="46750.8473722517 0 1725.66244579587" />
              <Point Location="46721.2412315971 0 1679.19011381621" />
              <Point Location="46695.7980818569 0 1630.31427791146" />
              <Point Location="46674.7115607637 0 1579.4069127049" />
              <Point Location="46658.1421494753 0 1526.85545398447" />
              <Point Location="46646.2159512166 0 1473.05985008245" />
              <Point Location="46639.0237315575 0 1418.42951802722" />
              <Point Location="46636.6202276324 0 1363.38022763242" />
              <Point Location="46634.1976971978 0 1307.89515852388" />
              <Point Location="46626.9485428133 0 1252.83236429405" />
              <Point Location="46614.927934921 0 1198.61090605486" />
              <Point Location="46598.2273576051 0 1145.6434418433" />
              <Point Location="46576.9739123431 0 1094.33308604467" />
              <Point Location="46551.3293506866 0 1045.07034144863" />
              <Point Location="46521.4888432345 0 998.230127287207" />
              <Point Location="46487.6794942667 0 954.168925873072" />
              <Point Location="46450.1586133434 0 913.222069553866" />
              <Point Location="46409.2117570242 0 875.701188630564" />
              <Point Location="46365.15055561 0 841.891839662722" />
              <Point Location="46318.3103414486 0 812.051332210626" />
              <Point Location="46269.0475968526 0 786.40677055418" />
              <Point Location="46217.737241054 0 765.153325292198" />
              <Point Location="46164.7697768424 0 748.452747976304" />
              <Point Location="46110.5483186032 0 736.432140083957" />
              <Point Location="46055.4855243734 0 729.18298569946" />
              <Point Location="46000.0004552648 0 726.760455264837" />
              <Point Location="45944.5153861563 0 729.18298569946" />
              <Point Location="45889.4525919265 0 736.432140083957" />
              <Point Location="45835.2311336873 0 748.452747976304" />
              <Point Location="45782.2636694757 0 765.153325292198" />
              <Point Location="45730.9533136771 0 786.40677055418" />
              <Point Location="45681.690569081 0 812.051332210627" />
              <Point Location="45634.8503549196 0 841.891839662722" />
              <Point Location="45590.7891535055 0 875.701188630564" />
              <Point Location="45549.8422971863 0 913.222069553865" />
              <Point Location="45512.321416263 0 954.168925873072" />
              <Point Location="45478.5120672951 0 998.230127287207" />
              <Point Location="45448.671559843 0 1045.07034144863" />
              <Point Location="45423.0269981866 0 1094.33308604467" />
              <Point Location="45401.7735529246 0 1145.6434418433" />
              <Point Location="45385.0729756087 0 1198.61090605486" />
              <Point Location="45373.0523677164 0 1252.83236429405" />
              <Point Location="45365.8032133319 0 1307.89515852388" />
              <Point Location="45363.3806828973 0 1363.38022763242" />
              <Point Location="45365.8032133319 0 1418.86529674096" />
              <Point Location="45373.0523677164 0 1473.92809097079" />
              <Point Location="45385.0729756087 0 1528.14954920998" />
              <Point Location="45401.7735529246 0 1581.11701342153" />
              <Point Location="45423.0269981866 0 1632.42736922017" />
              <Point Location="45448.671559843 0 1681.69011381621" />
              <Point Location="45478.5120672951 0 1728.53032797763" />
              <Point Location="45512.321416263 0 1772.59152939177" />
              <Point Location="45549.8422971863 0 1813.53838571097" />
              <Point Location="45590.7891535055 0 1851.05926663427" />
              <Point Location="45634.8503549196 0 1884.86861560212" />
              <Point Location="45681.690569081 0 1914.70912305421" />
              <Point Location="45730.9533136771 0 1940.35368471066" />
              <Point Location="45782.2636694757 0 1961.60712997264" />
              <Point Location="45835.2311336873 0 1978.30770728853" />
              <Point Location="45889.4525919265 0 1990.32831518088" />
              <Point Location="45944.5153861563 0 1997.57746956538" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="PortHolding_To__Port_Unloading" Type="Track" Size="2999.39 0 0" Scope="Public" Start="ControlNode_PortHolding" End="DockNode@Dock_Port">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine1_Loading_To_Mine1Gate" Type="Track" Size="4000.61 0 0" Scope="Public" Start="DockNode@Dock_Mine1" End="ControlNode_Mine1Gate">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine2_Loading_To_Mine2Gate" Type="Track" Size="4000.61 0 0" Scope="Public" Start="DockNode@Dock_Mine2" End="ControlNode_Mine2Gate">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine3_Loading_To_Mine3Gate" Type="Track" Size="4000.63 0 0" Scope="Public" Start="DockNode@Dock_Mine3" End="ControlNode_Mine3Gate">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Mine4_Loading_To_Mine4Gate" Type="Track" Size="4000.61 0 0" Scope="Public" Start="DockNode@Dock_Mine4" End="ControlNode_Mine4Gate">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Port_Unloading_To_PortGate" Type="Track" Size="8725.32 0 0" Scope="Public" Start="DockNode@Dock_Port" End="ControlNode_PortGate">
            <Points>
              <Point Location="406055.485069109 0 2.4225304346229" />
              <Point Location="406110.547863338 0 9.67168481912017" />
              <Point Location="406164.769321578 0 21.6922927114668" />
              <Point Location="406217.736785789 0 38.3928700273605" />
              <Point Location="406269.047141588 0 59.6463152893429" />
              <Point Location="406318.309886184 0 85.2908769457893" />
              <Point Location="406365.150100345 0 115.131384397885" />
              <Point Location="406409.211301759 0 148.940733365727" />
              <Point Location="406450.158158079 0 186.461614289028" />
              <Point Location="406487.679039002 0 227.408470608235" />
              <Point Location="406521.48838797 0 271.46967202237" />
              <Point Location="406551.328895422 0 318.309886183791" />
              <Point Location="406576.973457078 0 367.572630779834" />
              <Point Location="406598.22690234 0 418.882986578467" />
              <Point Location="406614.927479656 0 471.85045079002" />
              <Point Location="406626.948087548 0 526.071909029215" />
              <Point Location="406634.197241933 0 581.13470325904" />
              <Point Location="406636.619772368 0 636.619772367581" />
              <Point Location="406634.197241933 0 692.104841476123" />
              <Point Location="406626.948087548 0 747.167635705948" />
              <Point Location="406614.927479656 0 801.389093945143" />
              <Point Location="406598.22690234 0 854.356558156696" />
              <Point Location="406576.973457078 0 905.666913955328" />
              <Point Location="406551.328895422 0 954.929658551372" />
              <Point Location="406521.48838797 0 1001.76987271279" />
              <Point Location="406487.679039002 0 1045.83107412693" />
              <Point Location="406450.158158079 0 1086.77793044613" />
              <Point Location="406409.211301759 0 1124.29881136944" />
              <Point Location="406365.150100345 0 1158.10816033728" />
              <Point Location="406318.309886184 0 1187.94866778937" />
              <Point Location="406269.047141588 0 1213.59322944582" />
              <Point Location="406217.736785789 0 1234.8466747078" />
              <Point Location="406164.769321578 0 1251.5472520237" />
              <Point Location="406110.547863338 0 1263.56785991604" />
              <Point Location="406055.485069109 0 1270.81701430054" />
              <Point Location="406000 0 1273.23954473516" />
              <Point Location="405944.514930891 0 1270.81701430054" />
              <Point Location="405889.452136662 0 1263.56785991604" />
              <Point Location="405835.230678422 0 1251.5472520237" />
              <Point Location="405782.263214211 0 1234.8466747078" />
              <Point Location="405730.952858412 0 1213.59322944582" />
              <Point Location="405681.690113816 0 1187.94866778937" />
              <Point Location="405634.849899655 0 1158.10816033728" />
              <Point Location="405590.788698241 0 1124.29881136944" />
              <Point Location="405549.841841921 0 1086.77793044613" />
              <Point Location="405512.320960998 0 1045.83107412693" />
              <Point Location="405478.51161203 0 1001.76987271279" />
              <Point Location="405448.671104578 0 954.929658551372" />
              <Point Location="405423.026542922 0 905.666913955328" />
              <Point Location="405401.77309766 0 854.356558156696" />
              <Point Location="405385.072520344 0 801.389093945143" />
              <Point Location="405373.051912452 0 747.167635705948" />
              <Point Location="405365.802758067 0 692.104841476123" />
              <Point Location="405363.380227632 0 636.619772367581" />
              <Point Location="405360.976723707 0 581.570481972778" />
              <Point Location="405353.784504048 0 526.94014991755" />
              <Point Location="405341.858305789 0 473.144546015532" />
              <Point Location="405325.288894501 0 420.593087295095" />
              <Point Location="405304.202373408 0 369.685722088538" />
              <Point Location="405278.759223668 0 320.809886183791" />
              <Point Location="405249.153083013 0 274.337554204125" />
              <Point Location="405215.609272051 0 230.622408656668" />
              <Point Location="405178.383079437 0 189.997148194961" />
              <Point Location="405137.757818976 0 152.770955581322" />
              <Point Location="405094.042673428 0 119.22714461933" />
              <Point Location="405047.570341449 0 89.6210039647115" />
              <Point Location="404998.694505544 0 64.1778542245261" />
              <Point Location="404947.787140337 0 43.09133313129" />
              <Point Location="404895.235681617 0 26.5219218429122" />
              <Point Location="404841.440077715 0 14.5957235841812" />
              <Point Location="404786.80974566 0 7.40350392508162" />
              <Point Location="404731.760455265 0 5" />
              <Point Location="400005 0 5" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding1_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding1_East" End="ControlNode_Siding1_West">
            <Points>
              <Point Location="33980 0 -20" />
              <Point Location="30020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding2_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding2_East" End="ControlNode_Siding2_West">
            <Points>
              <Point Location="68980 0 -20" />
              <Point Location="65020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding3_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding3_East" End="ControlNode_Siding3_West">
            <Points>
              <Point Location="103980 0 -20" />
              <Point Location="100020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding4_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding4_East" End="ControlNode_Siding4_West">
            <Points>
              <Point Location="138980 0 -20" />
              <Point Location="135020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding5_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding5_East" End="ControlNode_Siding5_West">
            <Points>
              <Point Location="173980 0 -20" />
              <Point Location="170020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding6_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding6_East" End="ControlNode_Siding6_West">
            <Points>
              <Point Location="208980 0 -20" />
              <Point Location="205020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding7_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding7_East" End="ControlNode_Siding7_West">
            <Points>
              <Point Location="243980 0 -20" />
              <Point Location="240020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding8_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding8_East" End="ControlNode_Siding8_West">
            <Points>
              <Point Location="278980 0 -20" />
              <Point Location="275020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding9_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding9_East" End="ControlNode_Siding9_West">
            <Points>
              <Point Location="313980 0 -20" />
              <Point Location="310020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding10_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding10_East" End="ControlNode_Siding10_West">
            <Points>
              <Point Location="348980 0 -20" />
              <Point Location="345020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding11_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding11_East" End="ControlNode_Siding11_West">
            <Points>
              <Point Location="383980 0 -20" />
              <Point Location="380020 0 -20" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding12_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding12_East" End="ControlNode_Siding12_West">
            <Points>
              <Point Location="103980 0 1980" />
              <Point Location="100020 0 1980" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Siding13_Passing" Type="Track" Size="4016.57 0 0" Scope="Public" Start="ControlNode_Siding13_East" End="ControlNode_Siding13_West">
            <Points>
              <Point Location="78980 0 1980" />
              <Point Location="75020 0 1980" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector2" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource2" End="InputFlow@Dock_Mine2">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector3" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource3" End="InputFlow@Dock_Mine3">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector4" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource4" End="InputFlow@Dock_Mine4">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics EditsLocked="True" ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector5" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="OutputFlow@Dock_Port" End="Input@FlowSink1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">OutputFlow==Nothing</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource1" End="FlowNode1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="FlowConnector6" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="FlowNode1" End="InputFlow@Dock_Mine1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector7" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="OutputFlow@Dock_Port" End="FlowNode2">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">OutputFlow!=Nothing</Property>
            </Properties>
            <Graphics />
          </Link>
        </Objects>
        <External>
          <TransferPoints>
            <ExternalNode Name="InputFlow_Mine1" Location="-15171.5752127557,0,1820.66813193853" ID="0a5b596b-ab6d-4eb4-a127-213fda1af6c2">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">InputFlow@Dock_Mine1</Property>
              </Properties>
            </ExternalNode>
            <ExternalNode Name="InputFlow_Mine2" Location="11719.2315386886,0,-22793.8283086487" ID="614944f7-6e15-4e9d-ab01-157d53287a9b">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">InputFlow@Dock_Mine2</Property>
              </Properties>
            </ExternalNode>
            <ExternalNode Name="InputFlow_Mine3" Location="96333.3209715813,0,24735.6581857238" ID="1a1ac3a4-da3b-4382-91aa-1c50ff41eda9">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">InputFlow@Dock_Mine3</Property>
              </Properties>
            </ExternalNode>
            <ExternalNode Name="InputFlow_Mine4" Location="46356.2718316023,0,21716.7224703561" ID="a7703699-af55-46c1-8c72-1fce359c6e30">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">InputFlow@Dock_Mine4</Property>
              </Properties>
            </ExternalNode>
            <ExternalNode Name="OutputFlow" Location="422685.771041662,0,-533.799456548061" ID="0645e362-6202-42d5-8241-1a55077d5464">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
        </External>
        <Tables>
          <Table Name="Mine1">
            <Schema>
              <PropertyDefinitions>
                <SequenceDestinationProperty Name="Sequence" DefaultValue="null" NullString="null" />
                <Overrides />
              </PropertyDefinitions>
            </Schema>
            <Rows>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock_Mine1</Property>
                </Properties>
              </Row>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock_Port</Property>
                </Properties>
              </Row>
            </Rows>
          </Table>
          <Table Name="Mine2">
            <Schema>
              <PropertyDefinitions>
                <SequenceDestinationProperty Name="Sequence" DefaultValue="null" NullString="null" />
                <Overrides />
              </PropertyDefinitions>
            </Schema>
            <Rows>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock_Mine2</Property>
                </Properties>
              </Row>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock_Port</Property>
                </Properties>
              </Row>
            </Rows>
          </Table>
          <Table Name="Mine3">
            <Schema>
              <PropertyDefinitions>
                <SequenceDestinationProperty Name="Sequence" DefaultValue="null" NullString="null" />
                <Overrides />
              </PropertyDefinitions>
            </Schema>
            <Rows>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock_Mine3</Property>
                </Properties>
              </Row>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock_Port</Property>
                </Properties>
              </Row>
            </Rows>
          </Table>
          <Table Name="Mine4">
            <Schema>
              <PropertyDefinitions>
                <SequenceDestinationProperty Name="Sequence" DefaultValue="null" NullString="null" />
                <Overrides />
              </PropertyDefinitions>
            </Schema>
            <Rows>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock_Mine4</Property>
                </Properties>
              </Row>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock_Port</Property>
                </Properties>
              </Row>
            </Rows>
          </Table>
        </Tables>
        <Graphics>
          <Rectangle Center="-14581.916287306 -2.22933946430297 -883.722556119129" Width="280.047973953842" Height="96.2813848608449" Locked="True">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="4e8eddfa-703f-4c4f-978d-151e543b8aed" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="-14668.6727233627 0 -947.913358708666" Width="104.455137821435" Height="12.7974837728248" ExternallyVisible="True" Text="Control Panel" />
          <Rectangle Center="-4000.66405744976 -0.356603218015664 2.50895884599305" Width="103.382916476146" Height="53.0230883097782" ExternallyVisible="True" Locked="True" LineWidth="1">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="307fa780-1796-4400-931f-4ad74c894fe4" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="-4014.80923734566 0 -18.1810375877143" Width="71.423794755181" Height="7.74766587174841" ExternallyVisible="True" BackColor="00ffffff" Text="Loader" />
          <Rectangle Center="11002.3442653748 -0.35660321801565 -1999.8858261104" Width="103.382916476146" Height="53.0230883097782" LineWidth="1">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="307fa780-1796-4400-931f-4ad74c894fe4" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="10987.8173918653 0 -2020.82873541997" Width="71.423794755181" Height="7.74766587174841" ExternallyVisible="True" BackColor="00ffffff" Text="Loader" />
          <Rectangle Center="95998.0368549842 -0.35660321801565 3999.20858283963" Width="103.382916476146" Height="53.0230883097782" ExternallyVisible="True" Locked="True" LineWidth="1">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="307fa780-1796-4400-931f-4ad74c894fe4" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="95983.5099814747 0 3978.26567353006" Width="71.423794755181" Height="7.74766587174841" ExternallyVisible="True" BackColor="00ffffff" Text="Loader" />
          <Rectangle Center="46000.2051801372 -0.356603218015664 2001.0610115677" Width="103.382916476146" Height="53.0230883097782" ExternallyVisible="True" Locked="True" LineWidth="1">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="307fa780-1796-4400-931f-4ad74c894fe4" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="45986.6584523133 0 1981.84900865212" Width="71.423794755181" Height="7.74766587174841" ExternallyVisible="True" Locked="True" BackColor="00ffffff" Text="Loader" />
          <Rectangle Center="-2536.6400507833 -1.77019678863505 -560.260980609976" Width="5435.84113324413" Height="2147.93722483598" ExternallyVisible="True" Locked="True" LineWidth="20">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="77c5a0ed-8f5c-44c6-8754-437ab6e6bf05" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="-4678.5774509689 0 -1478.23415211809" Width="959.971944060773" Height="215.993687413674" ExternallyVisible="True" BackColor="00ffffff" CharsPerLine="7" Text="Mine1" />
          <FloorLabel Center="10460.092631407 0 -3426.68858398622" Width="959.971944060773" Height="215.993687413674" ExternallyVisible="True" BackColor="00ffffff" CharsPerLine="7" Text="Mine2" />
          <Rectangle Center="12572.0309083407 -3.40059356089751 -2508.7154124781" Width="5375.84288674033" Height="2147.93722483598" ExternallyVisible="True" Locked="True" LineWidth="20">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="77c5a0ed-8f5c-44c6-8754-437ab6e6bf05" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="95393.9382344259 0 2565.75729793189" Width="959.971944060773" Height="215.993687413674" ExternallyVisible="True" BackColor="00ffffff" CharsPerLine="7" Text="Mine3" />
          <Rectangle Center="97528.5044778054 -24.3182149221354 3466.93095969956" Width="5412.69906476156" Height="2147.93722483598" ExternallyVisible="True" Locked="True" LineWidth="20">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="77c5a0ed-8f5c-44c6-8754-437ab6e6bf05" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="45330.7638041309 0 689.4407618856" Width="959.971944060773" Height="215.993687413674" ExternallyVisible="True" BackColor="00ffffff" CharsPerLine="7" Text="Mine4" />
          <Rectangle Center="47500.9004380322 -12.2201657583555 1599.01417852349" Width="5483.83984580533" Height="2147.93722483598" ExternallyVisible="True" Locked="True" LineWidth="20">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="77c5a0ed-8f5c-44c6-8754-437ab6e6bf05" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <Rectangle Center="403438.521821569 -60.9587696965905 555.996732767343" Width="7270.07324064575" Height="2147.93722483598" ExternallyVisible="True" Locked="True" LineWidth="20">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="77c5a0ed-8f5c-44c6-8754-437ab6e6bf05" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="400448.037792258 0 -370.547616812742" Width="959.971944060773" Height="215.993687413674" ExternallyVisible="True" BackColor="00ffffff" CharsPerLine="7" Text="Port" />
          <FloorLabel Center="32056.6923458699 0 -80535.2043271468" Width="114163.226159739" Height="76660.3306096796" BackColor="d3d3d3" Text="Preset Views:&#xD;&#xA;5: Port&#xD;&#xA;6: Mine4&#xD;&#xA;7: Mine3&#xD;&#xA;8: Mine2&#xD;&#xA;9: Mine1&#xD;&#xA;0: Control Panel" />
          <FloorLabel Center="168297.321770864 0 -81069.8335106553" Width="114163.226159739" Height="76660.3306096796" BackColor="d3d3d3" Text="Trains are shown as green entities when zoomed out, and as locomotives and wagons when zoomed in." />
          <Rectangle Center="32021.4612740098 -33.1147373485637 -37.0746889777699" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="30845.9853712869 0 -484.000422825565" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 1" />
          <Rectangle Center="66978.4810803098 -33.1147373485637 10.2027010718809" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="65803.0051775869 0 -436.723032775914" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 2" />
          <Rectangle Center="76999.0139229556 -33.1147373485637 1834.3893392724" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="75823.5380202327 0 1387.46360542461" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 13" />
          <Rectangle Center="102012.860956508 -33.1147373485637 -89.7527348718572" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="100837.385053785 0 -536.67846871965" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 3" />
          <Rectangle Center="102087.826742684 -33.1147373485637 1719.56551212769" Width="5240.66339963992" Height="1248.94314745587" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="100912.350839961 0 1462.43015800068" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 12" />
          <Rectangle Center="136872.321912031 -33.1147373485637 -114.741593466538" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="135696.846009308 0 -561.667327314333" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 4" />
          <Rectangle Center="171924.54479492 -33.1147373485637 -132.590769371643" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="170749.068892197 0 -579.516503219437" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 5" />
          <Rectangle Center="207158.836705997 -33.1147373485637 -150.804231292833" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="205983.360803274 0 -597.729965140629" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 6" />
          <Rectangle Center="241982.96804342 -33.1147373485637 -223.658050690472" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="240807.492140697 0 -670.583784538267" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 7" />
          <Rectangle Center="277025.653849567 -33.1147373485637 -223.658041933361" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="275850.177946844 0 -670.583775781156" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 8" />
          <Rectangle Center="311922.633345308 -33.1147373485637 -223.658039516653" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="310747.157442585 0 -670.583773364448" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 9" />
          <Rectangle Center="346892.467732706 -33.1147373485637 -223.658038920044" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="345716.991829984 0 -670.583772767841" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 10" />
          <Rectangle Center="382007.998987115 -33.1147373485637 -150.804232031365" Width="5240.66339963991" Height="1628.52390689745" ExternallyVisible="True" Locked="True" LineWidth="50">
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
              <Decoration SurfaceId="0">
                <MaterialRef Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="380832.523084392 0 -597.72996587916" Width="2448.90813067285" Height="440.803463521113" ExternallyVisible="True" Locked="True" BackColor="00ffffff" CharsPerLine="10" Text="Siding 11" />
          <Rectangle Center="204062.985095202 -450.279327542941 118.503786685656" Width="423565.058223423" Height="31581.6052184131" ExternallyVisible="True" Locked="True" LineWidth="2000">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="f436f4f7-70b2-41be-9bde-4e0b57b9614a" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="8ee5a522-06cd-4534-8cd9-397d0192a291" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <Rectangle Center="406000.541415064 -0.356603218015664 -0.143546658130214" Width="103.382916476146" Height="53.0230883097782" ExternallyVisible="True" Locked="True" LineWidth="1">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="307fa780-1796-4400-931f-4ad74c894fe4" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="0433b9a7-8008-486f-b86a-d229bee90f17" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="405988.016096857 0 -19.346626771277" Width="71.423794755181" Height="7.74766587174841" ExternallyVisible="True" Locked="True" BackColor="00ffffff" Text="Unloader" />
          <FloorLabel Center="21371.40944034 0 -9828.93796744787" Width="53100.4487170103" Height="6978.9160366105" ExternallyVisible="True" BackColor="00ffffff" CharsPerLine="15" Text="&lt;b&gt;Rail Model" />
          <NamedViews>
            <NamedView Name="ControlPanel" HotKey="0">
              <Camera Orientation="Top" Location="-14592.141688348 187.811728731183 -897.205352596891" Direction="0 -1 2.22044604925031E-16" Zoom="187.811728731183" />
            </NamedView>
            <NamedView Name="Mine1" HotKey="9">
              <Camera Orientation="Top" Location="-2362.64513592228 3257.90480419329 -629.258964089345" Direction="0 -1 2.22044604925031E-16" Zoom="3257.90480419329" />
            </NamedView>
            <NamedView Name="Mine2" HotKey="8">
              <Camera Orientation="Top" Location="12563.0313827675 3257.90478515625 -2433.71761711447" Direction="0 -1 2.22044604925031E-16" Zoom="3257.90478515625" />
            </NamedView>
            <NamedView Name="Mine3" HotKey="7">
              <Camera Orientation="Top" Location="96485.9081205201 2280.53334960938 3410.23257740187" Direction="0 -1 2.22044604925031E-16" Zoom="2280.53334960938" />
            </NamedView>
            <NamedView Name="Mine4" HotKey="6">
              <Camera Orientation="Top" Location="46657.9249144852 2280.53334960938 1584.31464532378" Direction="0 -1 2.22044604925031E-16" Zoom="2280.53334960938" />
            </NamedView>
            <NamedView Name="Port" HotKey="5">
              <Camera Orientation="Top" Location="404568.428435424 4654.14989237883 383.111149610166" Direction="0 -1 2.22044604925031E-16" Zoom="4654.14989237883" />
            </NamedView>
          </NamedViews>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="TruckCircuitModel" Id="aa1f2a9a-a868-415f-802f-22dac65400f2" Revision="21" Author="Sales and Support">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <DynamicObjectInstanceProperty Name="EntityType" Category="Entity Generation" DefaultValue="null" NullString="null" ValidObjectType="Agent" />
          <ExpressionProperty Name="WeightCapacity" Category="Truck Parameters" DefaultValue="100" NullString="null" UnitType="Weight" DefaultUnits="Metric Tons" />
          <IntegerProperty Name="NumberOfTrucks" Category="Truck Parameters" DefaultValue="1" NullString="null" />
          <ExpressionProperty Name="TruckLoadingTime" DisplayName="TruckLoadTime" Category="Truck Parameters" DefaultValue="60" NullString="null" UnitType="Time" DefaultUnits="Seconds" />
          <ExpressionProperty Name="UnloadTime" DisplayName="TruckUnloadTime" Category="Truck Parameters" DefaultValue="60" NullString="null" UnitType="Time" DefaultUnits="Seconds" />
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="TransferNode" />
          <UsedObject Name="Tanker" />
          <UsedObject Name="Resource" />
          <UsedObject Name="BasicNode" />
          <UsedObject Name="Dock" />
          <UsedObject Name="ControlNode" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Processes>
          <Process Name="BasicNode5_Entered" BeginStepID="2" Category="BasicNode5 AddOn Processes">
            <Properties />
            <Steps>
              <Step Type="Seize" Name="Excavator" ID="2">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">Excavator</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="Path5_Entered" BeginStepID="2" Category="Path5 AddOn Processes">
            <Properties />
            <Steps>
              <Step Type="Release" Name="Excavator" ID="2">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">Excavator</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="Path4_Entered" BeginStepID="2" Category="Path4 AddOn Processes">
            <Properties />
            <Steps>
              <Step Type="Release" Name="unloadingPit" ID="2">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">unloading</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="Path5_ReachedEnd" BeginStepID="2" Category="Path5 AddOn Processes">
            <Properties />
            <Steps>
              <Step Type="Seize" Name="unloadingPit" ID="2">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">unloading</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Objects>
          <Entity Name="RomOre" Type="ModelEntity" Location="-29.6314067845666 0 0.699275342061455" Size="0.5 0.5 0.25" Scope="Public" Density="1800">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <FlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Fixed Name="Excavator" Type="Resource" Location="-33.2370072381065 0 -4.4576869989336" Size="10.9153351783752 4.73624634742737 6.59445524215698" Scope="Public">
            <IndexedSizes>
              <IndexedSize Size="10.9153351783752 4.73624634742737 6.59445524215698" />
              <IndexedSize Size="10.9153351783752 4.73624634742737 6.59445524215698" />
              <IndexedSize Size="10.9153351783752 4.73624634742737 6.59445524215698" />
              <IndexedSize Size="10.9153351783752 4.73624634742737 6.59445524215698" />
              <IndexedSize Size="10.9153351783752 4.73624634742737 6.59445524215698" />
              <IndexedSize Size="10.9153351783752 4.73624634742737 6.59445524215698" />
              <IndexedSize Size="10.9153351783752 4.73624634742737 6.59445524215698" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentSymbolIndex="6" CurrentSymbolExpression="Resource.ResourceState">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="6398e060-868d-4b91-ab2b-4847b4f5f903" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="6398e060-868d-4b91-ab2b-4847b4f5f903" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="1">
                      <MaterialRef Id="dc32c02f-a6da-4522-a70a-b9ac95cb1365" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="dc32c02f-a6da-4522-a70a-b9ac95cb1365" />
                  </FlowDecoration>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="6398e060-868d-4b91-ab2b-4847b4f5f903" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="6398e060-868d-4b91-ab2b-4847b4f5f903" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="1">
                      <MaterialRef Id="04a29220-ff08-4f3e-b11f-67fad146c8c1" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="04a29220-ff08-4f3e-b11f-67fad146c8c1" />
                  </FlowDecoration>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="6398e060-868d-4b91-ab2b-4847b4f5f903" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="1">
                      <MaterialRef Id="e14bed21-6972-48d9-ab73-48a67ff8b683" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="e14bed21-6972-48d9-ab73-48a67ff8b683" />
                  </FlowDecoration>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="6398e060-868d-4b91-ab2b-4847b4f5f903" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="6398e060-868d-4b91-ab2b-4847b4f5f903" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="1">
                      <MaterialRef Id="dc32c02f-a6da-4522-a70a-b9ac95cb1365" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="dc32c02f-a6da-4522-a70a-b9ac95cb1365" />
                  </FlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Sink1" Type="Sink" Location="122.733201882664 0 2.49809060521706" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@Sink1" Type="BasicNode" Location="121.233201882664 0 2.49809060521706" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="0">
                <Queue Queue="InputBuffer.Contents">
                  <Points>
                    <Point Location="121.733201384544 0 2.99809076450765" />
                    <Point Location="118.733201384544 0 2.99809076450765" />
                  </Points>
                </Queue>
              </AttachedObjects>
            </Graphics>
          </Fixed>
          <Transporter Name="Truck1" Type="Tanker" Location="-32.8889449380091 0 -16.5034852490956" Size="12.4590520858765 6.10950088500977 6.91438770294189" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialNumberInSystem">NumberOfTrucks</Property>
              <Property Name="NetworkTurnaroundMethod">Reverse</Property>
              <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
              <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="UnloadTime">UnloadTime</Property>
              <Property Name="InitialNode">BasicNode5</Property>
              <Property Name="RoutingType">Fixed Route</Property>
              <Property Name="RouteSequence">SequenceTable1</Property>
              <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
              <Property Name="VolumeCapacity">Infinity</Property>
              <Property Name="WeightCapacity">WeightCapacity</Property>
            </Properties>
            <Graphics>
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="fc3e0e73-d453-4717-850c-0c599fd47097" />
                </SymbolInstance>
              </SymbolInstances>
              <AttachedObjects IndexList="1">
                <StackedBar Center="-34.0207639007476 5.20870729700373 -16.3284489620064" Width="8.14890115888205" Height="5.72138900743099" Type="Queue" Expression="Entity.Volume" QueueName="RideStation.Contents" />
              </AttachedObjects>
            </Graphics>
          </Transporter>
          <Fixed Name="FlowSource1" Type="FlowSource" Location="-30.1038832676632 2.22044604925031E-16 2.12067390912847" Size="1.5000000659115 1.02541474951797 0.99035049319138" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@FlowSource1" Type="FlowNode" Location="-29.1038832676632 2.22044604925031E-16 2.12067390912847" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EntityType">EntityType</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Dock1" Type="Dock" Location="-25.5437694882234 0 2.4178720275567" Size="0.763747454175153 0.751018329938895 0" Scope="Public">
            <AssociatedNodes>
              <Node Name="OutputFlow@Dock1" Type="FlowNode" Location="-26.3379878829671 0 2.55923245810098" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="DockNode@Dock1" Type="ControlNode" Location="-24.1650960272489 0 2.38604921774573" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DestinationType">Specific</Property>
                  <Property Name="DestinationNodeName">TransferNode1</Property>
                  <Property Name="RideOnTransporter">True</Property>
                  <Property Name="TransporterName">Truck1</Property>
                  <Property Name="TransporterReservationMethod">Reserve Best</Property>
                  <Property Name="TransporterSelectionGoal">Smallest Value</Property>
                </Properties>
                <Graphics />
              </Node>
              <Node Name="InputFlow@Dock1" Type="FlowNode" Location="-26.4165051605729 0 2.10600848454817" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="unloading" Type="Resource" Location="91.4098827446954 0 6.41508320215518" Size="1.99999996042496 0.982517352249853 0.597747117262177" Scope="Public">
            <IndexedSizes>
              <IndexedSize Size="1.99999996042496 0.982517352249853 0.597747117262177" />
              <IndexedSize Size="1.99999996042496 0.982517352249853 0.597747117262177" />
              <IndexedSize Size="1.99999996042496 0.982517352249853 0.597747117262177" />
              <IndexedSize Size="1.99999996042496 0.982517352249853 0.597747117262177" />
              <IndexedSize Size="1.99999996042496 0.982517352249853 0.597747117262177" />
              <IndexedSize Size="1.99999996042496 0.982517352249853 0.597747117262177" />
              <IndexedSize Size="1.99999996042496 0.982517352249853 0.597747117262177" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Resource.ResourceState">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="44dccd2c-5b9a-48eb-8104-a1c9b8d7d88a" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="f61ef12e-5ca5-4206-8f4c-20cd7a4a6856" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="cfcf5fc8-f4f8-4430-bf32-54de28114337" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="e95bfe65-d2ed-411f-9dd2-35fd43d251ff" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="fc45ea5f-7a88-4d33-ba59-013d9c0d18ea" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="a3fe4d58-8668-4a93-8974-d42796f90047" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Node Name="BasicNode1" Type="BasicNode" Location="86.1774040512669 0 26.1162949343849" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="BasicNode2" Type="BasicNode" Location="86.1774040512669 0 9.30868439323832" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="BasicNode3" Type="BasicNode" Location="97.5645677165961 0 2.53765293786304" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="TransferNode1" Type="TransferNode" Location="118.190906643484 0 2.58087440849966" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DestinationNodeName">Input@Sink1</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="BasicNode4" Type="BasicNode" Location="121.241216876222 0 3.54338120885595" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="BoundExternalOutputNode">Output</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="BasicNode5" Type="BasicNode" Location="-3.70759018682087 0 -10.0178038319058" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="EnteredAddOnProcess">BasicNode5_Entered</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="FlowNode1" Type="FlowNode" Location="-26.7999284610924 0 2.10039801111662" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
              <Property Name="InitialMaximumFlowRate">WeightCapacity/TruckLoadingTime</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Node>
          <Link Name="Path1" Type="Path" Size="16.81 0 0" Scope="Public" Start="BasicNode2" End="BasicNode1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
              <Property Name="InitialTravelerCapacity">1</Property>
              <Property Name="AllowPassing">False</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Path3" Type="Path" Size="14.51 0 0" Scope="Public" Start="BasicNode2" End="BasicNode3">
            <Points>
              <Point Location="87.3393595273209 0 6.22422076643436" />
              <Point Location="90.4449496178652 0 3.78411426672096" />
              <Point Location="93.5505397084095 0 2.89680281227972" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Path2" Type="Path" Size="20.63 0 0" Scope="Public" Start="BasicNode3" End="TransferNode1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="Type">Bidirectional</Property>
              <Property Name="InitialTravelerCapacity">1</Property>
              <Property Name="SelectionWeight">0</Property>
              <Property Name="AllowPassing">False</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Path5" Type="Path" Size="137.1 0 0" Scope="Public" Start="DockNode@Dock1" End="BasicNode2">
            <Points>
              <Point Location="-24.3244007768584 0 12.5364687643452" />
              <Point Location="-21.8967364495471 0 17.2788154659539" />
              <Point Location="-18.5511667901691 0 22.160794024298" />
              <Point Location="-12.052684962149 0 25.7530600138775" />
              <Point Location="-4.05158091001461 0 25.559721061389" />
              <Point Location="3.1162297835084 0 23.5995857713998" />
              <Point Location="10.1409603686916 0 17.4865364481413" />
              <Point Location="23.9738435731973 0 7.03099922602478" />
              <Point Location="30.2145995851591 0 3.94496082123468" />
              <Point Location="36.2672580402087 0 2.27015060031876" />
              <Point Location="63.5014062156384 0 2.126362360819" />
              <Point Location="69.9449774919378 0 2.33762699282882" />
              <Point Location="78.7479850240739 0 2.46645235982971" />
              <Point Location="82.2158248707274 0 4.06021432030174" />
              <Point Location="84.4160769253221 0 6.17286064039993" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="AllowPassing">False</Property>
              <Property Name="EnteredAddOnProcess">Path5_Entered</Property>
              <Property Name="ReachedEndAddOnProcess">Path5_ReachedEnd</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Connector1" Type="Connector" Size="0 0 0" Scope="Public" Start="TransferNode1" End="Input@Sink1">
            <Properties>
              <Property Name="ReportStatistics">True</Property>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">Output == Nothing</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="Connector2" Type="Connector" Size="0 0 0" Scope="Public" Start="TransferNode1" End="BasicNode4">
            <Points>
              <Point Location="119.075274816347 0 3.52562758541435" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="SelectionWeight">Output != Nothing</Property>
            </Properties>
            <Graphics />
          </Link>
          <Link Name="Path4" Type="Path" Size="106.47 0 0" Scope="Public" Start="BasicNode3" End="BasicNode5">
            <Points>
              <Point Location="91.6188135643494 0 2.26355888140367" />
              <Point Location="87.8160501687546 0 1.31286803250497" />
              <Point Location="83.9076544566155 0 -3.54621852853281" />
              <Point Location="80.5274203271979 0 -8.29967277302629" />
              <Point Location="73.872584384907 0 -10.1211973012967" />
              <Point Location="59.5065879821777 0 -11.1517457962036" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="AllowPassing">False</Property>
              <Property Name="EnteredAddOnProcess">Path4_Entered</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Path6" Type="Path" Size="30.25 0 0" Scope="Public" Start="BasicNode5" End="DockNode@Dock1">
            <Points>
              <Point Location="-17.7717786181476 0 -10.0178038951253" />
              <Point Location="-21.5745420137424 0 -9.0671130462266" />
              <Point Location="-23.4474029860728 0 -7.11185886699161" />
              <Point Location="-24.1097176108056 0 -3.78549721901162" />
            </Points>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="AllowPassing">False</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="Output@FlowSource1" End="FlowNode1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector2" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="FlowNode1" End="InputFlow@Dock1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
        </Objects>
        <External>
          <TransferPoints>
            <ExternalNode Name="Output" Location="134.92207237609,0,3.09486257419839" ID="9de26c54-dcb8-4e98-b764-1be43efda00a">
              <Properties>
                <Property Name="NodeClassName">BasicNode</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
        </External>
        <Tables>
          <Table Name="SequenceTable1">
            <Schema>
              <PropertyDefinitions>
                <SequenceDestinationProperty Name="Sequence" DefaultValue="null" NullString="null" />
                <Overrides />
              </PropertyDefinitions>
            </Schema>
            <Rows>
              <Row>
                <Properties>
                  <Property Name="Sequence">DockNode@Dock1</Property>
                </Properties>
              </Row>
              <Row>
                <Properties>
                  <Property Name="Sequence">BasicNode1</Property>
                </Properties>
              </Row>
              <Row>
                <Properties>
                  <Property Name="Sequence">TransferNode1</Property>
                </Properties>
              </Row>
            </Rows>
          </Table>
        </Tables>
        <Graphics>
          <Rectangle Center="42.8812412804985 -5.89754432733145 -0.35017586086564" Width="172.45906344857" Height="77.3962645937527" ExternallyVisible="True" Locked="True" LineWidth="2" YHeight="5">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="ad53c89b-6ac0-4019-9592-acac24c74122" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="2c90b9fa-d990-4171-8ec9-4764f43f099c" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <FloorLabel Center="5.13741762555537 0 -30.0166758026895" Width="92.3286937242956" Height="10.9364286925955" ExternallyVisible="True" Locked="True" BackColor="00ffffff" Text="Truck Circuit Model" />
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="PitToPortModel" Id="27cc74c0-a691-4c64-be4d-8c5b69c14f57" Revision="11" Author="Sales and Support">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="PortModel" />
          <UsedObject Name="RailModel" />
          <UsedObject Name="MineModel" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Processes />
        <Objects>
          <Fixed Name="RailModel1" Type="RailModel" Location="3.41310658745451 -16.5923493431014 -1.02346209311756" Size="430717.867870062 33581.6052184131 5.28763302862005" Scope="Public">
            <AssociatedNodes>
              <Node Name="InputFlow_Mine1@RailModel1" Type="FlowNode" Location="-204631.060522307 -15.2916691152387 -88.7484458761763" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="InitialMaximumFlowRate">Infinity</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="InputFlow_Mine2@RailModel1" Type="FlowNode" Location="-189633.824321923 -16.5923493431014 -2084.58088437796" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="InputFlow_Mine3@RailModel1" Type="FlowNode" Location="-104842.68262521 -16.5923493431014 3917.52011921227" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="InputFlow_Mine4@RailModel1" Type="FlowNode" Location="-154754.501897697 -16.5923493431014 1915.10480728068" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="OutputFlow@RailModel1" Type="FlowNode" Location="204537.638925359 -16.5923493431014 -156.420837380636" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics EditsLocked="True" ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="MineModel1" Type="MineModel" Location="-204780.048557512 6.57252030578093E-14 40.0416618193489" Size="406.507919158426 296.454219542549 6.59445524215698" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@MineModel1" Type="FlowNode" Location="-204568.687121333 6.57252030578093E-14 41.9211418252599" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="FlowRateUnitType">Weight Flow Rate</Property>
                  <Property Name="InitialMaximumFlowRate" Units="Metric Tons per Hour">5000</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ProductEntityType">ProductEntity</Property>
              <Property Name="ROMEntityType">ROMEntity</Property>
              <Property Name="ProductYield">0.9</Property>
              <Property Name="NumberOfTrucksCircuit1">3</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="MineModel2" Type="MineModel" Location="-189968.340007883 0 -1985.13369984593" Size="406.507919158426 296.454219542549 6.59445524215698" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@MineModel2" Type="FlowNode" Location="-189736.396039632 0 -1985.9629070625" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ProductEntityType">ROMEntity</Property>
              <Property Name="ROMEntityType">ROMEntity</Property>
              <Property Name="ProductYield">0.9</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="MineModel4" Type="MineModel" Location="-154981.300605814 0 2093.33343032533" Size="406.507919158426 296.454219542549 6.59445524215698" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@MineModel4" Type="FlowNode" Location="-154761.76577113 0 2095.80510088597" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ProductEntityType">ProductEntity</Property>
              <Property Name="ROMEntityType">ROMEntity</Property>
              <Property Name="ProductYield">0.9</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="MineModel3" Type="MineModel" Location="-105064.576836295 -1.84297022087776E-14 4080.20748840707" Size="406.507919158426 296.454219542549 6.59445524215698" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@MineModel3" Type="FlowNode" Location="-104842.412241478 -1.84297022087776E-14 4079.37828119051" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ProductEntityType">ProductEntity</Property>
              <Property Name="ROMEntityType">ROMEntity</Property>
              <Property Name="ProductYield">0.9</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="PortModel1" Type="PortModel" Location="250584.644085727 0 -23870.5764194484" Size="66593.798196495 45038.0270820506 81.6449520024724" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@PortModel1" Type="FlowNode" Location="214864.100457789 0 -5321.25961604444" Scope="Public">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Entity Name="ROMEntity" Type="ModelEntity" Location="-215503.085786217 0 2480.96663667453" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="0">
                      <MaterialRef Id="35957e80-77ae-4e70-ae23-88bf8513f4ec" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="35957e80-77ae-4e70-ae23-88bf8513f4ec" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Entity Name="ProductEntity" Type="ModelEntity" Location="-215502.965326458 0 2483.10280443054" Size="0.5 0.5 0.25" Scope="Public" Density="2000">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0" SurfaceId="0">
                      <MaterialRef Id="525919a4-a09f-4e11-94c1-d8dccb4a7015" />
                    </Decoration>
                  </Decorations>
                  <FlowDecoration>
                    <MaterialRef Id="525919a4-a09f-4e11-94c1-d8dccb4a7015" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="e25b675d-8134-494c-8169-cf603e396e30" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 10 10" Scope="Public" Start="Output@MineModel1" End="InputFlow_Mine1@RailModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector2" Type="FlowConnector" Size="0 10 10" Scope="Public" Start="Output@MineModel2" End="InputFlow_Mine2@RailModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector3" Type="FlowConnector" Size="0 10 10" Scope="Public" Start="Output@MineModel4" End="InputFlow_Mine4@RailModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector4" Type="FlowConnector" Size="0 10 10" Scope="Public" Start="Output@MineModel3" End="InputFlow_Mine3@RailModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="FlowConnector5" Type="FlowConnector" Size="0 500 500" Scope="Public" Start="OutputFlow@RailModel1" End="Input@PortModel1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
        </Objects>
        <Graphics>
          <Rectangle Center="-215498.73401831 0 2483.71712845834" Width="13.6652542373049" Height="7.58474576271192" ExternallyVisible="True" Locked="True">
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="dccd9578-bbf4-4a77-ae31-74fe2149e1bb" />
              </Decoration>
            </Decorations>
          </Rectangle>
          <NamedViews>
            <NamedView Name="Mine1" HotKey="9">
              <Camera Orientation="Top" Location="-203635.434495512 2632.93061021531 -658.894293936318" Direction="0 -1 2.22044604925031E-16" Zoom="2632.93061021531" />
            </NamedView>
            <NamedView Name="ControlPanel" HotKey="0">
              <Camera Orientation="Top" Location="-215498.214950514 8.74999999999996 2483.34636574648" Direction="0 -1 2.22044604925031E-16" Zoom="8.74999999999996" />
            </NamedView>
            <NamedView Name="Mine2" HotKey="8">
              <Camera Orientation="Top" Location="-188000.833315942 3761.32952008929 -2582.43619159391" Direction="0 -1 2.22044604925031E-16" Zoom="3761.32952008929" />
            </NamedView>
            <NamedView Name="Mine4" HotKey="6">
              <Camera Orientation="Top" Location="-153122.992107694 3761.32952008929 1408.318424581" Direction="0 -1 2.22044604925031E-16" Zoom="3761.32952008929" />
            </NamedView>
            <NamedView Name="Mine3" HotKey="7">
              <Camera Orientation="Top" Location="-103628.723553614 3761.32952008929 2991.56040441336" Direction="0 -1 2.22044604925031E-16" Zoom="3761.32952008929" />
            </NamedView>
            <NamedView Name="Dumper" HotKey="5">
              <Camera Orientation="Top" Location="202148.310405213 5373.32788584184 50.3550936555139" Direction="0 -1 2.22044604925031E-16" Zoom="5373.32788584184" />
            </NamedView>
            <NamedView Name="Port" HotKey="4">
              <Camera Orientation="Top" Location="252854.164693611 45672.533432854 -19398.5334236424" Direction="0 -1 2.22044604925031E-16" Zoom="45672.533432854" />
            </NamedView>
          </NamedViews>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
    </Definitions>
    <DefinitionRefs>
      <DefinitionRef Name="ModelEntity">
        <Id>f6570181-af76-481c-b703-1179b251be2f</Id>
        <Revision>14</Revision>
      </DefinitionRef>
      <DefinitionRef Name="MineMaterialHandlingModel">
        <Id>93be5772-059f-42c6-ac4e-5404ab3e3b1f</Id>
        <Revision>21</Revision>
      </DefinitionRef>
      <DefinitionRef Name="TruckCircuitModel">
        <Id>aa1f2a9a-a868-415f-802f-22dac65400f2</Id>
        <Revision>21</Revision>
      </DefinitionRef>
      <DefinitionRef Name="MineModel">
        <Id>ee0bcf22-cc0e-46fc-9d40-c217f5a1c8c1</Id>
        <Revision>16</Revision>
      </DefinitionRef>
      <DefinitionRef Name="RailModel">
        <Id>957f1852-4b3c-4343-9d4a-7625619cafda</Id>
        <Revision>21</Revision>
      </DefinitionRef>
      <DefinitionRef Name="ChannelModel">
        <Id>ac3fdd61-46b2-4055-a842-d607b12a8ff1</Id>
        <Revision>8</Revision>
      </DefinitionRef>
      <DefinitionRef Name="PortStockyardModel">
        <Id>978e6ea4-444a-4072-b85f-781f248cc45b</Id>
        <Revision>21</Revision>
      </DefinitionRef>
      <DefinitionRef Name="PortModel">
        <Id>0cb4ff57-8655-423f-8324-0a7c6448efbe</Id>
        <Revision>2</Revision>
      </DefinitionRef>
      <DefinitionRef Name="PitToPortModel">
        <Id>27cc74c0-a691-4c64-be4d-8c5b69c14f57</Id>
        <Revision>11</Revision>
      </DefinitionRef>
      <DefinitionRef Name="TransferNode">
        <Id>0d40fbf0-8206-443f-b771-65f85633a2f6</Id>
        <Revision>130</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Resource">
        <Id>4ad0d0ce-2b18-4968-bc54-562ed46ac8a5</Id>
        <Revision>81</Revision>
      </DefinitionRef>
      <DefinitionRef Name="FlowNode">
        <Id>61b3cf47-28e9-4d9b-8405-6ed671e44ab0</Id>
        <Revision>8</Revision>
      </DefinitionRef>
      <DefinitionRef Name="ContainerEntity">
        <Id>a2fcf176-d85e-4c19-be9b-ac4c53021d0f</Id>
        <Revision>1</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Filler">
        <Id>b6d12dbb-f320-4352-a596-5977d4b1e80d</Id>
        <Revision>7</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Source">
        <Id>1d0ccf22-61f9-4fc0-9b3c-01d17e71402d</Id>
        <Revision>86</Revision>
      </DefinitionRef>
      <DefinitionRef Name="BasicNode">
        <Id>585953ca-c744-444b-92d9-8af032f3e9a1</Id>
        <Revision>99</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Sink">
        <Id>5f44138f-a5f7-40d1-ab9a-eea7c5f0254e</Id>
        <Revision>57</Revision>
      </DefinitionRef>
      <DefinitionRef Name="FlowSource">
        <Id>4f421110-a261-458b-852c-02d74e2647a8</Id>
        <Revision>6</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Connector">
        <Id>078e9330-0f90-4770-a474-3cb06fae1db5</Id>
        <Revision>32</Revision>
      </DefinitionRef>
      <DefinitionRef Name="FlowConnector">
        <Id>0bce0296-aa3f-43de-8186-ac134a46588f</Id>
        <Revision>3</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Path">
        <Id>93d39da5-5ba1-4ae1-a526-15bdb27d48e4</Id>
        <Revision>59</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Tank">
        <Id>33612660-55ee-45bf-ad65-85b5124c9c04</Id>
        <Revision>12</Revision>
      </DefinitionRef>
      <DefinitionRef Name="FlowSink">
        <Id>739855fe-a2a5-45b1-84eb-0a33e2385d2e</Id>
        <Revision>4</Revision>
      </DefinitionRef>
      <DefinitionRef Name="TimePath">
        <Id>ff39356c-a4f9-412c-bb3d-14baf4dc5d11</Id>
        <Revision>50</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Pipe">
        <Id>4d1d2941-3555-49c1-84ee-d56968f88fb5</Id>
        <Revision>21</Revision>
      </DefinitionRef>
      <DefinitionRef Name="MyPipe">
        <Id>f394b58e-7f5d-4663-a608-957feb74f434</Id>
        <Revision>1</Revision>
      </DefinitionRef>
      <DefinitionRef Name="HopperCar">
        <Id>6557e61e-8b21-45e3-836c-032bc4863449</Id>
        <Revision>16</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Locomotive">
        <Id>78bfb75a-8f8c-4daa-889e-a14d33bbfb09</Id>
        <Revision>32</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Dock">
        <Id>a5b5d737-5a77-4dd2-b62a-14b0a7de5c8b</Id>
        <Revision>27</Revision>
      </DefinitionRef>
      <DefinitionRef Name="ControlNode">
        <Id>e12da137-a973-4ba2-ab43-4b40e925f992</Id>
        <Revision>52</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Track">
        <Id>28262029-1082-43c7-8d5d-1034c0adf1ea</Id>
        <Revision>32</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Tanker">
        <Id>437e2e62-e8a1-4229-98a0-94acdcedfc2f</Id>
        <Revision>27</Revision>
      </DefinitionRef>
    </DefinitionRefs>
    <Materials>
      <TextureMaterial Id="38836c5e-220f-4ecb-b958-ef8fa9b33a0b" Name="Blue Marble Slabs">
        <Image>
          <FileRef Name="Data\Textures\Blue Marble Slabs.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="a89a3131-f279-4113-915a-f11b8ad60fef" Name="Aluminum Brush">
        <Image>
          <FileRef Name="Data\Textures\Aluminum Brush.jpg" />
        </Image>
      </TextureMaterial>
      <ColorMaterial Id="e25b675d-8134-494c-8169-cf603e396e30" Color="008000" />
      <ColorMaterial Id="70193ba6-0be9-4acd-90b2-86d90e10b56a" Color="008000" />
      <ColorMaterial Id="3ffa66e5-d33c-4d00-84e7-1021775d4e68" Color="ffff00" />
      <ColorMaterial Id="726b97ea-e96c-4b3a-ae79-0c615da3feb0" Color="ff0000" />
      <ColorMaterial Id="958215c2-ee27-40a5-a1a9-a01f9ae876b4" Color="ffffff" />
      <ColorMaterial Id="058b36ed-429c-4b02-b099-5c8bd99e8090" Color="008000" />
      <ColorMaterial Id="4d00a968-705b-4378-9470-fd424a6f711b" Color="ffff00" />
      <ColorMaterial Id="149296e1-b221-4f6e-9ef0-87cd53ccf9a4" Color="ff0000" />
      <ColorMaterial Id="b479091d-451e-4f0e-a7c7-30f3b9b0fb73" Color="ffffff" />
      <ColorMaterial Id="3b8a2172-9f5d-40ab-98b9-e63a31dba868" Color="ff0000" />
      <ColorMaterial Id="4577d29d-5313-4f0a-aa39-293072d270a5" Color="ffffff" />
      <ColorMaterial Id="af95d7f4-2f1a-4a66-9ab5-df362f61515b" Color="000000" />
      <ColorMaterial Id="66dbab2d-bbe6-4e41-bc99-60cea6d238ca" Color="f5f5f5" />
      <ColorMaterial Id="0452c2ae-cc4a-474a-a0bf-1ab13f2df208" Color="87ceeb" />
      <ColorMaterial Id="203998cf-1d24-445d-8b5d-c3f4413ae823" Color="8b0000" />
      <ColorMaterial Id="0e4284db-cf32-4bf6-ba80-3f9b43e3ac2d" Color="008000" />
      <ColorMaterial Id="761763d1-d20a-41cc-af77-c43eb9e0324f" Color="ffff00" />
      <ColorMaterial Id="a93960fa-4872-479e-9563-00f059353d91" Color="ff0000" />
      <ColorMaterial Id="2a03af2b-d334-4e6c-bb56-775fb6e5c75e" Color="ffffff" />
      <ColorMaterial Id="e6dd0118-4999-40d6-8492-ec19f4f5faa4" Color="008000" />
      <ColorMaterial Id="b078bfee-1cc7-4b4d-ac51-d3988a2a8445" Color="ff6347" />
      <ColorMaterial Id="e061e709-ca07-4390-81f6-16f233a2890c" Color="696969" />
      <ColorMaterial Id="dccd9578-bbf4-4a77-ae31-74fe2149e1bb" Color="dcdcdc" />
      <ColorMaterial Id="2c90b9fa-d990-4171-8ec9-4764f43f099c" Color="000000" />
      <ColorMaterial Id="8eab1f51-55bc-4a03-b7b8-b51a1dbe8329" Color="008000" />
      <ColorMaterial Id="af497585-5dcd-48a2-9c43-a1d188e2fa51" Color="808080" />
      <ColorMaterial Id="4e8eddfa-703f-4c4f-978d-151e543b8aed" Color="dcdcdc" />
      <ColorMaterial Id="307fa780-1796-4400-931f-4ad74c894fe4" Color="dcdcdc" />
      <ColorMaterial Id="0433b9a7-8008-486f-b86a-d229bee90f17" Color="000000" />
      <ColorMaterial Id="77c5a0ed-8f5c-44c6-8754-437ab6e6bf05" Color="f5f5f5" />
      <ColorMaterial Id="8ee5a522-06cd-4534-8cd9-397d0192a291" Color="000000" />
      <ColorMaterial Id="0f8ce697-c849-4996-a11b-208aea6d3aa8" Color="ffe4c4" />
      <ColorMaterial Id="f436f4f7-70b2-41be-9bde-4e0b57b9614a" Color="fff5ee" />
      <ColorMaterial Id="dc32c02f-a6da-4522-a70a-b9ac95cb1365" Color="00ff00" />
      <ColorMaterial Id="04a29220-ff08-4f3e-b11f-67fad146c8c1" Color="ff0000" />
      <ColorMaterial Id="e14bed21-6972-48d9-ab73-48a67ff8b683" Color="696969" />
      <ColorMaterial Id="44dccd2c-5b9a-48eb-8104-a1c9b8d7d88a" Color="008000" />
      <ColorMaterial Id="f61ef12e-5ca5-4206-8f4c-20cd7a4a6856" Color="ffff00" />
      <ColorMaterial Id="cfcf5fc8-f4f8-4430-bf32-54de28114337" Color="ff0000" />
      <ColorMaterial Id="e95bfe65-d2ed-411f-9dd2-35fd43d251ff" Color="ffffff" />
      <ColorMaterial Id="fc45ea5f-7a88-4d33-ba59-013d9c0d18ea" Color="ff0000" />
      <ColorMaterial Id="a3fe4d58-8668-4a93-8974-d42796f90047" Color="ffffff" />
      <ColorMaterial Id="ad53c89b-6ac0-4019-9592-acac24c74122" Color="cd853f" />
      <ColorMaterial Id="35957e80-77ae-4e70-ae23-88bf8513f4ec" Color="8b0000" />
      <ColorMaterial Id="525919a4-a09f-4e11-94c1-d8dccb4a7015" Color="ff6347" />
    </Materials>
    <PathDecorators>
      <PathDecorator Name="Conveyor" Id="6604199d-246c-47b0-b226-6bdb0a677a86">
        <RepeatParts>
          <RepeatPart Spacing="2">
            <Graphics>
              <Line Center="0 0 0" LineWidth="2">
                <Points>
                  <Point Location="-0.05 0 0" />
                  <Point Location="0.05 0 0" />
                </Points>
                <PathDecoratorUsage>
                  <PathDecoratorRef Id="cd310aef-57b4-43c0-b363-5134a5be09f7" />
                </PathDecoratorUsage>
              </Line>
            </Graphics>
          </RepeatPart>
        </RepeatParts>
        <Extrusions>
          <Extrusion Color="808080">
            <Surfaces>
              <Surface>
                <Points>
                  <Point Location="-0.75 0" />
                  <Point Location="-0.75 0.05" />
                  <Point Location="0.75 0.05" />
                  <Point Location="0.75 0" />
                </Points>
              </Surface>
            </Surfaces>
          </Extrusion>
          <Extrusion Color="0000ff">
            <Surfaces>
              <Surface>
                <Points>
                  <Point Location="-0.75 0" />
                  <Point Location="-0.75 0.1" />
                  <Point Location="-0.65 0.1" />
                  <Point Location="-0.65 0" />
                </Points>
              </Surface>
              <Surface>
                <Points>
                  <Point Location="0.75 0" />
                  <Point Location="0.75 0.1" />
                  <Point Location="0.65 0.1" />
                  <Point Location="0.65 0" />
                </Points>
              </Surface>
            </Surfaces>
          </Extrusion>
        </Extrusions>
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Conveyor.png" />
        </Thumbnail>
      </PathDecorator>
      <PathDecorator Name="ConveyorSupport" Id="cd310aef-57b4-43c0-b363-5134a5be09f7">
        <Extrusions>
          <Extrusion Color="808080">
            <Surfaces>
              <Surface>
                <Points>
                  <Point Location="0.4 0" />
                  <Point Location="0.75 0" />
                  <Point Location="0.75 -1.25" />
                  <Point Location="1 -1.5" />
                  <Point Location="0.65 -1.5" />
                  <Point Location="0.65 -0.25" />
                </Points>
              </Surface>
              <Surface>
                <Points>
                  <Point Location="-0.4 0" />
                  <Point Location="-0.75 0" />
                  <Point Location="-0.75 -1.25" />
                  <Point Location="-1 -1.5" />
                  <Point Location="-0.65 -1.5" />
                  <Point Location="-0.65 -0.25" />
                </Points>
              </Surface>
              <Surface>
                <Points>
                  <Point Location="0.65 -0.35" />
                  <Point Location="0.65 -0.45" />
                  <Point Location="-0.65 -1.5" />
                  <Point Location="-0.65 -1.4" />
                </Points>
              </Surface>
              <Surface>
                <Points>
                  <Point Location="-0.65 -0.35" />
                  <Point Location="-0.65 -0.45" />
                  <Point Location="0.65 -1.5" />
                  <Point Location="0.65 -1.4" />
                </Points>
              </Surface>
            </Surfaces>
          </Extrusion>
        </Extrusions>
      </PathDecorator>
    </PathDecorators>
    <Symbols>
      <Symbol Name="BackHoe" Id="6398e060-868d-4b91-ab2b-4847b4f5f903">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\BackHoe.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="1">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\BackHoe.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="9226fd7e-8bd8-4d07-8f3c-77c71cc02835" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Ore" Id="fc3e0e73-d453-4717-850c-0c599fd47097">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Ore.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="1">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Ore.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Office" Id="0a81ae10-8cca-4a2b-b7de-af0a23a00f44">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Office.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="1">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Office.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="d5ce570c-ca16-42b5-8f47-b235953a47f1" />
              </Decoration>
              <Decoration SurfaceId="2">
                <MaterialRef Id="c5778422-fe6d-4e26-9e68-9466857531f8" />
              </Decoration>
              <Decoration SurfaceId="4">
                <MaterialRef Id="20b5162d-669c-421f-94e5-e5859b51f7e8" />
              </Decoration>
              <Decoration SurfaceId="5">
                <MaterialRef Id="dcf9bd74-c269-42cd-89fb-c920da8f76b9" />
              </Decoration>
              <Decoration SurfaceId="6">
                <MaterialRef Id="d2620a35-f838-4b34-b3c4-638f2c66146a" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Iron_ore_Pilbara" Description="2048 x 1500 pixels" Id="c26768aa-0772-4299-a770-fce1d879199a">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Iron_ore_Pilbara.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="63405.6">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Iron_ore_Pilbara.s3d" />
              </MeshData>
              <GeometryDataPieces>
                <GeometryDataPiece Id="0">
                  <MaterialRef Id="ff1a91f4-b980-4b78-b6b0-177798c70249" />
                </GeometryDataPiece>
              </GeometryDataPieces>
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="ff1a91f4-b980-4b78-b6b0-177798c70249" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Southern Railway Coal Gondola Car 50 Feet 02" Id="4c13af81-460c-4c68-acf7-fd646b5e1b16">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Southern Railway Coal Gondola Car 50 Feet 02.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="1">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Southern Railway Coal Gondola Car 50 Feet 02.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="OrePile" Id="43ac0539-44aa-47ce-9fdb-49c672cb8fff">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\OrePile.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="0.00625000038711711">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\OrePile.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="OrePileLong" Description="Lengthwise pile of ore" Id="cba813a6-a342-427c-86b6-64bcbdfdce42">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\OrePileLong.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="-0.244517861197245 2.22044604925031E-16 -0.37239682596408" Scale="12.4623252942206">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\OrePileLong.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Ship3" Id="5aa83ba5-20f4-4c67-843a-62482d3f85e5">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Ship3.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="1">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Ship3.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Id="55d73438-76c6-476c-9957-c486ab3c78e0">
        <Graphics>
          <Polygon Center="0 0 0" Color="008000" YHeight="0.25" ExternallyVisible="True">
            <Points>
              <Point Location="-0.25 0 0.25" />
              <Point Location="-0.25 0 -0.25" />
              <Point Location="0.25 0 0" />
            </Points>
          </Polygon>
          <DefaultFlowMaterial>
            <MaterialRef Id="e6dd0118-4999-40d6-8492-ec19f4f5faa4" />
          </DefaultFlowMaterial>
        </Graphics>
      </Symbol>
      <Symbol Id="264ca011-1a56-4c68-a031-13f5d589d5d9">
        <Graphics>
          <Polygon Center="0 0 0" Color="008000" YHeight="0.25" ExternallyVisible="True">
            <Points>
              <Point Location="-0.25 0 0.25" />
              <Point Location="-0.25 0 -0.25" />
              <Point Location="0.25 0 0" />
            </Points>
          </Polygon>
          <DefaultFlowMaterial>
            <MaterialRef Id="8eab1f51-55bc-4a03-b7b8-b51a1dbe8329" />
          </DefaultFlowMaterial>
        </Graphics>
      </Symbol>
    </Symbols>
    <Definitions>
      <NodeDefinition Name="BasicNode" Id="585953ca-c744-444b-92d9-8af032f3e9a1" Revision="99" Author="Sales and Support" Description="The BasicNode object may be used by an entity to transfer into or out of an object. This object may also be used to define an intersection point in a network of links." CheckBaseForAdvancedProperties="True" Color="808080">
        <ChangeDescriptions>
          <ChangeDescription Version="58">Version 2.36: Renamed the 'TransferToLinkFailureLogic' process in the BasicNode process logic to 'TransferFailureLogic'. If the 'AutoTransferOnEntry' property value of the BasicNode is 'To Parent External Node' and the transfer to the specified parent external node fails, then the token now executes the 'TransferFailureLogic' process.</ChangeDescription>
          <ChangeDescription Version="59">Version 2.37: Changed 'Capacity' display name to 'Initial Capacity' as object capacities are now user assignable.</ChangeDescription>
          <ChangeDescription Version="64">Version 2.39: Updated the BasicNode object process logic to specify all of the object's process delays as non-interruptible.</ChangeDescription>
          <ChangeDescription Version="65">Version 2.40: In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="66">Version 2.41: Minor property description and display name updates.</ChangeDescription>
          <ChangeDescription Version="67">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="68">Version 3.44: 'SeizedObjects.UnitsOwned' function renamed to 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="69">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="70">Version 3.48: Hide new 'Random Number Stream' property in 'Routing Logic' category.</ChangeDescription>
          <ChangeDescription Version="71">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="78">Version 3.54: Added new Notify step to 'TransferFailureLogic' process to output a warning if automatically destroying an entity. Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="81">Version 3.56: Added new 'Tally Statistics' property category.</ChangeDescription>
          <ChangeDescription Version="82">Version 3.57: Change to new 'OnEnteredParking' standard interface process that was added to Simio's base node object.</ChangeDescription>
          <ChangeDescription Version="84">Version 4.58: Removed 'AutoTransferOnEntry' property. The 'ExternalNodeName' property is now always visible with display name 'Bound External Output Node'.  If a transfer to parent external node attempt fails, then the token now continues normal processing instead of executing the 'TransferFailureLogic'. Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="85">Version 4.60: Process logic now uses new object 'SeizedResources.CapacityUnitsOwned' function instead of deprecated 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="86">Version 4.61: Set all inherited properties in 'Financials' category to not be visible.</ChangeDescription>
          <ChangeDescription Version="87">Version 4.63: Set all inherited properties in 'Financials-&gt;Resource Costs' to not be visible.</ChangeDescription>
          <ChangeDescription Version="88">Version 4.65: Process logic now uses new object 'SeizedResources.CapacityOwnedOf' function instead of deprecated 'SeizedResources.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="89">Version 4.66: If bound to an external output node of the parent model, a basic node's 'Entered' event is still fired and its 'Entered' add-on process trigger still executed before transferring the entity out of the parent model.</ChangeDescription>
          <ChangeDescription Version="93">Version 4.68: The BasicNode object is no longer enabled as a resource object, and the 'InitialCapacity', 'RankingRule', and 'RankingExpression' properties have been replaced by equivalent 'InitialTravelerCapacity', 'EntryRankingRule', and 'EntryRankingExpression' properties. Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'. Renamed 'ExternalNodeName' property to 'BoundExternalOutputNode'.</ChangeDescription>
          <ChangeDescription Version="95">Version 4.73: New 'Random Number Stream' property now available in the 'Advanced Options' category.</ChangeDescription>
          <ChangeDescription Version="96">Version 4.74: If a traveler is attempting to transfer out of the node and has no network assigned (i.e., is using free space for travel), then the node's process logic now transfers the traveler into free space.</ChangeDescription>
          <ChangeDescription Version="97">Version 4.77: Removed an unnecessary 'TransferFailureLogic' Execute step from the 'OnEnteredToAssociatedObject' process logic.</ChangeDescription>
          <ChangeDescription Version="98">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="99">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="84" RegularExpressionPattern="(^|[^\w_])(?i:AutoTransferOnEntry)([^\w_]|$)" ReplacementString="$1ExternalNodeName.HasValue$2" />
          <ChangeStringReplacement Version="84" RegularExpressionPattern="(^|[^\w_])(?i:List[\.]AutoTransferOnEntryType[\.]None)([^\w_]|$)" ReplacementString="$1False$2" />
          <ChangeStringReplacement Version="93" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
          <ChangeStringReplacement Version="93" RegularExpressionPattern="(^|[^\w_])(?i:ExternalNodeName)([^\w_]|$)" ReplacementString="$1BoundExternalOutputNode$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="BasicNodeTallyConditionType">
            <Items>
              <Item Value="NoCondition" />
              <Item Value="IsEntity" />
              <Item Value="IsTransporter" />
              <Item Value="CustomCondition" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Tally Statistics" Description="Optional Tally Statistics" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <RepeatingProperty Name="TalliesOnEntering" DisplayName="On Entering" Description="Optional tally statistics to record when an entity is entering this node." ComplexityLevel="Advanced" Category="Tally Statistics" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Tally Statistics (Basic Logic)" />
              </Categories>
              <ListProperty Name="TalliesOnEnteringTallyConditionType" DisplayName="Tally If" Description="Condition required to record the tally statistic." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Entity Entering" NullString="null" List="BasicNodeTallyConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Entering" />
                  <Caption Value="IsTransporter" Display="Transporter Entering" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TalliesOnEnteringTallyCondition" DisplayName="Condition" Description="Condition required to record the tally statistic." ComplexityLevel="Advanced" Parent="TalliesOnEnteringTallyConditionType" NullString="null">
                <Switch Property="TalliesOnEnteringTallyConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <ElementProperty Name="TalliesOnEnteringTallyStatisticName" DisplayName="Tally Statistic Name" Description="The tally statistic for which the value is to be recorded." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" Type="TallyStatistic" />
              <EnumProperty Name="TalliesOnEnteringValueType" DisplayName="Value Type" Description="The type of value to record. The value type 'Expression' records the value of the specified expression. The value type 'TimeBetween' records the time between arrivals to Tally steps referencing the tally statistic." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Expression" NullString="null" EnumType="TallyValueType" />
              <ExpressionProperty Name="TalliesOnEnteringValue" DisplayName="Value" Description="The expression value to be recorded." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" NullString="null" UnitTypeProperty="TalliesOnEnteringTallyStatisticName">
                <Switch Property="TalliesOnEnteringValueType" Value="Expression" />
              </ExpressionProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="TalliesOnExited" DisplayName="On Exited" Description="Optional tally statistics to record when an entity has exited this node." ComplexityLevel="Advanced" Category="Tally Statistics" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Tally Statistics (Basic Logic)" />
              </Categories>
              <ListProperty Name="TalliesOnExitedTallyConditionType" DisplayName="Tally If" Description="Condition required to record the tally statistic." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Entity Exited" NullString="null" List="BasicNodeTallyConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Exited" />
                  <Caption Value="IsTransporter" Display="Transporter Exited" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TalliesOnExitedTallyCondition" DisplayName="Condition" Description="Condition required to record the tally statistic." ComplexityLevel="Advanced" Parent="TalliesOnExitedTallyConditionType" NullString="null">
                <Switch Property="TalliesOnExitedTallyConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <ElementProperty Name="TalliesOnExitedTallyStatisticName" DisplayName="Tally Statistic Name" Description="The tally statistic for which the value is to be recorded." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" Type="TallyStatistic" />
              <EnumProperty Name="TalliesOnExitedValueType" DisplayName="Value Type" Description="The type of value to record. The value type 'Expression' records the value of the specified expression. The value type 'TimeBetween' records the time between arrivals to Tally steps referencing the tally statistic." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Expression" NullString="null" EnumType="TallyValueType" />
              <ExpressionProperty Name="TalliesOnExitedValue" DisplayName="Value" Description="The expression value to be recorded." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" NullString="null" UnitTypeProperty="TalliesOnExitedTallyStatisticName">
                <Switch Property="TalliesOnExitedValueType" Value="Expression" />
              </ExpressionProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs when a traveler's leading edge has entered this node." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when a traveler's trailing edge has exited this node." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ExpressionProperty Name="RandomNumberStream" DisplayName="Random Number Stream" Description="The random number stream to be used if the entity is transferring from the node to an outbound link and is probabilistically selecting the outbound link using the node's 'By Link Weight' outbound link rule." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="0" Required="False" NullString="null" />
          <ExternalNodeProperty Name="BoundExternalOutputNode" DisplayName="Bound External Output Node" Description="The name of an external output node that this node has been bound to in order to transfer entities out of the containing (parent) object. The transfer attempt will be performed by an entity immediately upon entering the node and, if successful, any other crossing and routing logic for the node will be ignored." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" />
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="EntryExemptionCondition" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="92" OldPropertyName="InitialCapacity" NewPropertyName="InitialTravelerCapacity" />
            <PropertyReplacement Version="92" OldPropertyName="RankingRule" NewPropertyName="EntryRankingRule" />
            <PropertyReplacement Version="92" OldPropertyName="RankingExpression" NewPropertyName="EntryRankingExpression" />
            <PropertyReplacement Version="92" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="92" OldPropertyName="ExternalNodeName" NewPropertyName="BoundExternalOutputNode" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events>
          <Event Name="Entered" Description="The Entered event provides notification that a traveler has entered the crossing area of the node." />
          <Event Name="Exited" Description="The Exited event provides notification that a traveler has exited the crossing area of the node." />
        </Events>
        <Elements />
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Node.OnEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Tally" Name="OnEnteringTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnEnteringTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValue">TalliesOnEnteringValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.BasicNodeTallyConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.BasicNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.BasicNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="VisitNode" Name="Traveler" ID="5">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="7">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="8">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="RandomNumberStream">RandomNumberStream</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Decide" Name="IfFreeSpaceTraveler" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.CurrentNetwork==Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="11" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="10">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="TransferFailureLogic" ID="11">
                <Properties>
                  <Property Name="ProcessName">TransferFailureLogic</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExited" IsOverride="True" InterfaceProcessID="Node.OnExited" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Tally" Name="OnExitedTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnExited</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnExitedTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnExitedValueType</Property>
                        <Property Name="TalliesValue">TalliesOnExitedValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnExited.TalliesOnExitedTallyConditionType==List.BasicNodeTallyConditionType.NoCondition,1,TalliesOnExited.TalliesOnExitedTallyConditionType==List.BasicNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnExited.TalliesOnExitedTallyConditionType==List.BasicNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnExited.TalliesOnExitedTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="Exited_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">ExitedAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Fire" Name="ExitedEvent" ID="4">
                <Properties>
                  <Property Name="EventName">Exited</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredToAssociatedObject" IsOverride="True" InterfaceProcessID="Node.OnEnteredToAssociatedObject" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Tally" Name="OnEnteringTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnEnteringTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValue">TalliesOnEnteringValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.BasicNodeTallyConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.BasicNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.BasicNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="6">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToAssociatedObject" ID="7">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">AssociatedObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredParking" IsOverride="True" InterfaceProcessID="Node.OnEnteredParking" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="EndTransfer" Name="EndTransfer" ID="2">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="TransferFailureLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Notify" Name="DestroyingEntity" ID="2">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Entity '" + Entity.Name + "' failed to initiate transfer from node."</Property>
                  <Property Name="MessageContent">"Entity '" + Entity.Name + "' failed to initiate transfer from node '" + Name + "' onto an outbound link. The entity is being automatically destroyed. However, this warning may indicate a problem in the modeled logic. 

It is recommended to verify that a followable network path has been drawn from the node to the entity's assigned destination '" + Math.If(Entity.DestinationNode!=Nothing &amp;&amp; Entity.DestinationNode!=Node, Entity.DestinationNode.Name, "No Destination") + "'. If a followable path has been drawn, then verify that the path applies to the entity's assigned network '" + Math.If(Entity.CurrentNetwork!=Nothing, Entity.CurrentNetwork.Name, "No Network") +  "'."</Property>
                  <Property Name="NotifyCondition">Entity.Destroyable</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Destroy" Name="Entity" ID="3">
                <Properties />
                <Exit Name="Failed" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="4">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </NodeDefinition>
      <LinkDefinition Name="Connector" Id="078e9330-0f90-4770-a474-3cb06fae1db5" Revision="32" Author="Sales and Support" Description="The Connector object may be used to define a direct, zero travel distance connection from one node location to another." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="24">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="27">Version 3.51: Do not display new link 'Cell Spacing Type', 'Cell Size', and 'Auto Align Cells' properties.</ChangeDescription>
          <ChangeDescription Version="28">Version 4.58: Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="29">Version 4.61: Set all inherited properties in 'Financials' category to not be visible.</ChangeDescription>
          <ChangeDescription Version="31">Version 4.68: Changed 'TravelerCapacity' integer property to 'InitialTravelerCapacity' expression property.</ChangeDescription>
          <ChangeDescription Version="32">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="Type" Visible="False" />
            <Override Name="InitialTravelerCapacity" Visible="False" />
            <Override Name="TrafficDirectionRule" Visible="False" />
            <Override Name="InitialDesiredDirection" Visible="False" />
            <Override Name="EntryRankingRule" Visible="False" />
            <Override Name="InitialDesiredSpeed" Visible="False" DefaultValue="0.0" />
            <Override Name="EntityAlignment" Visible="False" />
            <Override Name="CellSpacingType" Visible="False" />
            <Override Name="NumberOfCells" Visible="False" />
            <Override Name="CellSize" Visible="False" />
            <Override Name="AutoAlignCells" Visible="False" />
            <Override Name="DrawnToScale" Visible="False" DefaultValue="False" />
            <Override Name="LogicalLength" Visible="False" DefaultValue="0.0" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <Processes />
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <EntityDefinition Name="ContainerEntity" Id="a2fcf176-d85e-4c19-be9b-ac4c53021d0f" Revision="1" Author="Sales and Support" Description="The ContainerEntity object may be used to model a type of simple moveable container (e.g., barrels or totes) for carrying flow entities representing quantities of fluids or other mass." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="1">Version 5.96: If a container entity carrying flow contents is being destroyed, the container entity's 'OnFlowContainerEmpty' process is no longer triggered.</ChangeDescription>
        </ChangeDescriptions>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Flow Storage Logic" Description="Flow Storage Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <EnumProperty Name="CapacityUnitType" DisplayName="Capacity Unit Type" Description="The unit type to be used for specifying the physical capacity of a container entity of this type." Category="Flow Storage Logic" DefaultValue="Volume" NullString="null" EnumType="FlowContentUnitType" />
          <ExpressionProperty Name="InitialVolumeCapacity" DisplayName="Initial Volume Capacity" Description="The initial maximum physical volume that can be stored in a container entity of this type." Category="Flow Storage Logic" DefaultValue="0.2" NullString="null" UnitType="Volume">
            <Switch Property="CapacityUnitType" Value="6" />
          </ExpressionProperty>
          <ExpressionProperty Name="InitialWeightCapacity" DisplayName="Initial Weight Capacity" Description="The initial maximum physical weight that can be stored in a container entity of this type." Category="Flow Storage Logic" DefaultValue="0.2" NullString="null" UnitType="Weight">
            <Switch Property="CapacityUnitType" Value="7" />
          </ExpressionProperty>
          <RepeatingProperty Name="InitialContents" DisplayName="Initial Contents" Description="The initial contents present in a container entity of this type when the entity is created." Category="Flow Storage Logic" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Initial Content" Description="Initial Content" />
              </Categories>
              <DynamicObjectInstanceProperty Name="InitialContentEntityType" DisplayName="Entity Type" Description="The initial content entity type." Category="Initial Content" NullString="null" ValidObjectType="Agent" />
              <EnumProperty Name="InitialContentUnitType" DisplayName="Unit Type" Description="The unit type to be used for specifying the initial content quantity." Category="Initial Content" DefaultValue="Volume" NullString="null" EnumType="FlowContentUnitType" />
              <ExpressionProperty Name="InitialContentQuantity" DisplayName="Quantity" Description="The initial content quantity." Category="Initial Content" DefaultValue="1.0" NullString="null" UnitTypeProperty="InitialContentUnitType" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnContainerFull" DisplayName="On Container Full" Description="Optional state assignments when the contents level of a container entity of this type has reached the container's maximum volume or weight capacity." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnContainerFullStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnContainerFullNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnContainerFullStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnContainerEmpty" DisplayName="On Container Empty" Description="Optional state assignments when the contents level of a container entity of this type has fallen to zero and the container has thus become empty." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnContainerEmptyStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnContainerEmptyNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnContainerEmptyStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ContainerFullAddOnProcess" DisplayName="Container Full" Description="Occurs when the contents level of a container entity of this type has reached the container's maximum volume or weight capacity." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ContainerEmptyAddOnProcess" DisplayName="Container Empty" Description="Occurs when the contents level of a container entity of this type has fallen to zero and the container has thus become empty." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <EnumProperty Name="ContentsRankingRule" DisplayName="Contents Ranking Rule" Description="The static rule used to rank flow entities located in the 'FlowContainer.Contents' queue of a container entity of this type." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="First In First Out" NullString="null" EnumType="QueueRanking">
            <Captions>
              <Caption Value="FirstInFirstOut" Display="First In First Out" />
              <Caption Value="LastInFirstOut" Display="Last In First Out" />
              <Caption Value="SmallestValueFirst" Display="Smallest Value First" />
              <Caption Value="LargestValueFirst" Display="Largest Value First" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="ContentsRankingExpression" DisplayName="Contents Ranking Expression" Description="The expression used with a 'SmallestValueFirst' or 'LargestValueFirst' ranking rule." ComplexityLevel="Advanced" DefaultValue="Entity.Priority" Required="False" Parent="ContentsRankingRule" NullString="null">
            <Switch Property="ContentsRankingRule" Comparison="GreaterThan" Value="LastInFirstOut" />
          </ExpressionProperty>
          <Overrides>
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="CurrentSizeIndex" DefaultValue="$(DefinitionName).Picture" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <DiscreteState Name="Picture" Description="A utility state to hold a picture index. This state can then be referenced in an expression for Current Symbol Index." />
          <StringState Name="Animation" Description="A utility state to hold the name of an animation. This state can then be referenced in an expression for Current Animation Index." />
        </States>
        <Events>
          <Event Name="ContainerFull" Description="The ContainerFull event provides notification that the contents level of a container entity of this type has reached the container's maximum volume or weight capacity." />
          <Event Name="ContainerEmpty" Description="The ContainerEmpty event provides notification that the contents level of a container entity of this type has fallen to zero and the container has thus become empty." />
        </Events>
        <Elements>
          <Element Type="Container" Name="FlowContainer" Scope="Public" Description="Returns a reference to the container element used by an entity of this type to store entity flow.">
            <Properties>
              <Property Name="InitialVolumeCapacity">Math.If(CapacityUnitType==Enum.FlowContentUnitType.Volume, InitialVolumeCapacity, Infinity)</Property>
              <Property Name="InitialWeightCapacity">Math.If(CapacityUnitType==Enum.FlowContentUnitType.Weight, InitialWeightCapacity, Infinity)</Property>
              <Property Name="ContentsRankingRule">ContentsRankingRule</Property>
              <Property Name="ContentsRankingExpression">ContentsRankingExpression</Property>
              <Property Name="OnFullProcess">OnFlowContainerFull</Property>
              <Property Name="OnEmptyProcess">OnFlowContainerEmpty</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCreated" IsOverride="True" InterfaceProcessID="Object.OnCreated" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToDisableContainerLevelMonitoring" ExclusionExpression="!InitialContents.HasValue" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnFlowContainerFull.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Search" Name="InitialContentsData" ExclusionExpression="!InitialContents.HasValue" ID="3">
                <Properties>
                  <Property Name="CollectionType">TableRows</Property>
                  <Property Name="TableName">InitialContents</Property>
                  <Property Name="Limit">Infinity</Property>
                </Properties>
                <Exit Name="Original" Type="Primary" NextID="9" />
                <Exit Name="Found" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Create" Name="InitialContent" ID="4">
                <Properties>
                  <Property Name="ObjectInstanceName">InitialContents.InitialContentEntityType</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Decide" Name="InitialContentUnitType" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">InitialContents.InitialContentUnitType==Enum.FlowContentUnitType.Volume</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Assign" Name="InitialContentWeight" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Weight</Value>
                  </Property>
                  <Property Name="NewValue">InitialContents.InitialContentQuantity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Assign" Name="InitialContentVolume" ID="7">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Volume</Value>
                  </Property>
                  <Property Name="NewValue">InitialContents.InitialContentQuantity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Transfer" Name="ToFlowContainer" ID="8">
                <Properties>
                  <Property Name="ToType">Container</Property>
                  <Property Name="ContainerName">FlowContainer</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="ToEnableContainerLevelMonitoring" ExclusionExpression="!InitialContents.HasValue" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnFlowContainerFull.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnDestroying" IsOverride="True" InterfaceProcessID="Object.OnDestroying" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToDisableContainerLevelMonitoring" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnFlowContainerEmpty.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredFreeSpace" IsOverride="True" InterfaceProcessID="Entity.OnEnteredFreeSpace" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Decide" Name="IfDestinationNode" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">DestinationNode != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfEnteredFreeSpaceFromNode" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(PreviousNode != Nothing, DirectDistanceTo.Object(PreviousNode) == 0.0, False)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Assign" Name="MovementRate" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">0</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfNearestInputNode" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PreviousNode.Nearest.InputNode != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfNearestNode" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PreviousNode.Nearest.Node != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="SetNode" Name="ToNearestNode" ID="7">
                <Properties>
                  <Property Name="NodeName">PreviousNode.Nearest.Node</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="SetNode" Name="ToNearestInputNode" ID="8">
                <Properties>
                  <Property Name="NodeName">PreviousNode.Nearest.InputNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Travel" Name="ToDestinationNode" ID="9">
                <Properties>
                  <Property Name="DestinationObject">DestinationNode</Property>
                  <Property Name="MaximumMovementRate">DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Transfer" Name="ToDestinationNode" ID="10">
                <Properties>
                  <Property Name="NodeName">DestinationNode</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerFull" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="ContainerFullEvent" ID="2">
                <Properties>
                  <Property Name="EventName">ContainerFull</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnContainerFullAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnContainerFull</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnContainerFullStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnContainerFullNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="ContainerFull_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">ContainerFullAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerEmpty" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="ContainerEmptyEvent" ID="2">
                <Properties>
                  <Property Name="EventName">ContainerEmpty</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnContainerEmptyAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnContainerEmpty</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnContainerEmptyStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnContainerEmptyNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="ContainerEmpty_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">ContainerEmptyAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <Graphics>
            <StackedBar Center="0 0 -0.55" Width="0.6" Height="0.6" ExternallyVisible="True" Shape="1" FloorDisplayType="2" Type="Container" Container="FlowContainer" />
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </EntityDefinition>
      <NodeDefinition Name="ControlNode" Id="e12da137-a973-4ba2-ab43-4b40e925f992" Revision="52" BaseClass="TransferNode" Author="Sales and Support" Description="A ControlNode is a junction between two or more Tracks.  A ControlNode can have an associated ControlBlock that will hold a train until a specified control condition is satisfied." Version="1" CheckBaseForAdvancedProperties="True" Color="800000">
        <Lists />
        <PropertyDefinitions>
          <Categories>
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Tally Statistics" Description="Optional Tally Statistics" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ElementProperty Name="DetachedRailcarAddOnProcess" DisplayName="Detached Railcar" Description="Occurs when a Railcar is detached from the train and parked at this node." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="AttachedRailcarAddOnProcess" DisplayName="Attached Railcar" Description="Occurs when a Railcar is removed from parking and attached to this train." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <Overrides />
        </PropertyDefinitions>
        <States>
          <ElementReferenceState Name="ExitingRailCar" ElementType="Transporter" />
          <ElementReferenceState Name="ClosingRailCar" ElementType="Transporter" />
        </States>
        <Events>
          <Event Name="nodeClear" Public="False" />
        </Events>
        <UsedObjects>
          <UsedObject Name="RailCar" />
          <UsedObject Name="Locomotive" />
        </UsedObjects>
        <Elements />
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Node.OnEntered" BeginStepID="2" Description="x">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Tally" Name="OnEnteringTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnEnteringTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValue">TalliesOnEnteringValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="VisitNode" Name="Traveler" ID="5">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="RoutingOutLogic" ID="7">
                <Properties>
                  <Property Name="ProcessName">RoutingOutLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="8">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfTransporter" ExclusionExpression="(DestinationType==List.TransferNodeDestinationType.Continue)&amp;&amp;(!RideOnTransporter)" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.Is.Transporter</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="15" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="10">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="RandomNumberStream">RandomNumberStream</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="11" />
              </Step>
              <Step Type="Decide" Name="IfFreeSpaceTraveler" ID="11">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.CurrentNetwork==Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="13" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="12">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="TransferFailureLogic" ID="13">
                <Properties>
                  <Property Name="ProcessName">TransferFailureLogic</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfRideOnTransporter" ExclusionExpression="Math.If(RideOnTransporter,1,2)" ID="14">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RideOnTransporter</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Decide" Name="NotRailCar" ID="15">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">!Entity.Is.RailCar</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="17" />
              </Step>
              <Step Type="Transfer" Name="FollowPredecessor" ID="16">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="OutboundLinkPreference">Specific</Property>
                  <Property Name="OutboundLinkName">RailCar.PredecessorRailCar.TrailingLink</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="11" />
              </Step>
              <Step Type="Decide" Name="IsTrailingRailcar" ID="17">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.PredecessorRailCar != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="18" />
                <Exit Name="False" Type="Alternate" NextID="43" />
              </Step>
              <Step Type="Decide" Name="NoDrop" ID="18">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.DropDestination != ParentObject</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="38" />
                <Exit Name="False" Type="Alternate" NextID="22" />
              </Step>
              <Step Type="Assign" Name="PredRailCarSucc" ID="19">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.PredecessorRailCar.RailCar.SuccessorRailCar</Value>
                  </Property>
                  <Property Name="NewValue">RailCar.SuccessorRailCar</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="26" />
              </Step>
              <Step Type="Decide" Name="HasSuccessor" ID="20">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.SuccessorRailCar != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="33" />
                <Exit Name="False" Type="Alternate" NextID="32" />
              </Step>
              <Step Type="Assign" Name="SuccessorRailCar" ID="21">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.SuccessorRailCar.RailCar.PredecessorRailCar</Value>
                  </Property>
                  <Property Name="NewValue">RailCar.PredecessorRailCar</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="31" />
              </Step>
              <Step Type="Decide" Name="PauseRequired" ID="22">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(RailCar.DisconnectTime &gt; 0) || (RailCar.SuccessorRailCar != Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="35" />
                <Exit Name="False" Type="Alternate" NextID="19" />
              </Step>
              <Step Type="Assign" Name="StopLocomotive" ID="23">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive.Movement.Rate</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="24" />
              </Step>
              <Step Type="Delay" Name="DisconnectTime" ID="24">
                <Properties>
                  <Property Name="DelayTime">RailCar.DisconnectTime</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="19" />
              </Step>
              <Step Type="Assign" Name="NoSuccessor" ID="25">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.SuccessorRailCar</Value>
                  </Property>
                  <Property Name="NewValue">Nothing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="32" />
              </Step>
              <Step Type="Park" Name="DisconnectedRailcar" ID="26">
                <Properties />
                <Exit Name="OK" Type="Primary" NextID="20" />
                <Exit Name="Failed" Type="Alternate" NextID="25" />
              </Step>
              <Step Type="Wait" Name="CloseCompleted" ID="27">
                <Properties>
                  <Property Name="EventName">RailCar.SuccessorRailCar.RailCar.CloseCompleted</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="29" />
              </Step>
              <Step Type="Assign" Name="RestartLocomotive" ID="28">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive.RailCar.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">RailCar.MyLocomotive.DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="34" />
              </Step>
              <Step Type="Delay" Name="ReconnectTime" ID="29">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="Assign" Name="NullDropDestination" ID="30">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.DropDestination</Value>
                  </Property>
                  <Property Name="NewValue">Nothing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="36" />
              </Step>
              <Step Type="Assign" Name="ClosingEnded" ID="31">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.SuccessorRailCar.RailCar.ClosingToReconnect</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="27" />
              </Step>
              <Step Type="Assign" Name="NoPredecesspr" ID="32">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.PredecessorRailCar</Value>
                  </Property>
                  <Property Name="NewValue">Nothing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="30" />
              </Step>
              <Step Type="Decide" Name="SuccessorNotDropped" ID="33">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.SuccessorRailCar.RailCar.DropDestination != ParentObject</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="21" />
              </Step>
              <Step Type="Assign" Name="NullLocomotive" ID="34">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive</Value>
                  </Property>
                  <Property Name="NewValue">Nothing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="41" />
              </Step>
              <Step Type="Assign" Name="IncrStopRequest" ID="35">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive.Locomotive.StopRequest</Value>
                  </Property>
                  <Property Name="NewValue">RailCar.MyLocomotive.Locomotive.StopRequest + 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Assign" Name="DecrStopRequest" ID="36">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive.Locomotive.StopRequest</Value>
                  </Property>
                  <Property Name="NewValue">RailCar.MyLocomotive.Locomotive.StopRequest - 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="37" />
              </Step>
              <Step Type="Decide" Name="NoStopRequest" ID="37">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.MyLocomotive.Locomotive.StopRequest &lt; 1</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="28" />
                <Exit Name="False" Type="Alternate" NextID="34" />
              </Step>
              <Step Type="Decide" Name="HasTrailingLink" ID="38">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.PredecessorRailCar.TrailingLink != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="16" />
                <Exit Name="False" Type="Alternate" NextID="40" />
              </Step>
              <Step Type="Park" Name="ParkForTurnaround" ID="39">
                <Properties>
                  <Property Name="NodeName">ControlNode</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="RailCarAndPred" ID="40">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.PredecessorRailCar.RailCar.SuccessorRailCar</Value>
                  </Property>
                  <Property Name="NewValue">Nothing</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>RailCar.SuccessorRailCar</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Nothing</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>RailCar.PredecessorRailCar</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Nothing</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="39" />
              </Step>
              <Step Type="Execute" Name="DetachedRailcar_AddOnProcess" ID="41">
                <Properties>
                  <Property Name="ProcessName">DetachedRailcarAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Wait" Name="untilClear" ID="42">
                <Properties>
                  <Property Name="EventName">nodeClear</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="43" />
              </Step>
              <Step Type="Decide" Name="nodeIsClear" ID="43">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ExitingRailCar==Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="44" />
                <Exit Name="False" Type="Alternate" NextID="42" />
              </Step>
              <Step Type="Assign" Name="exitingRailCar" ID="44">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ExitingRailCar</Value>
                  </Property>
                  <Property Name="NewValue">Entity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExited" IsOverride="True" InterfaceProcessID="Node.OnExited" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Tally" Name="OnExitedTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnExited</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnExitedTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnExitedValueType</Property>
                        <Property Name="TalliesValue">TalliesOnExitedValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnExited.TalliesOnExitedTallyConditionType==List.TransferNodeTallyConditionType.NoCondition,1,TalliesOnExited.TalliesOnExitedTallyConditionType==List.TransferNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnExited.TalliesOnExitedTallyConditionType==List.TransferNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnExited.TalliesOnExitedTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="Exited_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">ExitedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="ExitedEvent" ID="4">
                <Properties>
                  <Property Name="EventName">Exited</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IsRailCar" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Entity.Is.RailCar) || (Entity.Is.Locomotive)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Decide" Name="LastCar" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ExitingRailCar.RailCar.SuccessorRailCar == Nothing ) &amp;&amp; (!ExitingRailCar.RailCar.IsParked)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Search" Name="ParkRailCars" ID="7">
                <Properties>
                  <Property Name="CollectionType">QueueState</Property>
                  <Property Name="QueueStateName">
                    <Value>ParkingStation.Contents</Value>
                  </Property>
                  <Property Name="MatchCondition">Object.Is.RailCar</Property>
                  <Property Name="SearchExpression">1</Property>
                </Properties>
                <Exit Name="Original" Type="Primary" NextID="24" />
                <Exit Name="Found" Type="Alternate" NextID="18" />
              </Step>
              <Step Type="Assign" Name="PredecessorRailCar" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.PredecessorRailCar</Value>
                  </Property>
                  <Property Name="NewValue">ExitingRailCar</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Assign" Name="ExitingRailCar" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ExitingRailCar</Value>
                  </Property>
                  <Property Name="NewValue">Entity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Assign" Name="SuccessorRailCar" ID="10">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ExitingRailCar.RailCar.SuccessorRailCar</Value>
                  </Property>
                  <Property Name="NewValue">RailCar</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Assign" Name="TravelSpeed" ID="11">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">ExitingRailCar.Movement.Rate</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="17" />
              </Step>
              <Step Type="UnPark" Name="RailCar" ID="12">
                <Properties>
                  <Property Name="EntityType">SpecificObject</Property>
                  <Property Name="EntityObject">RailCar</Property>
                  <Property Name="TokenWaitAction">WaitUntilTransferringEvent</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Decide" Name="HasConnectTime" ID="13">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.ConnectTime &gt; 0.0</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="19" />
              </Step>
              <Step Type="Assign" Name="StopLocomotive" ID="14">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive.Movement.Rate</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Delay" Name="ConnectTime" ID="15">
                <Properties>
                  <Property Name="DelayTime">RailCar.ConnectTime</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="22" />
              </Step>
              <Step Type="Assign" Name="RestartLocomotive" ID="16">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">RailCar.MyLocomotive.DesiredSpeed</Property>
                </Properties>
              </Step>
              <Step Type="EndTransfer" Name="FromParking" ID="17">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Decide" Name="Pickup" ID="18">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(RailCar.MyLocomotive != Nothing) &amp;&amp; ((RailCar.MyLocomotive == ExitingRailCar.RailCar.MyLocomotive) || (RailCar.MyLocomotive == ExitingRailCar)) &amp;&amp; (Object != ExitingRailCar)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="23" />
              </Step>
              <Step Type="Assign" Name="IncrStopRequest" ID="19">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive.Locomotive.StopRequest</Value>
                  </Property>
                  <Property Name="NewValue">RailCar.MyLocomotive.Locomotive.StopRequest + 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Assign" Name="DecrStopRequest" ID="20">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.MyLocomotive.Locomotive.StopRequest</Value>
                  </Property>
                  <Property Name="NewValue">RailCar.MyLocomotive.Locomotive.StopRequest - 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="21" />
              </Step>
              <Step Type="Decide" Name="NoStopRequest" ID="21">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.MyLocomotive.Locomotive.StopRequest &lt; 1</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="16" />
              </Step>
              <Step Type="Execute" Name="AttachedRailcar_AddOnProcess" ID="22">
                <Properties>
                  <Property Name="ProcessName">AttachedRailcarAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="20" />
              </Step>
              <Step Type="Assign" Name="clearExitingRailCar" ID="23">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ExitingRailCar</Value>
                  </Property>
                  <Property Name="NewValue">Nothing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="Decide" Name="noneFound" ID="24">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Token.ReturnValue==0</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Fire" Name="nodeClear" ID="25">
                <Properties>
                  <Property Name="EventName">nodeClear</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredFromAssociatedObject" IsOverride="True" InterfaceProcessID="Node.OnEnteredFromAssociatedObject" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Tally" Name="OnEnteringTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnEnteringTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValue">TalliesOnEnteringValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="RoutingOutLogic" ID="6">
                <Properties>
                  <Property Name="ProcessName">RoutingOutLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="7">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfTransporter" ExclusionExpression="(DestinationType==List.TransferNodeDestinationType.Continue)&amp;&amp;(!RideOnTransporter)" ID="8">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.Is.Transporter</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="14" />
                <Exit Name="False" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="9">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="RandomNumberStream">RandomNumberStream</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Decide" Name="IfFreeSpaceTraveler" ID="10">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.CurrentNetwork==Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="11" />
                <Exit Name="False" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="11">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="TransferFailureLogic" ID="12">
                <Properties>
                  <Property Name="ProcessName">TransferFailureLogic</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfRideOnTransporter" ExclusionExpression="Math.If(RideOnTransporter,1,2)" ID="13">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RideOnTransporter</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Decide" Name="NotRailCar" ID="14">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">!Entity.Is.RailCar</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="17" />
              </Step>
              <Step Type="Decide" Name="IsTrailingRailcar" ID="15">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.PredecessorRailCar != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="16" />
                <Exit Name="False" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Transfer" Name="FollowPredecessor" ID="16">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="OutboundLinkPreference">Specific</Property>
                  <Property Name="OutboundLinkName">RailCar.PredecessorRailCar.TrailingLink</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Decide" Name="NotDestination" ID="17">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.DestinationNode != ParentObject</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="15" />
                <Exit Name="False" Type="Alternate" NextID="15" />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </NodeDefinition>
      <FixedDefinition Name="Filler" Id="b6d12dbb-f320-4352-a596-5977d4b1e80d" Revision="7" Author="Sales and Support" Description="The Filler object may be used to model a process that fills container entities with flow entities representing quantities of fluids or other mass.&#xD;&#xA;&#xD;&#xA;The filling flow rate of the Filler is regulated by its 'FlowInput' flow node. Container entities enter the Filler through its ‘ContainerInput’ basic node and exit the Filler from its ‘Output’ transfer node." ResourceLogic="True" CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="7">Version 5.96: Renamed 'FillQuantityUnitType' property to 'DesiredQuantityUnitType'. Renamed 'DesiredFillQuantity' property to 'DesiredQuantity'. Renamed 'Specific Quantity' fill target type value to 'Add Specific Quantity'. Other private state and element name changes. Added new 'Evaluating Seize Request' add-on process trigger.</ChangeDescription>
        </ChangeDescriptions>
        <Lists>
          <StringList Name="ResourceStateName">
            <Items>
              <Item Value="Starved" />
              <Item Value="Processing" />
              <Item Value="Blocked" />
              <Item Value="Failed" />
              <Item Value="OffShift" />
            </Items>
          </StringList>
          <StringList Name="FillTargetTypeValue">
            <Items>
              <Item Value="FillUntilFull" />
              <Item Value="AddSpecificQuantity" />
            </Items>
          </StringList>
          <StringList Name="FillerFailureType">
            <Items>
              <Item Value="NoFailures" />
              <Item Value="CalendarTimeBased" />
              <Item Value="ProcessingCountBased" />
              <Item Value="EventCountBased" />
              <Item Value="ProcessingTimeBased" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Buffer Capacities" Description="Buffer Capacities" InitiallyExpanded="False" />
            <Category Name="Reliability Logic" Description="Reliability Logic" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Secondary Resources" Description="Optional Secondary Resource Related Logic" InitiallyExpanded="False" />
            <Category Name="Secondary Resources/Resource for Processing" Description="Optional Secondary Resource for Processing&#xD;&#xA;&#xD;&#xA;Defines a secondary resource which must be seized once an entity has been allocated Filler capacity, but before entering (or ending transfer into) its processing station. The resource will be released by the entity immediately after processing is completed." />
            <Category Name="Secondary Resources/Other Resource Seizes" Description="Other Optional Secondary Resource Seizes" InitiallyExpanded="False" />
            <Category Name="Secondary Resources/Other Resource Releases" Description="Other Optional Secondary Resource Releases" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="TransferInTime" DisplayName="Transfer-In Time" Description="The time required to transfer an entity into this object." ComplexityLevel="Advanced" Category="Process Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <ListProperty Name="FillTargetType" DisplayName="Fill Target Type" Description="When filling a container, indicates whether the Filler object is to fill the container until full or add a specific desired quantity." Category="Process Logic" DefaultValue="Fill Until Full" NullString="null" List="FillTargetTypeValue">
            <Captions>
              <Caption Value="FillUntilFull" Display="Fill Until Full" />
              <Caption Value="AddSpecificQuantity" Display="Add Specific Quantity" />
            </Captions>
          </ListProperty>
          <EnumProperty Name="DesiredQuantityUnitType" DisplayName="Quantity Unit Type" Description="The unit type to be used for specifying the desired quantity to add to a container." DefaultValue="Volume" Parent="FillTargetType" NullString="null" EnumType="FlowContentUnitType">
            <Switch Property="FillTargetType" Value="AddSpecificQuantity" />
          </EnumProperty>
          <ExpressionProperty Name="DesiredQuantity" DisplayName="Desired Quantity" Description="The desired quantity to add to a container. Filling activity will end once this volume or weight quantity has been added or the container has become full, whichever event occurs first." DefaultValue="1.0" Parent="FillTargetType" NullString="null" UnitTypeProperty="DesiredQuantityUnitType">
            <Switch Property="FillTargetType" Value="AddSpecificQuantity" />
          </ExpressionProperty>
          <IntegerProperty Name="InputBufferCapacity" DisplayName="Input Buffer" Description="The number of entities that can be held in this object's input buffer." Category="Buffer Capacities" DefaultValue="Infinity" NullString="null" />
          <IntegerProperty Name="OutputBufferCapacity" DisplayName="Output Buffer" Description="The number of entities that can be held in this object's output buffer." Category="Buffer Capacities" DefaultValue="Infinity" NullString="null" />
          <ListProperty Name="FailureType" DisplayName="Failure Type" Description="Specifies whether this object has failures that affect the object's availability, and the method used to trigger the failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="No Failures" NullString="null" List="FillerFailureType">
            <Captions>
              <Caption Value="NoFailures" Display="No Failures" />
              <Caption Value="CalendarTimeBased" Display="Calendar Time Based" />
              <Caption Value="ProcessingCountBased" Display="Processing Count Based" />
              <Caption Value="EventCountBased" Display="Event Count Based" />
              <Caption Value="ProcessingTimeBased" Display="Processing Time Based" />
            </Captions>
          </ListProperty>
          <EventProperty Name="FailureEventName" DisplayName="Failure Event Name" Description="The name of the event which determines when the next failure occurs." ComplexityLevel="Advanced" Category="Reliability Logic" NullString="null">
            <Switch Property="FailureType" Value="EventCountBased" />
          </EventProperty>
          <ExpressionProperty Name="CountBetweenFailures" DisplayName="Count Between Failures" Description="The count between failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Uniform(100,200)" NullString="null">
            <Switch Property="FailureType" Value="ProcessingCountBased, EventCountBased" />
          </ExpressionProperty>
          <ExpressionProperty Name="UptimeBetweenFailures" DisplayName="Uptime Between Failures" Description="The uptime between failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Exponential(100)" NullString="null" UnitType="Time">
            <Switch Property="FailureType" Value="CalendarTimeBased, ProcessingTimeBased" />
          </ExpressionProperty>
          <ExpressionProperty Name="TimeToRepair" DisplayName="Time To Repair" Description="The time required to repair a failure when one occurs." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Triangular(0.5,1.0,1.5)" NullString="null" UnitType="Time">
            <Switch Property="FailureType" Comparison="NotEqual" Value="NoFailures" />
          </ExpressionProperty>
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when an entity is entering this object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsBeforeExiting" DisplayName="Before Exiting" Description="Optional state assignments when an entity is ready to exit this object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsBeforeExitingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsBeforeExitingNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsBeforeExitingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <EnumProperty Name="SecondaryResourceForProcessingObjectType" DisplayName="Object Type" Description="The method for specifying the resource object to be seized and held while an entity is processed." ComplexityLevel="Advanced" Category="Secondary Resources/Resource for Processing" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
            <Captions>
              <Caption Value="FromList" Display="Select From List" />
              <Caption Value="ParentObject" Visible="False" />
            </Captions>
          </EnumProperty>
          <ObjectInstanceProperty Name="SecondaryResourceForProcessingObjectName" DisplayName="Object Name" Description="The name of the resource object to be seized." ComplexityLevel="Advanced" Category="Secondary Resources/Resource for Processing" Required="False" NullString="null" FilterMode="Resources">
            <Switch Property="SecondaryResourceForProcessingObjectType" Value="Specific" />
          </ObjectInstanceProperty>
          <ListNameProperty Name="SecondaryResourceForProcessingObjectListName" DisplayName="Object List Name" Description="The name of the object list from which the resource object will be selected to be seized." ComplexityLevel="Advanced" Category="Secondary Resources/Resource for Processing" Required="False" NullString="null" ListType="Object">
            <Switch Property="SecondaryResourceForProcessingObjectType" Value="FromList" />
          </ListNameProperty>
          <EnumProperty Name="SecondaryResourceForProcessingSelectionGoal" DisplayName="Selection Goal" Description="The goal for selecting the resource object to seize." ComplexityLevel="Advanced" Category="Secondary Resources/Resource for Processing" DefaultValue="Preferred Order" NullString="null" EnumType="SeizeSelectionGoal">
            <Switch Property="SecondaryResourceForProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
            <Captions>
              <Caption Value="SmallestDistance" Display="Smallest Distance" />
              <Caption Value="LargestDistance" Display="Largest Distance" />
              <Caption Value="PreferredOrder" Display="Preferred Order" />
              <Caption Value="SmallestValue" Display="Smallest Value" />
              <Caption Value="LargestValue" Display="Largest Value" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="SecondaryResourceForProcessingSelectionExpression" DisplayName="Selection Expression" Description="The expression evaluated for each resource that is a candidate to seize. In the expression, use the keyword 'Candidate' to reference an object in the collection of candidates to be seized (e.g., Candidate.Object.Capacity.Remaining)." ComplexityLevel="Advanced" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourceForProcessingSelectionGoal" NullString="null" SupportForeign="True">
            <Switch Property="SecondaryResourceForProcessingSelectionGoal" Value="SmallestValue, LargestValue" />
          </ExpressionProperty>
          <EnumProperty Name="SecondaryResourceForProcessingRequestVisit" DisplayName="Request Move" Description="Indicates whether a move to a specified location will be requested from the seized resource. Processing will not be able to start until the resource has arrived to the requested location." ComplexityLevel="Advanced" Category="Secondary Resources/Resource for Processing" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
            <Captions>
              <Caption Value="ToNode" Display="To Node" />
            </Captions>
          </EnumProperty>
          <NodeProperty Name="SecondaryResourceForProcessingNodeName" DisplayName="Destination Node" Description="The name of the specific node location that the seized resource will be requested to move to." ComplexityLevel="Advanced" Parent="SecondaryResourceForProcessingRequestVisit" NullString="null" ValidObjectType="Node">
            <Switch Property="SecondaryResourceForProcessingRequestVisit" Value="ToNode" />
          </NodeProperty>
          <RepeatingProperty Name="SecondaryResourceSeizesOnEntering" DisplayName="On Entering" Description="Secondary resource seizes required when an entity is entering the Filler object." ComplexityLevel="Advanced" Category="Secondary Resources/Other Resource Seizes" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Secondary Resource (Basic Logic)" />
                <Category Name="Advanced Options" Description="Secondary Resource (Advanced Options)" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceSeizesOnEnteringObjectType" DisplayName="Object Type" Description="The method for specifying the object(s) to be seized." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceSeizesOnEnteringObjectName" DisplayName="Object Name" Description="The name of the object to be seized." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" FilterMode="Resources">
                <Switch Property="SecondaryResourceSeizesOnEnteringObjectType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceSeizesOnEnteringObjectListName" DisplayName="Object List Name" Description="The name of the object list from which one or more objects will be selected to be seized." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceSeizesOnEnteringObjectType" Value="FromList" />
              </ListNameProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringNumberOfObjects" DisplayName="Number Of Objects" Description="The number of individual resource objects to seize capacity units of." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceSeizesOnEnteringObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringUnitsPerObject" DisplayName="Units Per Object" Description="The number of capacity units to seize per resource object." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null" />
              <EnumProperty Name="SecondaryResourceSeizesOnEnteringSelectionGoal" DisplayName="Selection Goal" Description="The goal for selecting objects to seize." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="Preferred Order" NullString="null" EnumType="SeizeSelectionGoal">
                <Switch Property="SecondaryResourceSeizesOnEnteringObjectType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="SmallestDistance" Display="Smallest Distance" />
                  <Caption Value="LargestDistance" Display="Largest Distance" />
                  <Caption Value="PreferredOrder" Display="Preferred Order" />
                  <Caption Value="SmallestValue" Display="Smallest Value" />
                  <Caption Value="LargestValue" Display="Largest Value" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringSelectionExpression" DisplayName="Selection Expression" Description="The expression evaluated for each object that is a candidate to seize. In the expression, use the keyword 'Candidate' to reference an object in the collection of candidates to be seized (e.g., Candidate.Object.Capacity.Remaining)." ComplexityLevel="Advanced" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourceSeizesOnEnteringSelectionGoal" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceSeizesOnEnteringSelectionGoal" Value="SmallestValue, LargestValue" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringSelectionCondition" DisplayName="Selection Condition" Description="An optional condition evaluated for each candidate object that must be true for the object to be eligible for seizing. In the condition, use the keyword 'Candidate' to reference an object in the collection of candidates (e.g., Candidate.Object.Capacity.Remaining)." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceSeizesOnEnteringOnSeizedProcess" DisplayName="On Seized Process" Description="Optional process that is executed by a token associated with a seized object after the seize occurs." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" Type="Process" />
              <EnumProperty Name="SecondaryResourceSeizesOnEnteringRequestVisit" DisplayName="Request Move" Description="Indicates whether a move to a specified location will be requested from the seized resources(s). Filler activity will not continue until all resources have arrived to the requested location." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
                <Captions>
                  <Caption Value="ToNode" Display="To Node" />
                </Captions>
              </EnumProperty>
              <NodeProperty Name="SecondaryResourceSeizesOnEnteringNodeName" DisplayName="Destination Node" Description="The name of the specific node location that the seized resources(s) will be requested to move to." ComplexityLevel="Advanced" Parent="SecondaryResourceSeizesOnEnteringRequestVisit" NullString="null" ValidObjectType="Node">
                <Switch Property="SecondaryResourceSeizesOnEnteringRequestVisit" Value="ToNode" />
              </NodeProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringVisitPriority" DisplayName="Move Priority" Description="The priority of the move request if a PlanVisit step or SelectVisit step is used by the seized resource(s) to choose a visit destination from multiple candidates. If not specified, then this property defaults to the processing entity's Priority state value." ComplexityLevel="Advanced" DefaultValue="Entity.Priority" Required="False" Parent="SecondaryResourceSeizesOnEnteringRequestVisit" NullString="null">
                <Switch Property="SecondaryResourceSeizesOnEnteringRequestVisit" Comparison="NotEqual" Value="None" />
              </ExpressionProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="SecondaryResourceSeizesBeforeProcessing" DisplayName="Before Processing" Description="Secondary resource seizes required once an entity has been allocated Filler capacity, but before entering (or ending transfer into) its processing station.&#xD;&#xA;" ComplexityLevel="Advanced" Category="Secondary Resources/Other Resource Seizes" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Secondary Resource (Basic Logic)" />
                <Category Name="Advanced Options" Description="Secondary Resource (Advanced Options)" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceSeizesBeforeProcessingObjectType" DisplayName="Object Type" Description="The method for specifying the object(s) to be seized." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceSeizesBeforeProcessingObjectName" DisplayName="Object Name" Description="The name of the object to be seized." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" FilterMode="Resources">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingObjectType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceSeizesBeforeProcessingObjectListName" DisplayName="Object List Name" Description="The name of the object list from which one or more objects will be selected to be seized." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingObjectType" Value="FromList" />
              </ListNameProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingNumberOfObjects" DisplayName="Number Of Objects" Description="The number of individual resource objects to seize capacity units of." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingUnitsPerObject" DisplayName="Units Per Object" Description="The number of capacity units to seize per resource object." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null" />
              <EnumProperty Name="SecondaryResourceSeizesBeforeProcessingSelectionGoal" DisplayName="Selection Goal" Description="The goal for selecting objects to seize." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="Preferred Order" NullString="null" EnumType="SeizeSelectionGoal">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="SmallestDistance" Display="Smallest Distance" />
                  <Caption Value="LargestDistance" Display="Largest Distance" />
                  <Caption Value="PreferredOrder" Display="Preferred Order" />
                  <Caption Value="SmallestValue" Display="Smallest Value" />
                  <Caption Value="LargestValue" Display="Largest Value" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingSelectionExpression" DisplayName="Selection Expression" Description="The expression evaluated for each object that is a candidate to seize. In the expression, use the keyword 'Candidate' to reference an object in the collection of candidates to be seized (e.g., Candidate.Object.Capacity.Remaining)." ComplexityLevel="Advanced" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourceSeizesBeforeProcessingSelectionGoal" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingSelectionGoal" Value="SmallestValue, LargestValue" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingSelectionCondition" DisplayName="Selection Condition" Description="An optional condition evaluated for each candidate object that must be true for the object to be eligible for seizing. In the condition, use the keyword 'Candidate' to reference an object in the collection of candidates (e.g., Candidate.Object.Capacity.Remaining)." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceSeizesBeforeProcessingOnSeizedProcess" DisplayName="On Seized Process" Description="Optional process that is executed by a token associated with a seized object after the seize occurs." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" Type="Process" />
              <EnumProperty Name="SecondaryResourceSeizesBeforeProcessingRequestVisit" DisplayName="Request Move" Description="Indicates whether a move to a specified location will be requested from the seized resources(s). Filler activity will not continue until all resources have arrived to the requested location." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
                <Captions>
                  <Caption Value="ToNode" Display="To Node" />
                </Captions>
              </EnumProperty>
              <NodeProperty Name="SecondaryResourceSeizesBeforeProcessingNodeName" DisplayName="Destination Node" Description="The name of the specific node location that the seized resources(s) will be requested to move to." ComplexityLevel="Advanced" Parent="SecondaryResourceSeizesBeforeProcessingRequestVisit" NullString="null" ValidObjectType="Node">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingRequestVisit" Value="ToNode" />
              </NodeProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingVisitPriority" DisplayName="Move Priority" Description="The priority of the move request if a PlanVisit step or SelectVisit step is used by the seized resource(s) to choose a visit destination from multiple candidates. If not specified, then this property defaults to the processing entity's Priority state value." ComplexityLevel="Advanced" DefaultValue="Entity.Priority" Required="False" Parent="SecondaryResourceSeizesBeforeProcessingRequestVisit" NullString="null">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingRequestVisit" Comparison="NotEqual" Value="None" />
              </ExpressionProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="SecondaryResourceSeizesAfterProcessing" DisplayName="After Processing" Description="Secondary resource seizes required after all possible container elements of an entity have been filled, and the entity is now about to attempt its exit from the Filler's processing station.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" ComplexityLevel="Advanced" Category="Secondary Resources/Other Resource Seizes" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Secondary Resource (Basic Logic)" />
                <Category Name="Advanced Options" Description="Secondary Resource (Advanced Options)" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceSeizesAfterProcessingObjectType" DisplayName="Object Type" Description="The method for specifying the object(s) to be seized." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceSeizesAfterProcessingObjectName" DisplayName="Object Name" Description="The name of the object to be seized." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" FilterMode="Resources">
                <Switch Property="SecondaryResourceSeizesAfterProcessingObjectType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceSeizesAfterProcessingObjectListName" DisplayName="Object List Name" Description="The name of the object list from which one or more objects will be selected to be seized." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceSeizesAfterProcessingObjectType" Value="FromList" />
              </ListNameProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingNumberOfObjects" DisplayName="Number Of Objects" Description="The number of individual resource objects to seize capacity units of." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceSeizesAfterProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingUnitsPerObject" DisplayName="Units Per Object" Description="The number of capacity units to seize per resource object." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null" />
              <EnumProperty Name="SecondaryResourceSeizesAfterProcessingSelectionGoal" DisplayName="Selection Goal" Description="The goal for selecting objects to seize." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="Preferred Order" NullString="null" EnumType="SeizeSelectionGoal">
                <Switch Property="SecondaryResourceSeizesAfterProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="SmallestDistance" Display="Smallest Distance" />
                  <Caption Value="LargestDistance" Display="Largest Distance" />
                  <Caption Value="PreferredOrder" Display="Preferred Order" />
                  <Caption Value="SmallestValue" Display="Smallest Value" />
                  <Caption Value="LargestValue" Display="Largest Value" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingSelectionExpression" DisplayName="Selection Expression" Description="The expression evaluated for each object that is a candidate to seize. In the expression, use the keyword 'Candidate' to reference an object in the collection of candidates to be seized (e.g., Candidate.Object.Capacity.Remaining)." ComplexityLevel="Advanced" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourceSeizesAfterProcessingSelectionGoal" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceSeizesAfterProcessingSelectionGoal" Value="SmallestValue, LargestValue" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingSelectionCondition" DisplayName="Selection Condition" Description="An optional condition evaluated for each candidate object that must be true for the object to be eligible for seizing. In the condition, use the keyword 'Candidate' to reference an object in the collection of candidates (e.g., Candidate.Object.Capacity.Remaining)." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceSeizesAfterProcessingOnSeizedProcess" DisplayName="On Seized Process" Description="Optional process that is executed by a token associated with a seized object after the seize occurs." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" Type="Process" />
              <EnumProperty Name="SecondaryResourceSeizesAfterProcessingRequestVisit" DisplayName="Request Move" Description="Indicates whether a move to a specified location will be requested from the seized resources(s). Filler activity will not continue until all resources have arrived to the requested location." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
                <Captions>
                  <Caption Value="ToNode" Display="To Node" />
                </Captions>
              </EnumProperty>
              <NodeProperty Name="SecondaryResourceSeizesAfterProcessingNodeName" DisplayName="Destination Node" Description="The name of the specific node location that the seized resources(s) will be requested to move to." ComplexityLevel="Advanced" Parent="SecondaryResourceSeizesAfterProcessingRequestVisit" NullString="null" ValidObjectType="Node">
                <Switch Property="SecondaryResourceSeizesAfterProcessingRequestVisit" Value="ToNode" />
              </NodeProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingVisitPriority" DisplayName="Move Priority" Description="The priority of the move request if a PlanVisit step or SelectVisit step is used by the seized resource(s) to choose a visit destination from multiple candidates. If not specified, then this property defaults to the processing entity's Priority state value." ComplexityLevel="Advanced" DefaultValue="Entity.Priority" Required="False" Parent="SecondaryResourceSeizesAfterProcessingRequestVisit" NullString="null">
                <Switch Property="SecondaryResourceSeizesAfterProcessingRequestVisit" Comparison="NotEqual" Value="None" />
              </ExpressionProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="SecondaryResourceReleasesOnEntering" DisplayName="On Entering" Description="Secondary resource releases to be performed when an entity is entering the Filler object." ComplexityLevel="Advanced" Category="Secondary Resources/Other Resource Releases" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Secondary Resource (Basic Logic)" />
                <Category Name="Advanced Options" Description="Secondary Resource (Advanced Options)" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceReleasesOnEnteringObjectType" DisplayName="Object Type" Description="The method for specifying the object(s) to be released." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceReleasesOnEnteringObjectName" DisplayName="Object Name" Description="The name of the object to be released." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" FilterMode="Resources">
                <Switch Property="SecondaryResourceReleasesOnEnteringObjectType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceReleasesOnEnteringObjectListName" DisplayName="Object List Name" Description="The name of the object list from which one or more objects will be released." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceReleasesOnEnteringObjectType" Value="FromList" />
              </ListNameProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringNumberOfObjects" DisplayName="Number Of Objects" Description="The number of individual resource objects to release capacity units of." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceReleasesOnEnteringObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringUnitsPerObject" DisplayName="Units Per Object" Description="The number of capacity units to release per resource object." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null" />
              <EnumProperty Name="SecondaryResourceReleasesOnEnteringReleaseOrder" DisplayName="Release Order" Description="The order in which to release objects owned by the Owner." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="FirstSeized" NullString="null" EnumType="ObjectReleaseOrder">
                <Switch Property="SecondaryResourceReleasesOnEnteringObjectType" Comparison="NotEqual" Value="ParentObject" />
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringReleaseCondition" DisplayName="Release Condition" Description="An optional condition evaluated for each owned object that must be true for the object to be eligible to release. In the condition, use the keyword 'Candidate' to reference an object in the collection of candidates (e.g., Candidate.Object.ID)." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesOnEnteringObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ElementProperty Name="SecondaryResourceReleasesOnEnteringOnReleasedProcess" DisplayName="On Released Process" Description="Optional process that is executed by a token associated with a released object after the release occurs." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" Type="Process" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="SecondaryResourceReleasesBeforeProcessing" DisplayName="Before Processing" Description="Secondary resource releases to be performed once an entity has been allocated Filler capacity, but before entering (or ending transfer into) its processing station." ComplexityLevel="Advanced" Category="Secondary Resources/Other Resource Releases" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Secondary Resource (Basic Logic)" />
                <Category Name="Advanced Options" Description="Secondary Resource (Advanced Options)" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceReleasesBeforeProcessingObjectType" DisplayName="Object Type" Description="The method for specifying the object(s) to be released." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceReleasesBeforeProcessingObjectName" DisplayName="Object Name" Description="The name of the object to be released." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" FilterMode="Resources">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingObjectType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceReleasesBeforeProcessingObjectListName" DisplayName="Object List Name" Description="The name of the object list from which one or more objects will be released." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingObjectType" Value="FromList" />
              </ListNameProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingNumberOfObjects" DisplayName="Number Of Objects" Description="The number of individual resource objects to release capacity units of." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingUnitsPerObject" DisplayName="Units Per Object" Description="The number of capacity units to release per resource object." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null" />
              <EnumProperty Name="SecondaryResourceReleasesBeforeProcessingReleaseOrder" DisplayName="Release Order" Description="The order in which to release objects owned by the Owner." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="FirstSeized" NullString="null" EnumType="ObjectReleaseOrder">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingReleaseCondition" DisplayName="Release Condition" Description="An optional condition evaluated for each owned object that must be true for the object to be eligible to release. In the condition, use the keyword 'Candidate' to reference an object in the collection of candidates (e.g., Candidate.Object.ID)." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ElementProperty Name="SecondaryResourceReleasesBeforeProcessingOnReleasedProcess" DisplayName="On Released Process" Description="Optional process that is executed by a token associated with a released object after the release occurs." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" Type="Process" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="SecondaryResourceReleasesAfterProcessing" DisplayName="After Processing" Description="Secondary resource releases to be performed after all possible container elements of an entity have been filled, and the entity is now about to attempt its exit from the Filler's processing station.&#xD;&#xA;" ComplexityLevel="Advanced" Category="Secondary Resources/Other Resource Releases" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Secondary Resource (Basic Logic)" />
                <Category Name="Advanced Options" Description="Secondary Resource (Advanced Options)" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceReleasesAfterProcessingObjectType" DisplayName="Object Type" Description="The method for specifying the object(s) to be released." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceReleasesAfterProcessingObjectName" DisplayName="Object Name" Description="The name of the object to be released." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" FilterMode="Resources">
                <Switch Property="SecondaryResourceReleasesAfterProcessingObjectType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceReleasesAfterProcessingObjectListName" DisplayName="Object List Name" Description="The name of the object list from which one or more objects will be released." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceReleasesAfterProcessingObjectType" Value="FromList" />
              </ListNameProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingNumberOfObjects" DisplayName="Number Of Objects" Description="The number of individual resource objects to release capacity units of." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceReleasesAfterProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingUnitsPerObject" DisplayName="Units Per Object" Description="The number of capacity units to release per resource object." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="1" NullString="null" />
              <EnumProperty Name="SecondaryResourceReleasesAfterProcessingReleaseOrder" DisplayName="Release Order" Description="The order in which to release objects owned by the Owner." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="FirstSeized" NullString="null" EnumType="ObjectReleaseOrder">
                <Switch Property="SecondaryResourceReleasesAfterProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingReleaseCondition" DisplayName="Release Condition" Description="An optional condition evaluated for each owned object that must be true for the object to be eligible to release. In the condition, use the keyword 'Candidate' to reference an object in the collection of candidates (e.g., Candidate.Object.ID)." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesAfterProcessingObjectType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ElementProperty Name="SecondaryResourceReleasesAfterProcessingOnReleasedProcess" DisplayName="On Released Process" Description="Optional process that is executed by a token associated with a released object after the release occurs." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" Type="Process" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs immediately after an entity has entered this object and is about to start the 'Transfer-In Time'." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="BeforeProcessingAddOnProcess" DisplayName="Before Processing" Description="Occurs when an entity has been allocated Filler capacity, but before entering (or ending transfer into) its processing station." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="FillingContainerAddOnProcess" DisplayName="Filling Container" Description="Occurs when the Filler is about to start filling a container element of the current entity in its processing station." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="FilledContainerAddOnProcess" DisplayName="Filled Container" Description="Occurs when the Filler has finished filling a container element of the current entity in its processing station." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="AfterProcessingAddOnProcess" DisplayName="After Processing" Description="Occurs when all possible container elements of an entity have been filled, and the entity is now about to attempt its exit from the Filler's processing station." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when an entity has exited this object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="FailedAddOnProcess" DisplayName="Failed" Description="Occurs when this object has failed." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RepairedAddOnProcess" DisplayName="Repaired" Description="Occurs when a failure is repaired at this object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EvaluatingSeizeRequestAddOnProcess" DisplayName="Evaluating Seize Request" Description="Occurs when this Filler object is evaluating whether to accept or reject a request to seize capacity of the filler. In the executed decision process, assigning a value less than or equal to 0.0 to the executing token's ReturnValue state (Token.ReturnValue) indicates that the seize request is rejected." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="OnShiftAddOnProcess" DisplayName="On Shift" Description="Occurs when the object goes 'on shift' because of its specified work schedule." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="OffShiftAddOnProcess" DisplayName="Off Shift" Description="Occurs when the object goes 'off shift' because of its specified work schedule." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <Overrides>
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="True" />
            <Override Name="DisplayCategory" Visible="True" />
            <Override Name="DisplayColor" Visible="True" />
            <Override Name="CapacityType" Visible="True" />
            <Override Name="WorkSchedule" Visible="True" />
            <Override Name="WorkDayExceptions" Visible="True" />
            <Override Name="WorkPeriodExceptions" Visible="True" />
            <Override Name="InitialCapacity" Visible="False" DefaultValue="1" />
            <Override Name="RankingRule" Visible="True" />
            <Override Name="RankingExpression" Visible="True" DefaultValue="Entity.Priority" />
            <Override Name="DynamicSelectionRule" Visible="True" />
            <Override Name="CurrentSizeIndex" DefaultValue="$(DefinitionName).ResourceState" />
            <Override Name="TransferOutConstraintsType" DefaultValue="Disable" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="4" OldPropertyName="FillQuantityUnitType" NewPropertyName="DesiredQuantityUnitType" />
            <PropertyReplacement Version="4" OldPropertyName="DesiredFillQuantity" NewPropertyName="DesiredQuantity" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States>
          <ListState Name="ResourceState" Description="The current resource state of this object (numeric values for this state are Starved = 0, Processing = 1, Blocked = 2, Failed = 3, OffShift = 4)." List="ResourceStateName" AutomaticAssignment="ResourceAutoStates" ResourceUtilizationCalculation="Default">
            <ResourceUtilizationCalculationSettings>
              <ResourceUtilizationCalculationSetting StateName="Starved" Setting="NotApplicable" />
              <ResourceUtilizationCalculationSetting StateName="Processing" Setting="IncludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="Blocked" Setting="ExcludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="Failed" Setting="ExcludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="OffShift" Setting="ExcludeUnitsAllocated" />
            </ResourceUtilizationCalculationSettings>
          </ListState>
          <ElementReferenceState Name="CurrentFlowContainer" Description="If the Filler object is currently filling a container element of an entity, then this function returns a reference to that container. Otherwise, the Nothing keyword is returned." ElementType="Container" />
          <IntegerState Name="CurrentElementIndex" Description="State variable used to get/set the current index into the direct child elements of the current entity being processed." Private="True" />
          <DiscreteState Name="DesiredAddedVolume" Description="State variable used to get/set the desired volume to add to the current container. Filling activity will end once this volume quantity has been added or the container has become full, whichever event occurs first." InitialValueUnits="Cubic Meters" Private="True" UnitType="Volume" />
          <DiscreteState Name="DesiredAddedWeight" Description="State variable used to get/set the desired weight to add to the current container. Filling activity will end once this weight quantity has been added or the container has become full, whichever event occurs first." InitialValueUnits="Kilograms" Private="True" UnitType="Weight" />
        </States>
        <Events>
          <Event Name="CalendarTimeBasedFailuresReset" Description="An occurrence of this event will reset the 'CalendarTimeBasedFailures' timer." Public="False" />
          <Event Name="ProcessingCountBasedFailuresReset" Description="An occurrence of this event will reset the 'ProcessingCountBasedFailures' timer." Public="False" />
          <Event Name="EventCountBasedFailuresReset" Description="An occurrence of this event will reset the 'EventCountBasedFailures' timer." Public="False" />
          <Event Name="ProcessingTimeBasedFailuresReset" Description="An occurrence of this event will reset the 'ProcessingTimeBasedFailures' timer." Public="False" />
        </Events>
        <UsedObjects>
          <UsedObject Name="TransferNode" />
          <UsedObject Name="BasicNode" />
          <UsedObject Name="FlowNode" />
        </UsedObjects>
        <Elements>
          <Element Type="Station" Name="InputBuffer" Scope="Public" Description="The station location inside this Filler object where entities wait to be processed.">
            <Properties>
              <Property Name="InitialCapacity">InputBufferCapacity</Property>
              <Property Name="EntryRankingRule">RankingRule</Property>
              <Property Name="EntryRankingExpression">RankingExpression</Property>
              <Property Name="ContentsRankingRule">RankingRule</Property>
              <Property Name="ContentsRankingExpression">RankingExpression</Property>
              <Property Name="RedirectStation">Processing</Property>
              <Property Name="CostPerUse" Units="USD">0.0</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
          </Element>
          <Element Type="Station" Name="Processing" Scope="Public" Description="The station location inside this Filler object where entities are processed.">
            <Properties>
              <Property Name="InitialCapacity">InitialCapacity</Property>
              <Property Name="EntryRankingRule">RankingRule</Property>
              <Property Name="EntryRankingExpression">RankingExpression</Property>
              <Property Name="DynamicSelectionRule">
                <Value>DynamicSelectionRule</Value>
              </Property>
              <Property Name="CostPerUse" Units="USD">0.0</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
          </Element>
          <Element Type="Station" Name="OutputBuffer" Scope="Public" Description="The station location inside this Filler object where entities wait to exit the object after being processed.">
            <Properties>
              <Property Name="InitialCapacity">OutputBufferCapacity</Property>
              <Property Name="CostPerUse" Units="USD">0.0</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
          </Element>
          <Element Type="Failure" Name="Failure" Scope="Public" Description="The failure occurrences for this object.">
            <Properties>
              <Property Name="ReportStatistics">False</Property>
              <Property Name="OnFailedProcess">OnFailed</Property>
              <Property Name="OnRepairedProcess">OnRepaired</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="CalendarTimeBasedFailures">
            <Properties>
              <Property Name="TimeOffset">UptimeBetweenFailures</Property>
              <Property Name="TimeInterval">UptimeBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">CalendarTimeBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="ProcessingCountBasedFailures">
            <Properties>
              <Property Name="IntervalType">EventCount</Property>
              <Property Name="TriggeringEventName">Processing.Exited</Property>
              <Property Name="TriggeringEventCount">CountBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">ProcessingCountBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="EventCountBasedFailures">
            <Properties>
              <Property Name="IntervalType">EventCount</Property>
              <Property Name="TriggeringEventName">FailureEventName</Property>
              <Property Name="TriggeringEventCount">CountBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">EventCountBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="ProcessingTimeBasedFailures">
            <Properties>
              <Property Name="IntervalType">TimeInState</Property>
              <Property Name="TimeOffset">UptimeBetweenFailures</Property>
              <Property Name="TimeInterval">UptimeBetweenFailures</Property>
              <Property Name="StateVariableName">
                <Value>ResourceState</Value>
              </Property>
              <Property Name="StateValue">List.ResourceStateName.Processing</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">ProcessingTimeBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="ReachedDesiredAddedVolume">
            <Properties>
              <Property Name="StateVariableName">
                <Value>CurrentFlowContainer.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="ReachedDesiredAddedWeight">
            <Properties>
              <Property Name="StateVariableName">
                <Value>CurrentFlowContainer.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="FillingRateChanged">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate</Value>
              </Property>
              <Property Name="TriggeredProcessName">OnFillingRateChanged</Property>
              <Property Name="TriggerCondition">(CurrentFlowContainer.Contents.Volume &lt; CurrentFlowContainer.CurrentVolumeCapacity) &amp;&amp; (CurrentFlowContainer.Contents.Weight &lt; CurrentFlowContainer.CurrentWeightCapacity) &amp;&amp; (CurrentFlowContainer.Contents.Volume &lt; ReachedDesiredAddedVolume.CurrentThresholdValue || CurrentFlowContainer.Contents.Weight &lt; ReachedDesiredAddedWeight.CurrentThresholdValue) &amp;&amp; ((ResourceState == List.ResourceStateName.Processing &amp;&amp; FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate == 0.0) || (ResourceState == List.ResourceStateName.Starved &amp;&amp; FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate &gt; 0.0))</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.FillerFailureType.CalendarTimeBased" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CalendarTimeBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.FillerFailureType.CalendarTimeBased" ID="3">
                <Properties>
                  <Property Name="EventName">CalendarTimeBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.FillerFailureType.ProcessingCountBased" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ProcessingCountBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.FillerFailureType.ProcessingCountBased" ID="5">
                <Properties>
                  <Property Name="EventName">ProcessingCountBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.FillerFailureType.EventCountBased" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>EventCountBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.FillerFailureType.EventCountBased" ID="7">
                <Properties>
                  <Property Name="EventName">EventCountBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.FillerFailureType.ProcessingTimeBased" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ProcessingTimeBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.FillerFailureType.ProcessingTimeBased" ID="9">
                <Properties>
                  <Property Name="EventName">ProcessingTimeBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Notify" Name="IfInvalidCapacity" ID="10">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Invalid resource capacity detected"</Property>
                  <Property Name="MessageContent">"Invalid capacity value '" + String.FromReal(Capacity) + "' assigned to resource '" + Name + "'. The resource capacity cannot be greater than 1.

The capacity will be automatically adjusted to the maximum allowable value. However, this warning may indicate a problem in the modeled logic."</Property>
                  <Property Name="NotifyCondition">Capacity &gt; 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Assign" Name="OnRunInitializedAssignments" ID="11">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(CurrentCapacity, 1)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>Processing.CurrentCapacity</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Capacity</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="12">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ExclusionExpression="Math.If(OnShiftAddOnProcess.HasValue, 0, 2)" ID="13">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState!=List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="16" />
                <Exit Name="False" Type="Alternate" NextID="14" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ExclusionExpression="Math.If(OffShiftAddOnProcess.HasValue, 0, 2)" ID="14">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Execute" Name="OffShift_AddOnProcess" ID="15">
                <Properties>
                  <Property Name="ProcessName">OffShiftAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="OnShift_AddOnProcess" ID="16">
                <Properties>
                  <Property Name="ProcessName">OnShiftAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEvaluatingSeizeRequest" IsOverride="True" InterfaceProcessID="Object.OnEvaluatingSeizeRequest" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfFillerAvailable" ExclusionExpression="FailureType==List.FillerFailureType.NoFailures" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">!Failure.Active &amp;&amp; (ProcessingCountBasedFailures.EventCount==0) &amp;&amp; (EventCountBasedFailures.EventCount==0) &amp;&amp; (CalendarTimeBasedFailures.EventCount==0) &amp;&amp; (ProcessingTimeBasedFailures.EventCount==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="RejectSeizeRequest" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Token.ReturnValue</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="EvaluatingSeizeRequest_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">EvaluatingSeizeRequestAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityChanged" IsOverride="True" InterfaceProcessID="Object.OnCapacityChanged" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Notify" Name="IfInvalidCapacity" ID="2">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Invalid resource capacity detected"</Property>
                  <Property Name="MessageContent">"Invalid capacity value '" + String.FromReal(Capacity) + "' assigned to resource '" + Name + "'. The resource capacity cannot be greater than 1.

The capacity will be automatically adjusted to the maximum allowable value. However, this warning may indicate a problem in the modeled logic."</Property>
                  <Property Name="NotifyCondition">Capacity &gt; 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Capacity.Previous==0)&amp;&amp;(Capacity&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Capacity.Previous&gt;0)&amp;&amp;(Capacity&lt;=0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Assign" Name="ValidCapacity" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(CurrentCapacity, 1)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>Processing.CurrentCapacity</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Capacity</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="OffShiftAssignments" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">0</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>Processing.CurrentCapacity</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Capacity</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>FlowInput.FlowRegulator.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Suspend" Name="Processing" ID="7">
                <Properties>
                  <Property Name="ProcessName">OnEnteredProcessing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Execute" Name="OffShift_AddOnProcess" ID="8">
                <Properties>
                  <Property Name="ProcessName">OffShiftAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="OnShiftAssignments" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">1</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>Processing.CurrentCapacity</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Capacity</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>FlowInput.FlowRegulator.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">!Failure.Active &amp;&amp; CurrentFlowContainer != Nothing</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ResourceState</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(ResourceState == List.ResourceStateName.Processing &amp;&amp; FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate == 0.0, List.ResourceStateName.Starved, ResourceState == List.ResourceStateName.Starved &amp;&amp; FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate &gt; 0.0, List.ResourceStateName.Processing, ResourceState)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Resume" Name="Processing" ID="10">
                <Properties>
                  <Property Name="ProcessName">OnEnteredProcessing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Execute" Name="OnShift_AddOnProcess" ID="11">
                <Properties>
                  <Property Name="ProcessName">OnShiftAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="FailureOccurrenceLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fail" Name="Filler" ID="2">
                <Properties>
                  <Property Name="FailureName">Failure</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Delay" Name="TimeToRepair" ID="3">
                <Properties>
                  <Property Name="DelayTime">TimeToRepair</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Repair" Name="Filler" ID="4">
                <Properties>
                  <Property Name="FailureName">Failure</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.FillerFailureType.CalendarTimeBased" ID="5">
                <Properties>
                  <Property Name="EventName">CalendarTimeBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.FillerFailureType.ProcessingCountBased" ID="6">
                <Properties>
                  <Property Name="EventName">ProcessingCountBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.FillerFailureType.EventCountBased" ID="7">
                <Properties>
                  <Property Name="EventName">EventCountBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.FillerFailureType.ProcessingTimeBased" ID="8">
                <Properties>
                  <Property Name="EventName">ProcessingTimeBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Allocate" Name="Filler" ID="9">
                <Properties>
                  <Property Name="ResourceType">ParentObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFailed" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnFailedAssignments" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>FlowInput.FlowRegulator.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Suspend" Name="Processing" ID="3">
                <Properties>
                  <Property Name="ProcessName">OnEnteredProcessing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Suspend" Name="FailureOccurrenceLogic" ExclusionExpression="!FailedAddOnProcess.HasValue" ID="4">
                <Properties>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="FailedAdd_OnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">FailedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Resume" Name="FailureOccurrenceLogic" ExclusionExpression="!FailedAddOnProcess.HasValue" ID="6">
                <Properties>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRepaired" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnRepairedAssignments" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>FlowInput.FlowRegulator.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Capacity &gt; 0 &amp;&amp; CurrentFlowContainer != Nothing</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ResourceState</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(ResourceState == List.ResourceStateName.Processing &amp;&amp; FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate == 0.0, List.ResourceStateName.Starved, ResourceState == List.ResourceStateName.Starved &amp;&amp; FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate &gt; 0.0, List.ResourceStateName.Processing, ResourceState)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Resume" Name="Processing" ID="3">
                <Properties>
                  <Property Name="ProcessName">OnEnteredProcessing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="RepairedAdd_OnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">RepairedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredInputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">InputBuffer.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="3">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceSeizesOnEnteringObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceSeizesOnEnteringObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceSeizesOnEnteringObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceSeizesOnEnteringNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceSeizesOnEnteringUnitsPerObject</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesOnEnteringSelectionGoal</Property>
                        <Property Name="SelectionExpression">SecondaryResourceSeizesOnEnteringSelectionExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesOnEnteringSelectionCondition</Property>
                        <Property Name="OnSeizedProcess">SecondaryResourceSeizesOnEnteringOnSeizedProcess</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesOnEnteringRequestVisit</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesOnEnteringNodeName</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesOnEnteringVisitPriority</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="4">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceReleasesOnEnteringObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceReleasesOnEnteringObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceReleasesOnEnteringObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceReleasesOnEnteringNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceReleasesOnEnteringUnitsPerObject</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesOnEnteringReleaseOrder</Property>
                        <Property Name="ReleaseCondition">SecondaryResourceReleasesOnEnteringReleaseCondition</Property>
                        <Property Name="OnReleasedProcess">SecondaryResourceReleasesOnEnteringOnReleasedProcess</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Delay" Name="TransferInTime" ID="6">
                <Properties>
                  <Property Name="DelayTime">TransferInTime</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="EndTransfer" Name="IntoInputBuffer" ID="7">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Seize" Name="Filler" ID="8">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="SelectionExpression"></Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Seize" Name="SecondaryResource" ID="9">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceForProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceForProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceForProcessingObjectListName</Property>
                        <Property Name="SelectionGoal">SecondaryResourceForProcessingSelectionGoal</Property>
                        <Property Name="SelectionExpression">SecondaryResourceForProcessingSelectionExpression</Property>
                        <Property Name="RequestMove">SecondaryResourceForProcessingRequestVisit</Property>
                        <Property Name="DestinationNode">SecondaryResourceForProcessingNodeName</Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="10">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceSeizesBeforeProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceSeizesBeforeProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceSeizesBeforeProcessingObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceSeizesBeforeProcessingNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceSeizesBeforeProcessingUnitsPerObject</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesBeforeProcessingSelectionGoal</Property>
                        <Property Name="SelectionExpression">SecondaryResourceSeizesBeforeProcessingSelectionExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesBeforeProcessingSelectionCondition</Property>
                        <Property Name="OnSeizedProcess">SecondaryResourceSeizesBeforeProcessingOnSeizedProcess</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesBeforeProcessingRequestVisit</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesBeforeProcessingNodeName</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesBeforeProcessingVisitPriority</Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="11">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceReleasesBeforeProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceReleasesBeforeProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceReleasesBeforeProcessingObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceReleasesBeforeProcessingNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceReleasesBeforeProcessingUnitsPerObject</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesBeforeProcessingReleaseOrder</Property>
                        <Property Name="ReleaseCondition">SecondaryResourceReleasesBeforeProcessingReleaseCondition</Property>
                        <Property Name="OnReleasedProcess">SecondaryResourceReleasesBeforeProcessingOnReleasedProcess</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Execute" Name="BeforeProcessing_AddOnProcess" ID="12">
                <Properties>
                  <Property Name="ProcessName">BeforeProcessingAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Transfer" Name="ToProcessing" ID="13">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">Processing</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredProcessing" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">Processing.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Decide" Name="IfInputBuffer" ExclusionExpression="Math.If(InputBufferCapacity&gt;0, 1, 2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">InputBufferCapacity&gt;0</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="13" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="4">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceSeizesOnEnteringObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceSeizesOnEnteringObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceSeizesOnEnteringObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceSeizesOnEnteringNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceSeizesOnEnteringUnitsPerObject</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesOnEnteringSelectionGoal</Property>
                        <Property Name="SelectionExpression">SecondaryResourceSeizesOnEnteringSelectionExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesOnEnteringSelectionCondition</Property>
                        <Property Name="OnSeizedProcess">SecondaryResourceSeizesOnEnteringOnSeizedProcess</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesOnEnteringRequestVisit</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesOnEnteringNodeName</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesOnEnteringVisitPriority</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="5">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceReleasesOnEnteringObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceReleasesOnEnteringObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceReleasesOnEnteringObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceReleasesOnEnteringNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceReleasesOnEnteringUnitsPerObject</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesOnEnteringReleaseOrder</Property>
                        <Property Name="ReleaseCondition">SecondaryResourceReleasesOnEnteringReleaseCondition</Property>
                        <Property Name="OnReleasedProcess">SecondaryResourceReleasesOnEnteringOnReleasedProcess</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Delay" Name="TransferInTime" ID="7">
                <Properties>
                  <Property Name="DelayTime">TransferInTime</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Seize" Name="Filler" ID="8">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="SelectionExpression"></Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Seize" Name="SecondaryResource" ID="9">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceForProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceForProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceForProcessingObjectListName</Property>
                        <Property Name="SelectionGoal">SecondaryResourceForProcessingSelectionGoal</Property>
                        <Property Name="SelectionExpression">SecondaryResourceForProcessingSelectionExpression</Property>
                        <Property Name="RequestMove">SecondaryResourceForProcessingRequestVisit</Property>
                        <Property Name="DestinationNode">SecondaryResourceForProcessingNodeName</Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="10">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceSeizesBeforeProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceSeizesBeforeProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceSeizesBeforeProcessingObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceSeizesBeforeProcessingNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceSeizesBeforeProcessingUnitsPerObject</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesBeforeProcessingSelectionGoal</Property>
                        <Property Name="SelectionExpression">SecondaryResourceSeizesBeforeProcessingSelectionExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesBeforeProcessingSelectionCondition</Property>
                        <Property Name="OnSeizedProcess">SecondaryResourceSeizesBeforeProcessingOnSeizedProcess</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesBeforeProcessingRequestVisit</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesBeforeProcessingNodeName</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesBeforeProcessingVisitPriority</Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="11">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceReleasesBeforeProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceReleasesBeforeProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceReleasesBeforeProcessingObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceReleasesBeforeProcessingNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceReleasesBeforeProcessingUnitsPerObject</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesBeforeProcessingReleaseOrder</Property>
                        <Property Name="ReleaseCondition">SecondaryResourceReleasesBeforeProcessingReleaseCondition</Property>
                        <Property Name="OnReleasedProcess">SecondaryResourceReleasesBeforeProcessingOnReleasedProcess</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Execute" Name="BeforeProcessing_AddOnProcess" ID="12">
                <Properties>
                  <Property Name="ProcessName">BeforeProcessingAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="EndTransfer" Name="IntoProcessing" ID="13">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Notify" Name="IfEntityHasNoContainerElements" ID="14">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Filler object usage warning"</Property>
                  <Property Name="MessageContent">"Entity '" + Entity.Name + "' using Filler object '" + Name + "' has no container elements to potentially fill.

The entity will be processed though the filler without a filling attempt. However, this warning may indicate a problem in the modeled logic."</Property>
                  <Property Name="NotifyCondition">Entity.Elements.NumberItems.Containers==0</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Find" Name="Container" ID="15">
                <Properties>
                  <Property Name="IndexVariableName">
                    <Value>CurrentElementIndex</Value>
                  </Property>
                  <Property Name="StartingIndex">Math.If(CurrentElementIndex &lt; Entity.Elements.NumberItems, CurrentElementIndex + 1, 0)</Property>
                  <Property Name="EndingIndex">Math.If(CurrentElementIndex &lt; Entity.Elements.NumberItems, Entity.Elements.NumberItems, 0)</Property>
                  <Property Name="SearchExpression">Entity.Elements.ItemAtIndex(CurrentElementIndex).Is.Container</Property>
                </Properties>
                <Exit Name="Found" Type="Primary" NextID="16" />
                <Exit Name="NotFound" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="Assign" Name="FillTarget" ID="16">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentFlowContainer</Value>
                  </Property>
                  <Property Name="NewValue">Entity.Elements.ItemAtIndex(CurrentElementIndex)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>DesiredAddedVolume</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(FillTargetType == List.FillTargetTypeValue.FillUntilFull, Infinity, Math.If(DesiredQuantityUnitType == Enum.FlowContentUnitType.Volume, DesiredQuantity, Math.NaN))</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>DesiredAddedWeight</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(FillTargetType == List.FillTargetTypeValue.FillUntilFull, Infinity, Math.If(DesiredQuantityUnitType == Enum.FlowContentUnitType.Weight, DesiredQuantity, Math.NaN))</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="17" />
              </Step>
              <Step Type="Decide" Name="IfCanFill" ID="17">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentFlowContainer.Contents.Volume &lt; CurrentFlowContainer.CurrentVolumeCapacity) &amp;&amp; (CurrentFlowContainer.Contents.Weight &lt; CurrentFlowContainer.CurrentWeightCapacity) &amp;&amp; (DesiredAddedVolume &gt; 0.0 || DesiredAddedWeight &gt; 0.0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="18" />
                <Exit Name="False" Type="Alternate" NextID="15" />
              </Step>
              <Step Type="Execute" Name="FillingContainer_AddOnProcess" ID="18">
                <Properties>
                  <Property Name="ProcessName">FillingContainerAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="19" />
              </Step>
              <Step Type="Assign" Name="ToStartFilling" ID="19">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>FlowInput.FlowRegulator.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ReachedDesiredAddedVolume.CurrentThresholdValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(FillTargetType == List.FillTargetTypeValue.FillUntilFull, CurrentFlowContainer.CurrentVolumeCapacity, CurrentFlowContainer.Contents.Volume + DesiredAddedVolume)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ReachedDesiredAddedVolume.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">FillTargetType == List.FillTargetTypeValue.AddSpecificQuantity &amp;&amp; DesiredQuantityUnitType == Enum.FlowContentUnitType.Volume</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ReachedDesiredAddedWeight.CurrentThresholdValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(FillTargetType == List.FillTargetTypeValue.FillUntilFull, CurrentFlowContainer.CurrentWeightCapacity, CurrentFlowContainer.Contents.Weight + DesiredAddedWeight)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ReachedDesiredAddedWeight.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">FillTargetType == List.FillTargetTypeValue.AddSpecificQuantity &amp;&amp; DesiredQuantityUnitType == Enum.FlowContentUnitType.Weight</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ResourceState</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate == 0.0, List.ResourceStateName.Starved, List.ResourceStateName.Processing)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="20" />
              </Step>
              <Step Type="Wait" Name="UntilFillTarget" ID="20">
                <Properties>
                  <Property Name="EventName">CurrentFlowContainer.Full</Property>
                  <Property Name="Events">
                    <Rows>
                      <Properties>
                        <Property Name="EventsEventName">ReachedDesiredAddedVolume.Event</Property>
                      </Properties>
                      <Properties>
                        <Property Name="EventsEventName">ReachedDesiredAddedWeight.Event</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="21" />
              </Step>
              <Step Type="Assign" Name="ToStopFilling" ID="21">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>FlowInput.FlowRegulator.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ReachedDesiredAddedVolume.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ReachedDesiredAddedWeight.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>CurrentFlowContainer</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Nothing</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="22" />
              </Step>
              <Step Type="EndTransfer" Name="OfAddedFlow" ID="22">
                <Properties>
                  <Property Name="EntityType">SpecificObject</Property>
                  <Property Name="EntityObject">FlowInput.FlowRegulator.OutputFlowReceivers.FirstItem</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Execute" Name="FilledContainer_AddOnProcess" ID="23">
                <Properties>
                  <Property Name="ProcessName">FilledContainerAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Execute" Name="AfterProcessing_AddOnProcess" ID="24">
                <Properties>
                  <Property Name="ProcessName">AfterProcessingAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="25">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesAfterProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceSeizesAfterProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceSeizesAfterProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceSeizesAfterProcessingObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceSeizesAfterProcessingNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceSeizesAfterProcessingUnitsPerObject</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesAfterProcessingSelectionGoal</Property>
                        <Property Name="SelectionExpression">SecondaryResourceSeizesAfterProcessingSelectionExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesAfterProcessingSelectionCondition</Property>
                        <Property Name="OnSeizedProcess">SecondaryResourceSeizesAfterProcessingOnSeizedProcess</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesAfterProcessingRequestVisit</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesAfterProcessingNodeName</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesAfterProcessingVisitPriority</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="26" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="26">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesAfterProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceReleasesAfterProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceReleasesAfterProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceReleasesAfterProcessingObjectListName</Property>
                        <Property Name="NumberOfObjects">SecondaryResourceReleasesAfterProcessingNumberOfObjects</Property>
                        <Property Name="UnitsPerObject">SecondaryResourceReleasesAfterProcessingUnitsPerObject</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesAfterProcessingReleaseOrder</Property>
                        <Property Name="ReleaseCondition">SecondaryResourceReleasesAfterProcessingReleaseCondition</Property>
                        <Property Name="OnReleasedProcess">SecondaryResourceReleasesAfterProcessingOnReleasedProcess</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="27" />
              </Step>
              <Step Type="Release" Name="SecondaryResource" ID="27">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">SecondaryResourceForProcessingObjectType</Property>
                        <Property Name="ObjectName">SecondaryResourceForProcessingObjectName</Property>
                        <Property Name="ObjectListName">SecondaryResourceForProcessingObjectListName</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="28" />
              </Step>
              <Step Type="Decide" Name="IfOutputBuffer" ExclusionExpression="Math.If(OutputBufferCapacity&gt;0, 1, 2)" ID="28">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">OutputBufferCapacity&gt;0</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="31" />
                <Exit Name="False" Type="Alternate" NextID="29" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ID="29">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="30" />
              </Step>
              <Step Type="Transfer" Name="ToOutputNode" ID="30">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">Output</Property>
                </Properties>
              </Step>
              <Step Type="Transfer" Name="ToOutputBuffer" ID="31">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">OutputBuffer</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredOutputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">OutputBuffer.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="EndTransfer" Name="IntoOutputBuffer" ID="2">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Release" Name="Filler" ID="3">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">Entity.SeizedResources.CapacityOwnedOf(ParentObject)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ID="4">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToOutputNode" ID="5">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">Output</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExitedOutputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">OutputBuffer.Exited</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="Exited_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">ExitedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExitedProcessing" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">Processing.Exited</Property>
            </Properties>
            <Steps>
              <Step Type="Decide" Name="IfTokenAssociatedObject" ExclusionExpression="Math.If(OutputBufferCapacity &gt; 0, 2, 0)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Token.AssociatedObject != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="3" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Release" Name="Filler" ExclusionExpression="OutputBufferCapacity &gt; 0" ID="3">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">Entity.SeizedResources.CapacityOwnedOf(ParentObject)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="Exited_AddOnProcess" ExclusionExpression="OutputBufferCapacity &gt; 0" ID="4">
                <Properties>
                  <Property Name="ProcessName">ExitedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFillingRateChanged" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ResourceState" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If(ResourceState == List.ResourceStateName.Processing &amp;&amp; FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate == 0.0, List.ResourceStateName.Starved, ResourceState == List.ResourceStateName.Starved &amp;&amp; FlowInput.FlowRegulator.CurrentVolumeFlowOut.Rate &gt; 0.0, List.ResourceStateName.Processing, ResourceState)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <TransferPoints>
            <ExternalNode Name="ContainerInput" Location="-1.5,0,-0.5" ID="{953FF9AB-9E75-48EF-8E75-184FD94715C4}">
              <Properties>
                <Property Name="NodeClassName">BasicNode</Property>
                <Property Name="InputLocationType">Station</Property>
                <Property Name="StationName">InputBuffer</Property>
              </Properties>
            </ExternalNode>
            <ExternalNode Name="FlowInput" Location="-1.5,0,0.5" ID="{2378B347-9866-42E0-B89E-D3FBDD2F62BE}">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Container</Property>
                <Property Name="ContainerName">CurrentFlowContainer</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="FlowControlPropertyDisplay" Value="Input Only" />
                <InitialValue Name="InputFlowControlMode" Value="Merge Flow" />
                <InitialValue Name="RegulatorInitiallyEnabled" Value="False" />
              </InitialValues>
            </ExternalNode>
            <ExternalNode Name="Output" Location="1.5,0,0" ID="{BD171A04-4679-40A1-A47b-D84E01368989}">
              <Properties>
                <Property Name="NodeClassName">TransferNode</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="41407493-27b7-44a5-8015-58b81108af6c" />
            </SymbolInstance>
            <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="-1 0 0" />
                <Point Location="-4 0 0" />
              </Points>
            </Queue>
            <Queue Queue="Processing.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="-1 0 -1" />
                <Point Location="1 0 -1" />
              </Points>
            </Queue>
            <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="1 0 0.5" />
                <Point Location="4 0 0.5" />
              </Points>
            </Queue>
            <DefaultAdditionalSymbols>
              <DefaultAdditionalSymbol Index="0">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="1">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="70193ba6-0be9-4acd-90b2-86d90e10b56a" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="2">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="3ffa66e5-d33c-4d00-84e7-1021775d4e68" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="3">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="726b97ea-e96c-4b3a-ae79-0c615da3feb0" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="4">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="1">
                      <MaterialRef Id="958215c2-ee27-40a5-a1a9-a01f9ae876b4" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
            </DefaultAdditionalSymbols>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <LinkDefinition Name="FlowConnector" Id="0bce0296-aa3f-43de-8186-ac134a46588f" Revision="3" Author="Sales and Support" Description="The FlowConnector object may be used to define a direct, zero travel distance connection from one flow node location to another." CheckBaseForAdvancedProperties="True" DefaultWidth="0.25" DefaultHeight="0.25">
        <ChangeDescriptions>
          <ChangeDescription Version="3">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="Type" Visible="False" />
            <Override Name="InitialTravelerCapacity" Visible="False" />
            <Override Name="TrafficDirectionRule" Visible="False" />
            <Override Name="InitialDesiredDirection" Visible="False" />
            <Override Name="EntryRankingRule" Visible="False" />
            <Override Name="InitialDesiredSpeed" Visible="False" DefaultValue="0.0" />
            <Override Name="EntityAlignment" Visible="False" />
            <Override Name="CellSpacingType" Visible="False" />
            <Override Name="NumberOfCells" Visible="False" />
            <Override Name="CellSize" Visible="False" />
            <Override Name="AutoAlignCells" Visible="False" />
            <Override Name="DrawnToScale" Visible="False" DefaultValue="False" />
            <Override Name="LogicalLength" Visible="False" DefaultValue="0.0" />
            <Override Name="CrossSectionShape" DefaultValue="Ellipse" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <Processes />
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <FixedDefinition Name="Dock" Id="a5b5d737-5a77-4dd2-b62a-14b0a7de5c8b" Revision="27" Author="A Dock is a pickup and drop-off location for flow entities.  Tankers and HopperCars use a Dock to load and unload flow materials." ResourceLogic="True">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <ElementProperty Name="OnShiftAddOnProcess" ComplexityLevel="Advanced" Category="Add-On Process Triggers" DefaultValue="null" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="OffShiftAddOnProcess" ComplexityLevel="Advanced" Category="Add-On Process Triggers" DefaultValue="null" Required="False" NullString="null" Type="Process" />
          <Overrides>
            <Override Name="ReportStatistics" Visible="True" />
            <Override Name="ParentCostCenter" Visible="True" />
            <Override Name="InitialCost" Visible="True" />
            <Override Name="InitialCostRate" Visible="True" />
            <Override Name="ResourceIdleCostRate" Visible="True" />
            <Override Name="ResourceCostPerUse" Visible="True" />
            <Override Name="ResourceUsageCostRate" Visible="True" />
            <Override Name="LogResourceUsage" Visible="True" />
            <Override Name="DisplayName" Visible="True" />
            <Override Name="DisplayCategory" Visible="True" />
            <Override Name="DisplayColor" Visible="True" />
            <Override Name="CapacityType" Visible="True" DefaultValue="Fixed" />
            <Override Name="WorkSchedule" Visible="True" />
            <Override Name="WorkDayExceptions" Visible="True" />
            <Override Name="WorkPeriodExceptions" Visible="True" />
            <Override Name="InitialCapacity" Visible="True" />
            <Override Name="RankingRule" Visible="True" />
            <Override Name="RankingExpression" Visible="True" />
            <Override Name="DynamicSelectionRule" Visible="True" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="FlowNode" />
          <UsedObject Name="ControlNode" />
        </UsedObjects>
        <Processes>
          <Process Name="OnCapacityChanged" IsOverride="True" InterfaceProcessID="Object.OnCapacityChanged" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Notify" Name="IfInvalidCapacity" ID="2">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Invalid resource capacity detected"</Property>
                  <Property Name="MessageContent">"Invalid capacity value '" + String.FromReal(Capacity) + "' assigned to resource '" + Name + "'. The resource capacity cannot be greater than 1.

The capacity will be automatically adjusted to the maximum allowable value. However, this action may indicate a problem in the modeled logic."</Property>
                  <Property Name="NotifyCondition">Capacity &gt; 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Capacity.Previous==0)&amp;&amp;(Capacity&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Execute" Name="OnShift_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">OnShiftAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="OffShift_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">OffShiftAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="EnableRegulators" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>LoadFlow.FlowRegulator.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>UnloadFlow.FlowRegulator.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="DisableRegulators" ID="7">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>LoadFlow.FlowRegulator.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>UnloadFlow.FlowRegulator.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="8">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Capacity.Previous&gt;0)&amp;&amp;(Capacity&lt;=0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Assign" Name="ValidCapacity" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(CurrentCapacity, 1)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Objects>
          <Node Name="UnloadFlow" Type="FlowNode" Location="0.0623631432286551 0 0.336638576989443" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">Infinity</Property>
              <Property Name="BoundExternalOutputNode">OutputFlow</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="LoadFlow" Type="FlowNode" Location="0.012290169679845 0 -0.316937119677272" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="InitialMaximumFlowRate">InputFlow.InitialMaximumFlowRate</Property>
              <Property Name="BoundExternalOutputNode">null</Property>
            </Properties>
            <Graphics />
          </Node>
          <Node Name="LoadDock" Type="FlowNode" Location="1.69733502538253 0 -0.285532994925665" Scope="Public">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="BoundExternalOutputNode">DockNode</Property>
            </Properties>
            <Graphics />
          </Node>
          <Link Name="FlowConnector1" Type="FlowConnector" Size="0 0.25 0.25" Scope="Public" Start="LoadFlow" End="LoadDock">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics />
          </Link>
        </Objects>
        <External>
          <TransferPoints>
            <ExternalNode Name="OutputFlow" Location="0.598268839105688,0,0.216395112014477" ID="810d7358-21a8-4b91-b9a6-4dc212d4cd91">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="ContainerName">LoadingContainer</Property>
              </Properties>
            </ExternalNode>
            <ExternalNode Name="DockNode" Location="-0.585539714865798,0,0.0254582484706892" ID="e6e3701f-b38a-41a9-9a44-c4abf1b90061">
              <Properties>
                <Property Name="NodeClassName">ControlNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">UnloadFlow</Property>
                <Property Name="ContainerName">UnloadingContainer</Property>
              </Properties>
            </ExternalNode>
            <ExternalNode Name="InputFlow" Location="0.590766054254068,0,-0.254582484726864" ID="5e266c87-67cb-491b-99bb-23b83d858307">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Node</Property>
                <Property Name="NodeName">LoadFlow</Property>
                <Property Name="ContainerName">LoadingContainer</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <Rectangle Center="0.0254582484743242 0 0.0572810590613205" Width="0.763747454175153" Height="0.751018329938895" ExternallyVisible="True">
              <Decorations>
                <Decoration SurfaceId="0">
                  <MaterialRef Id="38e4463f-97ac-41f3-9ead-8864402a139b" />
                </Decoration>
              </Decorations>
            </Rectangle>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <NodeDefinition Name="FlowNode" Id="61b3cf47-28e9-4d9b-8405-6ed671e44ab0" Revision="8" Author="Sales and Support" Description="The FlowNode object is a node specifically designed to regulate the flow of entities representing quantities of fluid or other mass.&#xD;&#xA;&#xD;&#xA;Common applications of a FlowNode object include use as an 'Input' or 'Output' node for controlling flow into or out of another object (such as an object representing a tank). A FlowNode may also be used to model a flow control point in a network of links." CheckBaseForAdvancedProperties="True" Color="1e90ff" ShapeType="FlowRegulator">
        <ChangeDescriptions>
          <ChangeDescription Version="4">Version 4.79: Renamed 'OutputFlowEntityType' property to 'InitialDesiredOutputEntityType'. Added 'Dynamic Updating' property category.</ChangeDescription>
          <ChangeDescription Version="5">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="6">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="7">Version 5.92: Updated the description text displayed for the 'FlowMergeAllocationRule' and 'FlowSplitAllocationRule' properties.</ChangeDescription>
          <ChangeDescription Version="8">Version 5.93: If merging input flow using the 'Proportional Based On Link Weights' merge allocation rule, the flow node now correctly reduces inflow if necessary to maintain the specified proportion ratios, including not merging at all if one or more inbound links is not providing any flow.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="4" RegularExpressionPattern="(^|[^\w_])(?i:OutputFlowEntityType)([^\w_]|$)" ReplacementString="$1InitialDesiredOutputEntityType$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="InboundLinkSelectionRule">
            <Items>
              <Item Value="ByLinkWeight" />
              <Item Value="ByFlowPriority" />
            </Items>
          </StringList>
          <StringList Name="FlowControlPropertyDisplayType">
            <Items>
              <Item Value="InputOnly" />
              <Item Value="OutputOnly" />
              <Item Value="InputAndOutput" />
              <Item Value="FlowSourceDisplayProfile" />
              <Item Value="FlowSinkDisplayProfile" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Flow Regulator Logic" Description="Flow Regulator Logic" />
            <Category Name="Flow Regulator Logic/Input Flow Control" Description="Flow Regulator Logic/Input Flow Control" />
            <Category Name="Flow Regulator Logic/Output Flow Control" Description="Flow Regulator Logic/Output Flow Control" />
            <Category Name="Dynamic Updating" Description="Dynamic Updating" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <EnumProperty Name="FlowRateUnitType" DisplayName="Flow Rate Unit Type" Description="The unit type to be used for specifying the maximum flow rate of the node's flow regulator." Category="Flow Regulator Logic" DefaultValue="Volume Flow Rate" NullString="null" EnumType="FlowRateUnitType">
            <Captions>
              <Caption Value="VolumeFlowRate" Display="Volume Flow Rate" />
              <Caption Value="WeightFlowRate" Display="Weight Flow Rate" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="InitialMaximumFlowRate" DisplayName="Initial Maximum Flow Rate" Description="The initial maximum flow rate allowed by the node's flow regulator." Category="Flow Regulator Logic" DefaultValue="100.0" NullString="null" UnitTypeProperty="FlowRateUnitType" />
          <ExpressionProperty Name="InitialOutputYieldFactor" DisplayName="Initial Output Yield Factor" Description="The initial output yield factor for the regulator. This factor is entered as a ratio of outflow to inflow, and may be used to scale the flow into the regulator such that there is a physical loss or gain represented in the regulator's output flow." ComplexityLevel="Advanced" Category="Flow Regulator Logic" DefaultValue="1.0" NullString="null">
            <Switch Property="FlowControlPropertyDisplay" Value="InputOnly, InputAndOutput, OutputOnly" />
          </ExpressionProperty>
          <DynamicObjectInstanceProperty Name="InitialDesiredOutputEntityType" DisplayName="Initial Output Entity Type" Description="Optional property specifying the initial desired entity type of the outflow produced by the node's flow regulator. If unspecified, then the output flow entity type will be automatically determined by the inflow entity types." ComplexityLevel="Advanced" Category="Flow Regulator Logic" Required="False" NullString="null" UseDefaultEntity="False" ValidObjectType="Agent">
            <Switch Property="FlowControlPropertyDisplay" Value="InputOnly, InputAndOutput, OutputOnly" />
          </DynamicObjectInstanceProperty>
          <EnumProperty Name="RegulatorInitiallyEnabled" DisplayName="Regulator Initially Enabled" Description="Specifies whether the node's flow regulator is enabled when the system is initialized." ComplexityLevel="Advanced" Category="Flow Regulator Logic" DefaultValue="True" NullString="null" EnumType="BooleanType" />
          <ExpressionProperty Name="DynamicUpdateInterval" DisplayName="Update Interval" Description="The time interval between updates." ComplexityLevel="Advanced" Category="Dynamic Updating" DefaultValue="1.0" NullString="null" UnitType="Time" />
          <ExpressionProperty Name="DynamicMaximumFlowRateEquation" DisplayName="Maximum Flow Rate Equation" Description="The expression used to regularly update the maximum flow rate of the node's flow regulator." ComplexityLevel="Advanced" Category="Dynamic Updating" Required="False" NullString="null" UnitTypeProperty="FlowRateUnitType" />
          <ExpressionProperty Name="DynamicOutputYieldFactorEquation" DisplayName="Output Yield Factor Equation" Description="The expression used to regularly update the output yield factor of the node's flow regulator." ComplexityLevel="Advanced" Category="Dynamic Updating" Required="False" NullString="null">
            <Switch Property="FlowControlPropertyDisplay" Value="InputOnly, InputAndOutput, OutputOnly" />
          </ExpressionProperty>
          <EnumProperty Name="InputFlowControlMode" DisplayName="Flow Control Mode" Description="The mode used by the node's flow regulator to control inflow from inbound links." Category="Flow Regulator Logic/Input Flow Control" DefaultValue="Single Flow (No Merging)" NullString="null" EnumType="RegulatorInputFlowStrategy">
            <Switch Property="FlowControlPropertyDisplay" Value="InputOnly, InputAndOutput, FlowSinkDisplayProfile" />
            <Captions>
              <Caption Value="SingleFlow" Display="Single Flow (No Merging)" />
              <Caption Value="MergeFlow" Display="Merge Flow" />
            </Captions>
          </EnumProperty>
          <ListProperty Name="InboundLinkRule" DisplayName="Inbound Link Rule" Description="The rule used by the node's flow regulator to prioritize inflows from inbound links. &#xD;&#xA;&#xD;&#xA;If the rule is specified as 'By Link Weight', then the flow entity on the inbound link with the largest selection weight will be selected first. If the rule is specified as 'By Flow Priority', then the flow entity with the largest priority value (regardless of the link used) will be selected first." Category="Flow Regulator Logic/Input Flow Control" DefaultValue="By Link Weight" NullString="null" List="InboundLinkSelectionRule">
            <Switch Property="InputFlowControlMode" Value="SingleFlow" />
            <Captions>
              <Caption Value="ByLinkWeight" Display="By Link Weight" />
              <Caption Value="ByFlowPriority" Display="By Flow Priority" />
            </Captions>
          </ListProperty>
          <StateProperty Name="InboundLinkSwitchControlVariable" DisplayName="Switch Control Variable" Description="Optional discrete variable to use as a switch control mechanism for dynamically changing the current inbound link selection.&#xD;&#xA;&#xD;&#xA;If this property is specified, then the selection weight expressions of the node's inbound links will be reevaluated whenever the switch control variable's value changes in order to change priority to the link with the now largest weight.&#xD;&#xA;&#xD;&#xA;The inbound link selection weight expressions, as a typical modeling approach, are recommended to be based on the switch control variable's current value. For example, enter link selection weight expressions such as 'MySwitchControlVar==1', 'MySwitchControlVar==2', etc." Category="Flow Regulator Logic/Input Flow Control" Required="False" NullString="null" ReferenceType="DiscreteState" IsAssignable="True">
            <Switch Property="InboundLinkRule" Value="ByLinkWeight" />
          </StateProperty>
          <ExpressionProperty Name="FlowPriorityExpression" DisplayName="Flow Priority Expression" Description="The expression used to return the priority value of an inflow request at the node." ComplexityLevel="Advanced" Category="Flow Regulator Logic/Input Flow Control" DefaultValue="Entity.Priority" NullString="null">
            <Switch Property="InboundLinkRule" Value="ByFlowPriority" />
          </ExpressionProperty>
          <StateProperty Name="OutboundLinkSwitchControlVariable" DisplayName="Switch Control Variable" Description="Optional discrete variable to use as a switch control mechanism for dynamically changing the current outbound link selection.&#xD;&#xA;&#xD;&#xA;If this property is specified, then the selection weight expressions of the node's outbound links will be reevaluated whenever the switch control variable's value changes in order to change priority to the link with the now largest weight.&#xD;&#xA;&#xD;&#xA;The outbound link selection weight expressions, as a typical modeling approach, are recommended to be based on the switch control variable's current value. For example, enter link selection weight expressions such as 'MySwitchControlVar==1', 'MySwitchControlVar==2', etc." Category="Flow Regulator Logic/Output Flow Control" Required="False" NullString="null" ReferenceType="DiscreteState" IsAssignable="True">
            <Switch Property="OutboundLinkRule" Value="ByLinkWeight" />
          </StateProperty>
          <EnumProperty Name="FlowMergeMatchingRule" DisplayName="Merge Matching Rule" Description="Specifies the match conditions required to merge inflow requests at this node into a single output flow.&#xD;&#xA;&#xD;&#xA;If the matching rule is specified as 'Any Entity Type', then all inflows may be merged together regardless of entity type. If the matching rule is specified as 'Same Entity Type', then only inflows of the same entity type may be merged." Category="Flow Regulator Logic/Input Flow Control" DefaultValue="Any Entity Type" NullString="null" EnumType="RegulatorMergeMatchingRule">
            <Switch Property="InputFlowControlMode" Value="MergeFlow" />
            <Captions>
              <Caption Value="AnyEntityType" Display="Any Entity Type" />
              <Caption Value="SameEntityType" Display="Same Entity Type" />
            </Captions>
          </EnumProperty>
          <EnumProperty Name="FlowMergeAllocationRule" DisplayName="Merge Allocation Rule" Description="The allocation rule used by the node's flow regulator to merge inflow from inbound links.&#xD;&#xA;&#xD;&#xA;If the rule is specified as ‘Proportional Based On Inflow Rates’, then the flow regulator will proportionally merge flow from the node’s inbound links using the ratios of the raw inflow rates.&#xD;&#xA;&#xD;&#xA;If the rule is specified as ‘Preferred Order By Link Weight’, then the flow regulator will merge flow in priority order from the node’s inbound links while still maximizing total inflow. The inbound link with the largest selection weight will be selected first, and if the regulator can still accept more input then flow will be merged from the inbound link with the next largest selection weight and so forth.&#xD;&#xA;&#xD;&#xA;If the rule is specified as ‘Proportional Based On Link Weights’, then the flow regulator will proportionally merge flow from the node’s inbound links using the ratios of the link selection weights. This rule will not maximize total inflow, but rather, will reduce the input from all links as necessary to maintain the specified ratios." Category="Flow Regulator Logic/Input Flow Control" DefaultValue="Proportional Based On Inflow Rates" NullString="null" EnumType="RegulatorMergeAllocationRule">
            <Switch Property="InputFlowControlMode" Value="MergeFlow" />
            <Captions>
              <Caption Value="ProportionalBasedOnInflowRates" Display="Proportional Based On Inflow Rates" />
              <Caption Value="PreferredOrderByQueueRank" Display="Preferred Order By Link Weight" />
              <Caption Value="ProportionalBasedOnExpression" Display="Proportional Based On Link Weights" />
            </Captions>
          </EnumProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ListProperty Name="FlowControlPropertyDisplay" DisplayName="Flow Control Property Display" Description="Indicates which flow control property categories to display for configuring the logic of the node's flow regulator." Visible="False" ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="Input And Output" NullString="null" List="FlowControlPropertyDisplayType">
            <Captions>
              <Caption Value="InputOnly" Display="Input Only" />
              <Caption Value="OutputOnly" Display="Output Only" />
              <Caption Value="InputAndOutput" Display="Input And Output" />
              <Caption Value="FlowSourceDisplayProfile" Display="Flow Source Display Profile" />
              <Caption Value="FlowSinkDisplayProfile" Display="Flow Sink Display Profile" />
            </Captions>
          </ListProperty>
          <ExternalNodeProperty Name="BoundExternalOutputNode" DisplayName="Bound External Output Node" Description="The name of an external output node that this node has been bound to in order to transfer flow out of the containing (parent) object. The transfer attempt will be performed by a flow entity immediately upon entering the node and, if successful, any other flow regulator logic for the node will be ignored." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" />
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="InitialTravelerCapacity" Visible="False" />
            <Override Name="EntryRankingRule" Visible="False" />
            <Override Name="EntryRankingExpression" Visible="False" />
            <Override Name="EntryExemptionCondition" Visible="False" />
            <Override Name="OutputFlowControlMode" Visible="True" DisplayName="Flow Control Mode" Description="The mode used by the node's flow regulator to control outflow to outbound links." Category="Flow Regulator Logic/Output Flow Control" ComplexityLevel="Basic">
              <Switch Property="FlowControlPropertyDisplay" Value="OutputOnly, InputAndOutput, FlowSourceDisplayProfile" />
            </Override>
            <Override Name="FlowSplitAllocationRule" Description="The allocation rule used by the node's flow regulator to split outflow to outbound links.&#xD;&#xA;&#xD;&#xA;If the rule is specified as ‘Evenly If Possible’, then the flow regulator will distribute flow as evenly as possible to the node’s outbound links while still maximizing total outflow.&#xD;&#xA;&#xD;&#xA;If the rule is specified as ‘Preferred Order By Link Weight’, then the flow regulator will distribute flow in priority order to the node’s outbound links while still maximizing total outflow. The outbound link with the largest selection weight will be selected first, and if that link cannot accept the full output then overflow will be sent to the outbound link with the next largest selection weight and so forth.&#xD;&#xA; &#xD;&#xA;If the rule is specified as ‘Proportional Based On Link Weights’, then the flow regulator will proportionally distribute flow to the node’s outbound links using the ratios of the link selection weights. This rule will not maximize total outflow, but rather, will reduce the output to all links as necessary to maintain the specified ratios." Category="Flow Regulator Logic/Output Flow Control" ComplexityLevel="Basic" />
            <Override Name="OutboundLinkPreference" Visible="False" />
            <Override Name="OutboundLinkRule" Description="The rule used by the node's flow regulator to send outflows to outbound links. &#xD;&#xA;&#xD;&#xA;If the rule is specified as 'By Link Weight', then the outbound link with the largest selection weight will be selected by a flow entity. If the rule is specified as 'Shortest Path' and the flow entity has an assigned destination, then the next link on the shortest path to that destination will be selected. For any flow entity that does not have an assigned destination, then the 'By Link Weight' rule is always assumed." Category="Flow Regulator Logic/Output Flow Control" DefaultValue="By Link Weight">
              <Switch Property="OutputFlowControlMode" Value="SingleFlow" />
            </Override>
            <Override Name="SequenceExpectedOperationTime" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="8" OldPropertyName="OutputFlowEntityType" NewPropertyName="InitialDesiredOutputEntityType" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events />
        <Elements>
          <Element Type="Regulator" Name="FlowRegulator" Scope="Public" Description="The regulator element used by the node to regulate entity flow.">
            <Properties>
              <Property Name="FlowRateUnitType">FlowRateUnitType</Property>
              <Property Name="InitialMaximumFlowRate">InitialMaximumFlowRate</Property>
              <Property Name="InitialOutputYieldFactor">InitialOutputYieldFactor</Property>
              <Property Name="InitialDesiredOutputEntityType">InitialDesiredOutputEntityType</Property>
              <Property Name="FlowRequestRankingRule">LargestValueFirst</Property>
              <Property Name="FlowRequestRankingExpression">Math.If((InputFlowControlMode==Enum.RegulatorInputFlowStrategy.SingleFlow)&amp;&amp;(InboundLinkRule==List.InboundLinkSelectionRule.ByFlowPriority), FlowPriorityExpression, Entity.CurrentLink!=Nothing, Entity.CurrentLink.SelectionWeight, Entity.CurrentConnectorLink!=Nothing, Entity.CurrentConnectorLink.SelectionWeight, 0.0)</Property>
              <Property Name="InputFlowControlMode">InputFlowControlMode</Property>
              <Property Name="FlowMergeMatchingRule">FlowMergeMatchingRule</Property>
              <Property Name="FlowMergeAllocationRule">FlowMergeAllocationRule</Property>
              <Property Name="FlowMergeProportionExpression">Math.If(FlowRegulator.FlowRequestQueue.NumberWaiting==InboundLinks.NumberItems, Math.If(Entity.CurrentLink!=Nothing, Entity.CurrentLink.SelectionWeight, Entity.CurrentConnectorLink!=Nothing, Entity.CurrentConnectorLink.SelectionWeight, 0.0), 0.0)</Property>
              <Property Name="InitiallyEnabled">RegulatorInitiallyEnabled</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="InboundLinkSwitchControl">
            <Properties>
              <Property Name="StateVariableName">
                <Value>InboundLinkSwitchControlVariable</Value>
              </Property>
              <Property Name="TriggeredProcessName">ResetFlowRegulator</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="OutboundLinkSwitchControl">
            <Properties>
              <Property Name="StateVariableName">
                <Value>OutboundLinkSwitchControlVariable</Value>
              </Property>
              <Property Name="TriggeredProcessName">ResetFlowRegulator</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="DynamicUpdates">
            <Properties>
              <Property Name="TimeInterval">DynamicUpdateInterval</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="ToEnableInboundLinkSwitchControl" ExclusionExpression="!((InputFlowControlMode==Enum.RegulatorInputFlowStrategy.SingleFlow)&amp;&amp;(InboundLinkRule==List.InboundLinkSelectionRule.ByLinkWeight)&amp;&amp;InboundLinkSwitchControlVariable.HasValue)" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>InboundLinkSwitchControl.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="ToEnableOutboundLinkSwitchControl" ExclusionExpression="!((OutputFlowControlMode==Enum.NodeOutputFlowStrategy.SingleFlow)&amp;&amp;(OutboundLinkRule==Enum.LinkSelectionRule.ByLinkWeight)&amp;&amp;OutboundLinkSwitchControlVariable.HasValue)" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OutboundLinkSwitchControl.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Assign" Name="ToEnableDynamicUpdates" ExclusionExpression="(!DynamicMaximumFlowRateEquation.HasValue)&amp;&amp;(!DynamicOutputYieldFactorEquation.HasValue)" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>DynamicUpdates.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Node.OnEntered" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="3">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="VisitNode" Name="Traveler" ID="4">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="5">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="FlowRegulatorName">FlowRegulator</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredToAssociatedObject" IsOverride="True" InterfaceProcessID="Node.OnEnteredToAssociatedObject" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="3">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToAssociatedObject" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">AssociatedObject</Property>
                  <Property Name="FlowRegulatorName">FlowRegulator</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredFromAssociatedObject" IsOverride="True" InterfaceProcessID="Node.OnEnteredFromAssociatedObject" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="3">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="FlowRegulatorName">FlowRegulator</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredParking" IsOverride="True" InterfaceProcessID="Node.OnEnteredParking" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="EndTransfer" Name="EndTransfer" ID="2">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="ResetFlowRegulator" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToDisableFlowRegulator" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>FlowRegulator.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="ToEnableFlowRegulator" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>FlowRegulator.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnDynamicUpdate" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">DynamicUpdates.Event</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="MaximumFlowRate" ExclusionExpression="!DynamicMaximumFlowRateEquation.HasValue" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>FlowRegulator.CurrentMaximumFlowRate</Value>
                  </Property>
                  <Property Name="NewValue">DynamicMaximumFlowRateEquation</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OutputYieldFactor" ExclusionExpression="!DynamicOutputYieldFactorEquation.HasValue" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>FlowRegulator.CurrentOutputYieldFactor</Value>
                  </Property>
                  <Property Name="NewValue">DynamicOutputYieldFactorEquation</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </NodeDefinition>
      <FixedDefinition Name="FlowSink" Id="739855fe-a2a5-45b1-84eb-0a33e2385d2e" Revision="4" Author="Sales and Support" Description="The FlowSink object may be used to destroy the flow of entities representing quantities of fluids or other mass that have finished processing in the model.&#xD;&#xA;&#xD;&#xA;The flow rate into the sink is regulated by its 'Input' flow node." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="3">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="4">Version 5.93: 'OnEnteredFlowContainer' process - If the executing token's associated flow entity is destroyed, then automatically end the processing of the token.</ChangeDescription>
        </ChangeDescriptions>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <Overrides>
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="TransferInConstraintsType" Visible="False" />
            <Override Name="TransferInCondition" Visible="False" />
            <Override Name="TransferOutConstraintsType" Visible="False" />
            <Override Name="TransferOutCondition" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="FlowNode" />
        </UsedObjects>
        <Elements>
          <Element Type="Container" Name="FlowContainer" Scope="Public" Description="The container element used by the FlowSink object to temporarily store entity flow waiting to be destroyed.">
            <Properties />
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredFlowContainer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">FlowContainer.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Wait" Name="UntilEntityTranferred" ID="2">
                <Properties>
                  <Property Name="EventName">Entity.Transferred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Destroy" Name="Entity" ID="3">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <TransferPoints>
            <ExternalNode Name="Input" Location="-1,0,0" ID="{9DCF2B2F-B7E8-4C61-958A-5E24FEC1C91C}">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Container</Property>
                <Property Name="ContainerName">FlowContainer</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="FlowControlPropertyDisplay" Value="Flow Sink Display Profile" />
                <InitialValue Name="InputFlowControlMode" Value="Merge Flow" />
              </InitialValues>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="9845d430-6686-4f57-b6b0-2ce3f5015bd8" />
            </SymbolInstance>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="FlowSource" Id="4f421110-a261-458b-852c-02d74e2647a8" Revision="6" Author="Sales and Support" Description="The FlowSource object may be used to generate a flow of fluid or other mass of a specified entity type. &#xD;&#xA;&#xD;&#xA;By default, a flow source behaves as an infinite source of supply, but alternatively may be configured to run out of material if a stopping condition is met.&#xD;&#xA;&#xD;&#xA;The flow rate out of the source is regulated by its 'Output' flow node." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="4">Version 4.79: The object now disables all internal timers if a stopping condition is reached.</ChangeDescription>
          <ChangeDescription Version="5">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="6">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Flow Generator Logic" Description="Flow Generator Logic" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <DynamicObjectInstanceProperty Name="EntityType" DisplayName="Entity Type" Description="The entity type generated by the flow source.&#xD;&#xA;&#xD;&#xA;By default, a flow source behaves as an infinite source of supply, but alternatively may be configured to run out of material if a stopping condition is met.&#xD;&#xA;&#xD;&#xA;The flow rate out of the source is regulated by its 'Output' flow node." Category="Flow Generator Logic" DefaultValue="null" NullString="null" ValidObjectType="Agent" />
          <ExpressionProperty Name="MaximumVolume" DisplayName="Maximum Volume" Description="The maximum flow volume to be generated by this FlowSource object." Category="Stopping Conditions" DefaultValue="Infinity" NullString="null" UnitType="Volume" />
          <ExpressionProperty Name="MaximumWeight" DisplayName="Maximum Weight" Description="The maximum flow weight to be generated by this FlowSource object." Category="Stopping Conditions" DefaultValue="Infinity" NullString="null" UnitType="Weight" />
          <ExpressionProperty Name="MaximumTime" DisplayName="Maximum Time" Description="The maximum time from the beginning of the simulation run after which this FlowSource object will stop generating flow." ComplexityLevel="Advanced" Category="Stopping Conditions" DefaultValue="Infinity" NullString="null" UnitType="Time" />
          <EventProperty Name="StopEventName" DisplayName="Stop Event Name" Description="The name of an event which will cause this FlowSource object to stop generating flow." ComplexityLevel="Advanced" Category="Stopping Conditions" Required="False" NullString="null" />
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <Overrides>
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="TransferInConstraintsType" Visible="False" />
            <Override Name="TransferInCondition" Visible="False" />
            <Override Name="TransferOutConstraintsType" Visible="False" />
            <Override Name="TransferOutCondition" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="FlowNode" />
        </UsedObjects>
        <Elements>
          <Element Type="Container" Name="FlowContainer" Scope="Public" Description="The container element used by the FlowSource object to temporarily store entity flow waiting to be released into the system.">
            <Properties />
          </Element>
          <Element Type="Monitor" Name="MaximumVolumeStoppingCondition">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.CurrentVolumeFlowOut</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">MaximumVolume</Property>
              <Property Name="TriggeredProcessName">OnStopEventOccurred</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="MaximumWeightStoppingCondition">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.CurrentWeightFlowOut</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">MaximumWeight</Property>
              <Property Name="TriggeredProcessName">OnStopEventOccurred</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="MaximumTimeStoppingCondition">
            <Properties>
              <Property Name="TimeOffset">MaximumTime</Property>
              <Property Name="MaximumEvents">1</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Subscribe" Name="ToStopEvent" ExclusionExpression="!StopEventName.HasValue" ID="2">
                <Properties>
                  <Property Name="EventName">StopEventName</Property>
                  <Property Name="ProcessName">OnStopEventOccurred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Subscribe" Name="ToStopEvent" ExclusionExpression="MaximumTime==Infinity" ID="3">
                <Properties>
                  <Property Name="EventName">MaximumTimeStoppingCondition.Event</Property>
                  <Property Name="ProcessName">OnStopEventOccurred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Create" Name="FlowSourceContent" ID="5">
                <Properties>
                  <Property Name="ObjectInstanceName">EntityType</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Assign" Name="InfiniteVolume" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Volume</Value>
                  </Property>
                  <Property Name="NewValue">Infinity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Transfer" Name="ToFlowContainer" ID="7">
                <Properties>
                  <Property Name="ToType">Container</Property>
                  <Property Name="ContainerName">FlowContainer</Property>
                  <Property Name="TokenWaitAction">WaitUntilTransferringEvent</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Transfer" Name="ToOutputNode" ID="8">
                <Properties>
                  <Property Name="FromType">CurrentContainer</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">Output</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnStopEventOccurred" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToDisableMaximumTimeStoppingCondition" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MaximumTimeStoppingCondition.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Search" Name="FlowSourceContents" ID="3">
                <Properties>
                  <Property Name="CollectionType">QueueState</Property>
                  <Property Name="QueueStateName">
                    <Value>FlowContainer.Contents</Value>
                  </Property>
                  <Property Name="Limit">Infinity</Property>
                </Properties>
                <Exit Name="Found" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Destroy" Name="FlowSourceContent" ID="4">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <TransferPoints>
            <ExternalNode Name="Output" Location="1,0,0" ID="{46AF3CB9-03B9-49D6-9FD4-BC3DC16D370F}">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="FlowControlPropertyDisplay" Value="Flow Source Display Profile" />
                <InitialValue Name="OutputFlowControlMode" Value="Split Flow" />
              </InitialValues>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="32f8c7c6-a45b-48a9-826d-c69fb09d930b" />
            </SymbolInstance>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <TransporterDefinition Name="HopperCar" Id="6557e61e-8b21-45e3-836c-032bc4863449" Revision="16" BaseClass="RailCar" Author="Sales and Support" Description="A HopperCar is a train car used to carry flow entites that flow into and outof the train car at a Dock." CheckBaseForAdvancedProperties="True">
        <Lists />
        <PropertyDefinitions>
          <Categories>
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Resource Logic" Description="Resource Logic" InitiallyExpanded="False" />
            <Category Name="Reliability Logic" Description="Reliability Logic" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="VolumeCapacity" DisplayName="Volume Capacity" Category="Transport Logic" DefaultValue="1" NullString="null" UnitType="Volume" />
          <ExpressionProperty Name="WeightCapacity" DisplayName="Weight Capacity" Category="Transport Logic" DefaultValue="Infinity" NullString="null" UnitType="Weight" />
          <Overrides />
        </PropertyDefinitions>
        <States />
        <Events>
          <Event Name="FillCompleted" />
        </Events>
        <UsedObjects>
          <UsedObject Name="Locomotive" />
          <UsedObject Name="Dock" />
        </UsedObjects>
        <Elements>
          <Element Type="Monitor" Name="VolumeFill" Scope="Public">
            <Properties>
              <Property Name="StateVariableName">
                <Value>RideStation.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">VolumeCapacity</Property>
              <Property Name="TriggeredProcessName">VolumeFillComplete</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="WeightFill" Scope="Public">
            <Properties>
              <Property Name="StateVariableName">
                <Value>RideStation.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">WeightCapacity</Property>
              <Property Name="TriggeredProcessName">WeightFillComplete</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnVisitingNode" IsOverride="True" InterfaceProcessID="Entity.OnVisitingNode" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="EnteredNode_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">EnteredNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfNotVisitingNode" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(IgnoreVisitingCurrentNode, True, ResourceState==List.ResourceStateName.Idle, False, ResourceState==List.ResourceStateName.OffShift, ((OffShiftAction==List.VehicleOffShiftAction.GoToHome)||(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome))&amp;&amp;(HomeNode!=Nothing)&amp;&amp;(DestinationNode==HomeNode)&amp;&amp;(CurrentNode!=HomeNode),(DestinationNode!=Nothing)&amp;&amp;(CurrentNode!=DestinationNode), True, False)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="32" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfBusy" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Busy)||(ResourceState==List.ResourceStateName.OffShiftBusy)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="27" />
                <Exit Name="False" Type="Alternate" NextID="30" />
              </Step>
              <Step Type="Arrive" Name="AtDestination" ID="5">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="34" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="6">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Dropoff" Name="Rider" ID="8">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="UnloadTime">UnloadTime</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="9" />
                <Exit Name="Failed" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Wait" Name="UntilRiderUnloaded" ID="9">
                <Properties>
                  <Property Name="EventName">RiderUnloaded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Pickup" Name="Rider" ID="10">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                  <Property Name="LoadTime">LoadTime</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="11" />
                <Exit Name="Failed" Type="Alternate" NextID="64" />
              </Step>
              <Step Type="Wait" Name="UntilRiderLoaded" ID="11">
                <Properties>
                  <Property Name="EventName">RiderLoaded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="63" />
              </Step>
              <Step Type="Decide" Name="IfFixedRouting" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.FixedRoute,1,2)" ID="12">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RoutingType==List.VehicleRoutingType.FixedRoute</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="41" />
                <Exit Name="False" Type="Alternate" NextID="14" />
              </Step>
              <Step Type="SetNode" Name="ToNextSequenceDestination" ID="13">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationType">BySequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="32" />
              </Step>
              <Step Type="SelectDropoff" Name="NextTransportDropoff" ID="14">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="32" />
                <Exit Name="Failed" Type="Alternate" NextID="15" />
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="15">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="32" />
                <Exit Name="Failed" Type="Alternate" NextID="16" />
              </Step>
              <Step Type="Release" Name="Vehicle" ID="16">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">SeizedResources.CapacityOwnedOf(ParentObject)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="PlanVisit" Name="NewTransportRequests" ID="17">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="17" />
                <Exit Name="Failed" Type="Alternate" NextID="18" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="18">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="52" />
                <Exit Name="False" Type="Alternate" NextID="32" />
              </Step>
              <Step Type="Decide" Name="IfParking" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.ParkAtNode,1,IdleAction!=List.VehicleIdleAction.ParkAtHome,2,0)" ID="19">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode==CurrentNode)||(HomeNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="31" />
                <Exit Name="False" Type="Alternate" NextID="20" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.ParkAtHome,1,IdleAction!=List.VehicleIdleAction.GoToHome,2,0)" ID="20">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode!=Nothing)&amp;&amp;(HomeNode!=CurrentNode)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="21" />
              </Step>
              <Step Type="Decide" Name="IfRoaming" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.Roam,1,2)" ID="21">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IdleAction==List.VehicleIdleAction.Roam</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="32" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="SetNode" Name="ToHome" ID="22">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">HomeNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="32" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="23">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="35" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="24">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="25">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="17" />
                <Exit Name="False" Type="Alternate" NextID="38" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="26">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Decide" Name="IfParked" ExclusionExpression="!ParkWhileBusy" ID="27">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="28" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="28">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="29" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="29">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfLoadingUnloading" ID="30">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(ResourceState==List.ResourceStateName.OffShift, False, (ResourceState==List.ResourceStateName.Transporting)||(ResourceState==List.ResourceStateName.OffShiftTransporting), True, Node.RidePickupQueue.NumberWaiting&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="43" />
                <Exit Name="False" Type="Alternate" NextID="25" />
              </Step>
              <Step Type="Decide" Name="IfParked" ID="31">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="24" />
                <Exit Name="False" Type="Alternate" NextID="26" />
              </Step>
              <Step Type="Decide" Name="IfParked" ID="32">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="36" />
                <Exit Name="False" Type="Alternate" NextID="37" />
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="33">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="34">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="3" />
                <Exit Name="Failed" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfIdleOrOffShift" ID="35">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Idle)||(ResourceState==List.ResourceStateName.OffShift)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="24" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="IgnoreVisitingCurrentNodeFlag" ID="36">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>IgnoreVisitingCurrentNode</Value>
                  </Property>
                  <Property Name="NewValue">CurrentNode!=DestinationNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="33" />
              </Step>
              <Step Type="Assign" Name="IgnoreVisitingCurrentNodeFlag" ID="37">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>IgnoreVisitingCurrentNode</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="38">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="39" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfParking" ExclusionExpression="Math.If(OffShiftAction==List.VehicleOffShiftAction.ParkAtNode,1,OffShiftAction!=List.VehicleOffShiftAction.ParkAtHome,2,0)" ID="39">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode==CurrentNode)||(HomeNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="31" />
                <Exit Name="False" Type="Alternate" NextID="40" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ExclusionExpression="Math.If(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome,1,OffShiftAction!=List.VehicleOffShiftAction.GoToHome,2,0)" ID="40">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode!=Nothing)&amp;&amp;(HomeNode!=CurrentNode)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="Release" Name="Vehicle" ID="41">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">(ResourceState==List.ResourceStateName.OffShiftTransporting)&amp;&amp;(RideStation.Contents==0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="42" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="42">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="39" />
                <Exit Name="False" Type="Alternate" NextID="51" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ExclusionExpression="MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement" ID="43">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="44" />
              </Step>
              <Step Type="Fire" Name="MinimumDwellTimeExpirationResetEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.SpecificTime" ID="44">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="45" />
              </Step>
              <Step Type="Subscribe" Name="ToMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="45">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="61" />
              </Step>
              <Step Type="Decide" Name="IfMinimumDwellTimeExpired" ExclusionExpression="MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement" ID="46">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="56" />
                <Exit Name="False" Type="Alternate" NextID="47" />
              </Step>
              <Step Type="Decide" Name="IfMinimumDwellTimeCondition" ID="47">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(MinimumDwellTimeCondition.HasValue, MinimumDwellTimeCondition, True)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="48" />
                <Exit Name="False" Type="Alternate" NextID="49" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="48">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ID="49">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="50" />
              </Step>
              <Step Type="UnSubscribe" Name="FromMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="50">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="56" />
              </Step>
              <Step Type="Assign" Name="BeforeNextDestinationAssignments" ID="51">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingRiderReservation.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Decide" Name="NotFollowing" ID="52">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PredecessorRailCar == Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="19" />
                <Exit Name="False" Type="Alternate" NextID="32" />
              </Step>
              <Step Type="Assign" Name="StopLocomotive" ID="53">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive.Locomotive.Movement.Rate</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Assign" Name="RestartLocomotive" ID="54">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">MyLocomotive.DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="60" />
              </Step>
              <Step Type="Decide" Name="HasLocomotive" ID="55">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MyLocomotive != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="57" />
                <Exit Name="False" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Decide" Name="HasLocomotive" ID="56">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MyLocomotive != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="58" />
                <Exit Name="False" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Assign" Name="IncrStopRequest" ID="57">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive.Locomotive.StopRequest</Value>
                  </Property>
                  <Property Name="NewValue">MyLocomotive.Locomotive.StopRequest + 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="53" />
              </Step>
              <Step Type="Assign" Name="DecrStopRequest" ID="58">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive.Locomotive.StopRequest</Value>
                  </Property>
                  <Property Name="NewValue">MyLocomotive.Locomotive.StopRequest - 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="59" />
              </Step>
              <Step Type="Decide" Name="NoStopRequest" ID="59">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MyLocomotive.Locomotive.StopRequest &lt; 1</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="54" />
                <Exit Name="False" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Decide" Name="SoloLocomotive" ID="60">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Is.Locomotive &amp;&amp; (SuccessorRailCar == Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="37" />
              </Step>
              <Step Type="Decide" Name="IsDock" ID="61">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode.AssociatedObject != Nothing) &amp;&amp; CurrentNode.AssociatedObject.Is.Dock</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="62" />
                <Exit Name="False" Type="Alternate" NextID="55" />
              </Step>
              <Step Type="Seize" Name="Dock" ID="62">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">CurrentNode.AssociatedObject</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="55" />
              </Step>
              <Step Type="Decide" Name="CapacityRemaining" ID="63">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(RideStation.Contents.Volume &lt; .999 * VolumeCapacity) &amp;&amp; (RideStation.Contents.Weight &lt; .999 * WeightCapacity)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="64" />
              </Step>
              <Step Type="Decide" Name="IsDock" ID="64">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode.AssociatedObject != Nothing) &amp;&amp; CurrentNode.AssociatedObject.Is.Dock</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="65" />
                <Exit Name="False" Type="Alternate" NextID="46" />
              </Step>
              <Step Type="Release" Name="Dock" ID="65">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">CurrentNode.AssociatedObject</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="46" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderLoading" IsOverride="True" InterfaceProcessID="Transporter.OnRiderLoading" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Seize" Name="Vehicle" ExclusionExpression="RoutingType==List.VehicleRoutingType.FixedRoute" ID="2">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">Capacity.Allocated==0</Property>
                        <Property Name="SelectionExpression"></Property>
                        <Property Name="AccrueUsageCosts">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnRiderLoadingAssignments" ExclusionExpression="RoutingType==List.VehicleRoutingType.FixedRoute" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilFull" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">RideStationLoad &gt;= RideStation.Capacity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Wait" Name="UntilEntityTransferred" ID="5">
                <Properties>
                  <Property Name="EventName">Entity.Transferred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="Loaded_AddOnProcess" ExclusionExpression="!LoadedAddOnProcess.HasValue" ID="6">
                <Properties>
                  <Property Name="ProcessName">LoadedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Delay" Name="LoadedEventToBeLastCurrentEvent" ID="7">
                <Properties>
                  <Property Name="DelayTime">Math.EPSILON</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Fire" Name="RiderLoadedEvent" ID="8">
                <Properties>
                  <Property Name="EventName">RiderLoaded</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IsDock" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode.AssociatedObject != Nothing) &amp;&amp; CurrentNode.AssociatedObject.Is.Dock</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Wait" Name="Filled" ID="10">
                <Properties>
                  <Property Name="EventName">FillCompleted</Property>
                  <Property Name="Events">
                    <Rows>
                      <Properties>
                        <Property Name="EventsEventName">Entity.Transferred</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="EndTransfer" Name="FillOperation" ID="11">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderUnloading" IsOverride="True" InterfaceProcessID="Transporter.OnRiderUnloading" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Wait" Name="UntilEntityTransferred" ID="2">
                <Properties>
                  <Property Name="EventName">Entity.Transferred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="Unloaded_AddOnProcess" ExclusionExpression="!UnloadedAddOnProcess.HasValue" ID="3">
                <Properties>
                  <Property Name="ProcessName">UnloadedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Delay" Name="UnloadedEventToBeLastCurrentEvent" ID="4">
                <Properties>
                  <Property Name="DelayTime">Math.EPSILON</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="RiderUnLoadedEvent" ID="5">
                <Properties>
                  <Property Name="EventName">RiderUnloaded</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="VolumeFillComplete" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="FillCompleted" ID="2">
                <Properties>
                  <Property Name="EventName">FillCompleted</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="WeightFillComplete" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="FillCompleted" ID="2">
                <Properties>
                  <Property Name="EventName">FillCompleted</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <Graphics>
            <Ellipse Center="8.794514962919 0.862745140547893 -0.000110686758884315" Width="0.6695371800543" Height="0.435283522204124" ExternallyVisible="True" YHeight="0.100000001490116">
              <Decorations>
                <Decoration SurfaceId="0">
                  <MaterialRef Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" />
                </Decoration>
                <Decoration SurfaceId="1">
                  <MaterialRef Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" />
                </Decoration>
              </Decorations>
            </Ellipse>
            <Ellipse Center="-8.79768925662761 0.953578939807703 0.00781295645857716" Width="0.714898373248666" Height="0.435283522204124" ExternallyVisible="True" YHeight="0.100000001490116">
              <Decorations>
                <Decoration SurfaceId="0">
                  <MaterialRef Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" />
                </Decoration>
                <Decoration SurfaceId="1">
                  <MaterialRef Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" />
                </Decoration>
              </Decorations>
            </Ellipse>
            <SymbolInstance Center="0.0318228105924461 1.55431223447522E-15 0.165478615069465" Scale="1.40419326189215" ExternallyVisible="True">
              <SymbolRef Id="3a8a7ca0-1f8d-4e2a-bf56-43aff090f528" />
            </SymbolInstance>
            <StackedBar Center="0.211750772682585 2.37920764881829 0.122429822451007" Width="12.7278445020509" Height="4.52738705094479" ExternallyVisible="True" Type="Queue" Expression="Entity.Volume" QueueName="RideStation.Contents" />
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </TransporterDefinition>
      <TransporterDefinition Name="Locomotive" Id="78bfb75a-8f8c-4daa-889e-a14d33bbfb09" Revision="32" BaseClass="RailCar" Author="Sales and Support" Description="A Locomotive is a powered Railcar that can pull other Railcars.   The first Railcar in a train must be a Locomotive." Version="1" CheckBaseForAdvancedProperties="True">
        <Lists />
        <PropertyDefinitions>
          <Categories>
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Resource Logic" Description="Resource Logic" InitiallyExpanded="False" />
            <Category Name="Reliability Logic" Description="Reliability Logic" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ElementProperty Name="RailcarRiderLoadedAddOnProcess" DisplayName="Railcar Rider Loaded" Description="Occurs when a rider is loaded onto an attached Railcar." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RailcarRiderUnloadedAddOnProcess" DisplayName="Railcar Rider Unloaded" Description="Occurs when a rider has been unloaded from an attached Railcar." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RailcarRiderReservationAcceptedAddOnProcess" DisplayName="Railcar Rider Reservation Accepted" Description="Occurs when an attached Railcar accepts a reservation to pickup a rider." ComplexityLevel="Advanced" Category="Add-On Process Triggers" DefaultValue="null" Required="False" NullString="null" Type="Process" />
          <Overrides>
            <Override Name="InitialNetwork" ComplexityLevel="Basic" />
            <Override Name="InitialRideCapacity" Visible="False" />
            <Override Name="TaskSelectionStrategy" Visible="False" />
            <Override Name="RoutingType" Visible="True" />
            <Override Name="RouteSequence" Visible="True" />
            <Override Name="IdleAction" Visible="True" DefaultValue="Roam" ComplexityLevel="Basic" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <ElementReferenceState Name="Car" ElementType="Transporter" />
          <IntegerState Name="StopRequest" />
        </States>
        <Events />
        <Elements />
        <Processes />
        <External>
          <Graphics>
            <Queue Queue="RideStation.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="9.27269341581559 3.43232086412702 -0.0378409776596536" />
                <Point Location="7.27269341581558 3.43232086412702 -0.0378409776596536" />
              </Points>
            </Queue>
            <SymbolInstance Center="0.0127291242380707 0 -0.050916496946827" ExternallyVisible="True">
              <SymbolRef Id="a9d1d9c1-3353-40c9-b3a4-8da712e9f534" />
            </SymbolInstance>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </TransporterDefinition>
      <LinkDefinition Name="MyPipe" Id="f394b58e-7f5d-4663-a608-957feb74f434" Revision="1" BaseClass="Pipe1" Author="Sales and Support" CheckBaseForAdvancedProperties="True">
        <Lists />
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="InitialDesiredSpeed" DefaultValue="4" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <Elements />
        <Processes />
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <LinkDefinition Name="Path" Id="93d39da5-5ba1-4ae1-a526-15bdb27d48e4" Revision="59" Author="Sales and Support" Description="The Path object may be used to define a pathway between two node locations where the travel time is determined by the path length and a traveler's speed. Passing may or may not be allowed." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="31">Version 2.39: Updated the Path object to provide a 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="33">Version 2.40: Removed the Path object's 'Close' and 'Open' public processes. For equivalent functionality, use the Assign step and assign the path's DesiredDirection state to the value 'Enum.TrafficDirection.None' to close entry onto the path, or to the value 'Enum.TrafficDirection.Either' to re-open entry onto the path. In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="34">Version 2.41: Updated the assignments repeat groups to take state units into account.</ChangeDescription>
          <ChangeDescription Version="35">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="36">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="37">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="40">Version 3.51: Do not display new link 'Cell Spacing Type', 'Cell Size', and 'Auto Align Cells' properties.</ChangeDescription>
          <ChangeDescription Version="42">Version 3.54: Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="44">Version 3.57: Added logic for new 'OnTurnedAround' standard interface process.</ChangeDescription>
          <ChangeDescription Version="45">Version 4.58: Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="47">Version 4.59: Process logic now uses new entity 'NextEntityAheadOnLink' function instead of deprecated 'FrontTraffic.Speed' function</ChangeDescription>
          <ChangeDescription Version="48">Version 4.61: Set all inherited properties in 'Financials' category to not be visible.</ChangeDescription>
          <ChangeDescription Version="49">Version 4.63: Reordered the position of the 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="52">Version 4.68: Changed 'TravelerCapacity' integer property to 'InitialTravelerCapacity' expression property. Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'.</ChangeDescription>
          <ChangeDescription Version="55">Version 4.76: Updates required due to Suspend &amp; Resume step enhancements.</ChangeDescription>
          <ChangeDescription Version="56">Version 5.85: Process logic changes to better support an entity on the path being destroyed before reaching the end of the link.</ChangeDescription>
          <ChangeDescription Version="57">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="58">Version 5.88: 'OnCollisionCleared' process - Improvements to entity movement rate assignment expression to better avoid null pointer exceptions.</ChangeDescription>
          <ChangeDescription Version="59">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="52" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
        </ChangeStringReplacements>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <BooleanProperty Name="AllowPassing" DisplayName="Allow Passing" Description="Indicates whether passing is allowed on this path. Passing means that entities will not be blocked along the path, but instead will pass each other if speeds vary." Category="Travel Logic" DefaultValue="True" NullString="null" />
          <RealProperty Name="SpeedLimit" DisplayName="Speed Limit" Description="The maximum speed at which an entity can travel along this path." ComplexityLevel="Advanced" Category="Travel Logic" DefaultValue="Infinity" NullString="null" UnitType="TravelRate" DefaultUnits="Meters per Second" />
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when a traveler is entering this object." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsBeforeExiting" DisplayName="Before Exiting" Description="Optional state assignments when a traveler is ready to exit this object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsBeforeExitingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsBeforeExitingNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsBeforeExitingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs when a traveler's leading edge has entered this link." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TrailingEdgeEnteredAddOnProcess" DisplayName="Trailing Edge Entered" Description="Occurs when a traveler's trailing edge has entered this path." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ReachedEndAddOnProcess" DisplayName="Reached End" Description="Occurs when a traveler's leading edge has reached the end of this path." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when a traveler has exited this link." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="True" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="Type" ComplexityLevel="Basic" />
            <Override Name="InitialDesiredSpeed" Visible="False" DefaultValue="0.0" />
            <Override Name="EntityAlignment" Visible="False" />
            <Override Name="CellSpacingType" Visible="False" />
            <Override Name="NumberOfCells" Visible="False" />
            <Override Name="CellSize" Visible="False" />
            <Override Name="AutoAlignCells" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="51" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events />
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Link.OnEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfNoEnteredAddOnProcess" ExclusionExpression="Math.If(EnteredAddOnProcess.HasValue, 2, 1)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">!EnteredAddOnProcess.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="11" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Assign" Name="DisableOnCollisionCleared" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnCollisionCleared.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Suspend" Name="TravelerMovement" ID="6">
                <Properties>
                  <Property Name="SuspendType">ObjectMovement</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Assign" Name="EnableOnCollisionCleared" ID="7">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnCollisionCleared.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Resume" Name="TravelerMovement" ID="8">
                <Properties>
                  <Property Name="ResumeType">ObjectMovement</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">AllowPassing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
              </Step>
              <Step Type="EndTransfer" Name="OntoPath" ID="10">
                <Properties />
              </Step>
              <Step Type="Assign" Name="EntityMovementRate" ExclusionExpression="SpeedLimit==Infinity" ID="11">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Entity.DesiredSpeed, SpeedLimit)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExited" IsOverride="True" InterfaceProcessID="Link.OnExited" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="Exited_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">ExitedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnReachedEnd" IsOverride="True" InterfaceProcessID="Link.OnReachedEnd" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="ReachedEnd_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">ReachedEndAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="FromPath" ID="4">
                <Properties>
                  <Property Name="FromType">EndOfLink</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollided" IsOverride="True" InterfaceProcessID="Link.OnCollided" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">AllowPassing</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="EntityMovementRate" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Entity.NextEntityAheadOnLink.Movement.Rate</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollisionCleared" IsOverride="True" InterfaceProcessID="Link.OnCollisionCleared" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">AllowPassing</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="EntityMovementRate" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Math.If((Entity.NextEntityAheadOnLink!=Nothing)&amp;&amp;(Entity.NetworkDistanceTo.NextEntityAheadOnLink==0.0), Entity.NextEntityAheadOnLink.Movement.Rate, Entity.DesiredSpeed), SpeedLimit)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTrailingEdgeEntered" IsOverride="True" InterfaceProcessID="Link.OnTrailingEdgeEntered" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">AllowPassing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="EndTransfer" Name="OntoPath" ID="3">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="TrailingEdgeEntered_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">TrailingEdgeEnteredAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTurnedAround" IsOverride="True" InterfaceProcessID="Link.OnTurnedAround" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="EntityMovementRate" ExclusionExpression="SpeedLimit==Infinity" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Entity.DesiredSpeed, SpeedLimit)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">AllowPassing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
              </Step>
              <Step Type="EndTransfer" Name="OntoPath" ID="4">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <LinkDefinition Name="Pipe" Id="4d1d2941-3555-49c1-84ee-d56968f88fb5" Revision="21" Author="Sales and Support" Description="Carries high viscosity entity flows through an ellipitical Link by adjusting the flow speed to fully fill the Pipe from the starting end.   " ResourceLogic="True" DefaultWidth="0.25" DefaultHeight="0.25">
        <Lists>
          <StringList Name="FlowTypes">
            <Items>
              <Item Value="PushFromStart" />
              <Item Value="Continuous" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <ListProperty Name="FlowType" DisplayName="Flow Type" Description="The type of flow specified as Continuous or PushFromStart.   In Continuous flow the Pipe might become partically filled as each flow segment moves independently thru the Pipe, whereas in PushFromStart flow the Pipe is fully fiilled as each flow segment is pushed along the Pipe by its trailing flow segment.  " Category="Travel Logic" DefaultValue="Continuous" NullString="null" List="FlowTypes" />
          <Overrides>
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayName" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="CurrentSizeIndex" Visible="False" />
            <Override Name="Type" Visible="False" />
            <Override Name="InitialTravelerCapacity" Visible="False" />
            <Override Name="TrafficDirectionRule" Visible="False" />
            <Override Name="InitialDesiredDirection" Visible="False" />
            <Override Name="EntryRankingRule" Visible="True" />
            <Override Name="InitialDesiredSpeed" Visible="False" DefaultValue="Infinity" />
            <Override Name="EntityAlignment" Visible="False" />
            <Override Name="CellSpacingType" Visible="False" />
            <Override Name="NumberOfCells" Visible="False" />
            <Override Name="CellSize" Visible="False" />
            <Override Name="AutoAlignCells" Visible="False" />
            <Override Name="DrawnToScale" Visible="False" />
            <Override Name="LogicalLength" Visible="False" />
            <Override Name="CrossSectionShape" Visible="False" DefaultValue="Ellipse" />
            <Override Name="TrapezoidRatio" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <ElementReferenceState Name="LastEntityEntered" ElementType="Entity" />
        </States>
        <Events>
          <Event Name="NewEntityArrived" />
          <Event Name="EntityGap" />
        </Events>
        <Elements>
          <Element Type="Monitor" Name="MonitorLastEntity" Scope="Public">
            <Properties>
              <Property Name="StateVariableName">
                <Value>LastEntityEntered.Movement</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">0</Property>
              <Property Name="TriggeredProcessName">GapForLastEntity</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Link.OnEntered" BeginStepID="7" Description="Clear the need for a gap and set the desired speed.">
            <Properties />
            <Steps>
              <Step Type="Engage" Name="PipeMovement" ID="2">
                <Properties />
              </Step>
              <Step Type="Assign" Name="DesiredSpeed" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Pipe.DesiredSpeed</Value>
                  </Property>
                  <Property Name="NewValue">Link.CurrentVolumeFlowIn.Rate / (Link.Size.Width * Link.Size.Height * Math.PI / 4)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="2" />
              </Step>
              <Step Type="Assign" Name="NoLastEntity" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>LastEntityEntered</Value>
                  </Property>
                  <Property Name="NewValue">Nothing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="NewEntityArrived" ID="5">
                <Properties>
                  <Property Name="EventName">NewEntityArrived</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="DisableMonitor" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MonitorLastEntity.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Decide" Name="PushFlow" ID="7">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnReachedEnd" IsOverride="True" InterfaceProcessID="Link.OnReachedEnd" BeginStepID="4" Description="Transfer from the pipe">
            <Properties />
            <Steps>
              <Step Type="Transfer" Name="FromPipe" ID="2">
                <Properties>
                  <Property Name="FromType">EndOfLink</Property>
                  <Property Name="TokenWaitAction">WaitUntilTransferringEvent</Property>
                </Properties>
              </Step>
              <Step Type="Disengage" Name="FromPipePosition" ID="3">
                <Properties>
                  <Property Name="EntityMovementRate">Infinity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="2" />
              </Step>
              <Step Type="Decide" Name="PushFlow" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="2" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollided" IsOverride="True" InterfaceProcessID="Link.OnCollided" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="PushFlow" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Disengage" Name="FromPipePosition" ID="3">
                <Properties>
                  <Property Name="EntityMovementRate">Math.If(Entity.NextEntityAheadOnLink != Nothing, Math.Min(Movement.Rate, Entity.NextEntityAheadOnLink.Movement.Rate), Movement.Rate)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollisionCleared" IsOverride="True" InterfaceProcessID="Link.OnCollisionCleared" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="PushFlow" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Engage" Name="WithPipePosition" ID="3">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTrailingEdgeEntered" IsOverride="True" InterfaceProcessID="Link.OnTrailingEdgeEntered" BeginStepID="9" Description="If in flow has stopped create a small gap following this entity so that flow can restart.">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="NoInFlowPipeFlow" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentVolumeFlowIn.Rate == 0) &amp;&amp; (Link.Movement.Rate&gt; 0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Assign" Name="StopPipeFlow" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Pipe.DesiredSpeed</Value>
                  </Property>
                  <Property Name="NewValue">0</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="StillLastEntity" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">LastEntityEntered == Token.AssociatedObject</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="LastEntity" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>LastEntityEntered</Value>
                  </Property>
                  <Property Name="NewValue">Token.AssociatedObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Wait" Name="GapOrEntity" ID="6">
                <Properties>
                  <Property Name="EventName">NewEntityArrived</Property>
                  <Property Name="Events">
                    <Rows>
                      <Properties>
                        <Property Name="EventsEventName">EntityGap</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="EnableMonitor" ID="7">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MonitorLastEntity.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Assign" Name="CrossingThreshold" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MonitorLastEntity.CurrentThresholdValue</Value>
                  </Property>
                  <Property Name="NewValue">LastEntityEntered.Entity.Size.Length * 1.000001</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="PushFlow" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="2" />
              </Step>
            </Steps>
          </Process>
          <Process Name="GapForLastEntity" BeginStepID="2" Description="The necessary gap has been formed.">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="EntityGap" ID="2">
                <Properties>
                  <Property Name="EventName">EntityGap</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <FixedDefinition Name="Resource" Id="4ad0d0ce-2b18-4968-bc54-562ed46ac8a5" Revision="81" Author="Sales and Support" Description="The Resource object may be used to model a resource constraint with capacity that can be seized and released by other objects." ResourceLogic="True" CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="39">Version 2.37: Changed 'Capacity' property display name to 'Initial Capacity' as object capacities are now user assignable.</ChangeDescription>
          <ChangeDescription Version="40">Version 2.39: Updated the Resource object process logic to specify all of the object's process delays as non-interruptible.</ChangeDescription>
          <ChangeDescription Version="53">Version 2.40: Corrected some minor step label typos. Changed 'Evaluating Allocation' property display name to 'Evaluating Seize Request'. Added 'FailedBusy' and 'OffShiftBusy' state values to the object's ResourceState state variable. 'On Shift' or 'Off Shift' add-on process triggers are now called when initializing the object even if a work schedule is not specified. Restructured the failure-related process logic. In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="54">Version 2.41: Added customized resource utilization calculation for the object using its 'ResourceState' list state.</ChangeDescription>
          <ChangeDescription Version="55">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="56">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="57">Version 3.52: If the model's 'Disable Randomness' option is being used, the object's 'Reliability Logic' is now automatically disabled to not generate any failure occurrences.</ChangeDescription>
          <ChangeDescription Version="60">Version 3.54: Usage of 'Run.RandomnessDisabled' function instead of deprecated 'DisableRandomness' function. Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="61">Version 3.56: Conversion to 'OnEvaluatingSeizeRequest' standard interface process.</ChangeDescription>
          <ChangeDescription Version="63">Version 4.58: Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="65">Version 4.61: Added new 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="67">Version 4.63: Reordered the position of the 'Financials' property category. Added new 'Financials-&gt;Resource Costs' property category.</ChangeDescription>
          <ChangeDescription Version="71">Version 4.65: 'Repairing' add-on process trigger marked as obsolete and is no longer displayed in the Properties window if not previously defined.</ChangeDescription>
          <ChangeDescription Version="72">Version 4.66: Miscellaneous process logic changes to take advantage of object reference functions as well as the 'Math.If' function syntax.</ChangeDescription>
          <ChangeDescription Version="75">Version 4.68: Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'. Renamed 'EvaluatingAllocationAddOnProcess' property to 'EvaluatingSeizeRequestAddOnProcess'. Renamed 'Process Logic' property category to 'Resource Logic'.</ChangeDescription>
          <ChangeDescription Version="76">Version 4.71: Renamed 'EventName' property to 'FailureEventName'.</ChangeDescription>
          <ChangeDescription Version="77">Version 5.85: Fixed typo in 'Initial Capacity' property description.</ChangeDescription>
          <ChangeDescription Version="78">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="79">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="81">Version 5.95: Updates to the 'OnFailed', 'OnRepaired', 'OnEvaluatingSeizeRequest', and 'OnCapacityChanged' process logic.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="75" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
          <ChangeStringReplacement Version="75" RegularExpressionPattern="(^|[^\w_])(?i:EvaluatingAllocationAddOnProcess)([^\w_]|$)" ReplacementString="$1EvaluatingSeizeRequestAddOnProcess$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="ResourceFailureType">
            <Items>
              <Item Value="NoFailures" />
              <Item Value="CalendarTimeBased" />
              <Item Value="UsageCountBased" />
              <Item Value="EventCountBased" />
              <Item Value="UsageTimeBased" />
            </Items>
          </StringList>
          <StringList Name="ResourceStateName">
            <Items>
              <Item Value="Idle" />
              <Item Value="Busy" />
              <Item Value="Blocked" />
              <Item Value="Failed" />
              <Item Value="OffShift" />
              <Item Value="FailedBusy" />
              <Item Value="OffShiftBusy" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Resource Logic" Description="Resource Logic" />
            <Category Name="Reliability Logic" Description="Reliability Logic" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ListProperty Name="FailureType" DisplayName="Failure Type" Description="Specifies whether this object has failures that affect the object's availability, and the method used to trigger the failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="No Failures" NullString="null" List="ResourceFailureType">
            <Captions>
              <Caption Value="NoFailures" Display="No Failures" />
              <Caption Value="CalendarTimeBased" Display="Calendar Time Based" />
              <Caption Value="UsageCountBased" Display="Usage Count Based" />
              <Caption Value="EventCountBased" Display="Event Count Based" />
              <Caption Value="UsageTimeBased" Display="Usage Time Based" />
            </Captions>
          </ListProperty>
          <EventProperty Name="FailureEventName" DisplayName="Event Name" Description="The name of the event which determines when the next failure occurs." ComplexityLevel="Advanced" Category="Reliability Logic" NullString="null">
            <Switch Property="FailureType" Value="EventCountBased" />
          </EventProperty>
          <ExpressionProperty Name="CountBetweenFailures" DisplayName="Count Between Failures" Description="The count between failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Uniform(100,200)" NullString="null">
            <Switch Property="FailureType" Value="UsageCountBased, EventCountBased" />
          </ExpressionProperty>
          <ExpressionProperty Name="UptimeBetweenFailures" DisplayName="Uptime Between Failures" Description="The uptime between failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Exponential(100)" NullString="null" UnitType="Time">
            <Switch Property="FailureType" Value="CalendarTimeBased, UsageTimeBased" />
          </ExpressionProperty>
          <ExpressionProperty Name="TimeToRepair" DisplayName="Time To Repair" Description="The time required to repair a failure when one occurs." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Triangular(0.5,1.0,1.5)" NullString="null" UnitType="Time">
            <Switch Property="FailureType" Comparison="NotEqual" Value="NoFailures" />
          </ExpressionProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="AllocatedAddOnProcess" DisplayName="Allocated" Description="Occurs when this Resource object has had capacity allocated to another object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ReleasedAddOnProcess" DisplayName="Released" Description="Occurs when this Resource object has had capacity released by another object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="FailedAddOnProcess" DisplayName="Failed" Description="Occurs when this object has failed." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RepairingAddOnProcess" DisplayName="Repairing" Description="Occurs when the repair time for a failure at this object is starting. This property has been marked as obsolete. Use the 'Failed' add-on process trigger instead." Obsolete="True" ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RepairedAddOnProcess" DisplayName="Repaired" Description="Occurs when a failure is repaired at this object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EvaluatingSeizeRequestAddOnProcess" DisplayName="Evaluating Seize Request" Description="Occurs when this Resource object is evaluating whether to accept or reject a request to seize capacity of the resource. In the executed decision process, assigning a value less than or equal to 0.0 to the executing token's ReturnValue state (Token.ReturnValue) indicates that the seize request is rejected." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="OnShiftAddOnProcess" DisplayName="On Shift" Description="Occurs when the object goes 'on shift' because of its specified work schedule." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="OffShiftAddOnProcess" DisplayName="Off Shift" Description="Occurs when the object goes 'off shift' because of its specified work schedule." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ExpressionProperty Name="CapitalCost" DisplayName="Capital Cost" Description="The initial one-time setup cost to add this object to the system." ComplexityLevel="Advanced" Category="Financials" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <Overrides>
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="True" />
            <Override Name="ResourceCostPerUse" Visible="True" />
            <Override Name="ResourceUsageCostRate" Visible="True" />
            <Override Name="LogResourceUsage" Visible="True" />
            <Override Name="DisplayCategory" Visible="True" />
            <Override Name="DisplayColor" Visible="True" />
            <Override Name="CapacityType" Visible="True" Category="Resource Logic" />
            <Override Name="WorkSchedule" Visible="True" Category="Resource Logic" />
            <Override Name="WorkDayExceptions" Visible="True" />
            <Override Name="WorkPeriodExceptions" Visible="True" />
            <Override Name="InitialCapacity" Visible="True" Category="Resource Logic" />
            <Override Name="RankingRule" Visible="True" Category="Resource Logic" />
            <Override Name="RankingExpression" Visible="True" />
            <Override Name="DynamicSelectionRule" Visible="True" Category="Resource Logic" />
            <Override Name="CurrentSizeIndex" DefaultValue="$(DefinitionName).ResourceState" />
            <Override Name="TransferInConstraintsType" Visible="False" />
            <Override Name="TransferInCondition" Visible="False" />
            <Override Name="TransferOutConstraintsType" Visible="False" />
            <Override Name="TransferOutCondition" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="74" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="74" OldPropertyName="EvaluatingAllocationAddOnProcess" NewPropertyName="EvaluatingSeizeRequestAddOnProcess" />
            <PropertyReplacement Version="76" OldPropertyName="EventName" NewPropertyName="FailureEventName" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States>
          <ListState Name="ResourceState" Description="The current resource state of this object (numeric values for this state are Idle = 0, Busy = 1, Failed = 3, OffShift = 4, FailedBusy = 5, OffShiftBusy = 6)." List="ResourceStateName" AutomaticAssignment="ResourceAutoStates" ResourceUtilizationCalculation="Custom">
            <AutoStates>
              <AutoState Label="FailedBusy" State="Failed AutoState" />
              <AutoState Label="OffShiftBusy" State="OffShift AutoState" />
            </AutoStates>
            <ResourceUtilizationCalculationSettings>
              <ResourceUtilizationCalculationSetting StateName="Idle" Setting="NotApplicable" />
              <ResourceUtilizationCalculationSetting StateName="Busy" Setting="IncludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="Blocked" Setting="ExcludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="Failed" Setting="ExcludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="OffShift" Setting="ExcludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="FailedBusy" Setting="IncludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="OffShiftBusy" Setting="IncludeUnitsAllocated" />
            </ResourceUtilizationCalculationSettings>
          </ListState>
        </States>
        <Events>
          <Event Name="Allocated" Description="The Allocated event provides notification that capacity of this Resource object has been allocated." />
          <Event Name="Released" Description="The Released event provides notification that capacity of this Resource object has been released." />
          <Event Name="CalendarTimeBasedFailuresReset" Description="An occurrence of this event will reset the 'CalendarTimeBasedFailures' timer." Public="False" />
          <Event Name="UsageCountBasedFailuresReset" Description="An occurrence of this event will reset the 'ProcessingCountBasedFailures' timer." Public="False" />
          <Event Name="EventCountBasedFailuresReset" Description="An occurrence of this event will reset the 'EventCountBasedFailures' timer." Public="False" />
          <Event Name="UsageTimeBasedFailuresReset" Description="An occurrence of this event will reset the 'UsageTimeBasedFailures' timer." Public="False" />
        </Events>
        <Elements>
          <Element Type="Failure" Name="Failure" Scope="Public" Description="The failure occurrences for this object.">
            <Properties>
              <Property Name="ReportStatistics">False</Property>
              <Property Name="OnFailedProcess">OnFailed</Property>
              <Property Name="OnRepairedProcess">OnRepaired</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="CalendarTimeBasedFailures">
            <Properties>
              <Property Name="TimeOffset">UptimeBetweenFailures</Property>
              <Property Name="TimeInterval">UptimeBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">CalendarTimeBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="UsageCountBasedFailures">
            <Properties>
              <Property Name="IntervalType">EventCount</Property>
              <Property Name="TriggeringEventName">Released</Property>
              <Property Name="TriggeringEventCount">CountBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">UsageCountBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="EventCountBasedFailures">
            <Properties>
              <Property Name="IntervalType">EventCount</Property>
              <Property Name="TriggeringEventName">FailureEventName</Property>
              <Property Name="TriggeringEventCount">CountBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">EventCountBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="UsageTimeBasedFailures">
            <Properties>
              <Property Name="IntervalType">TimeInState</Property>
              <Property Name="TimeOffset">UptimeBetweenFailures</Property>
              <Property Name="TimeInterval">UptimeBetweenFailures</Property>
              <Property Name="StateVariableName">
                <Value>ResourceState</Value>
              </Property>
              <Property Name="StateValue">Math.If((ResourceState==List.ResourceStateName.Busy)||(ResourceState==List.ResourceStateName.OffShiftBusy) ||(ResourceState==List.ResourceStateName.FailedBusy), ResourceState, Math.NaN)</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">UsageTimeBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="CostCenter" Name="CapitalCosts">
            <Properties>
              <Property Name="InitialCost" Units="USD">CapitalCost</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DataSource">[Object]</Property>
              <Property Name="DataItem">"CapitalCost"</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.ResourceFailureType.CalendarTimeBased" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CalendarTimeBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.ResourceFailureType.CalendarTimeBased" ID="3">
                <Properties>
                  <Property Name="EventName">CalendarTimeBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.ResourceFailureType.UsageCountBased" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>UsageCountBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.ResourceFailureType.UsageCountBased" ID="5">
                <Properties>
                  <Property Name="EventName">UsageCountBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.ResourceFailureType.EventCountBased" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>EventCountBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.ResourceFailureType.EventCountBased" ID="7">
                <Properties>
                  <Property Name="EventName">EventCountBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.ResourceFailureType.UsageTimeBased" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>UsageTimeBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.ResourceFailureType.UsageTimeBased" ID="9">
                <Properties>
                  <Property Name="EventName">UsageTimeBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="10">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ExclusionExpression="Math.If(OnShiftAddOnProcess.HasValue, 0, 2)" ID="11">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState!=List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="14" />
                <Exit Name="False" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ExclusionExpression="Math.If(OffShiftAddOnProcess.HasValue, 0, 2)" ID="12">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Execute" Name="OffShift_AddOnProcess" ID="13">
                <Properties>
                  <Property Name="ProcessName">OffShiftAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="OnShift_AddOnProcess" ID="14">
                <Properties>
                  <Property Name="ProcessName">OnShiftAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityAllocated" IsOverride="True" InterfaceProcessID="Object.OnCapacityAllocated" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="AllocatedEvent" ID="2">
                <Properties>
                  <Property Name="EventName">Allocated</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="Allocated_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">AllocatedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityReleased" IsOverride="True" InterfaceProcessID="Object.OnCapacityReleased" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ResourceState" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((ResourceState==List.ResourceStateName.FailedBusy)&amp;&amp;(Capacity.Allocated==0), List.ResourceStateName.Failed, (ResourceState==List.ResourceStateName.OffShiftBusy)&amp;&amp;(Capacity.Allocated==0), List.ResourceStateName.OffShift, ResourceState)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Fire" Name="ReleasedEvent" ID="3">
                <Properties>
                  <Property Name="EventName">Released</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="Released_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">ReleasedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEvaluatingSeizeRequest" IsOverride="True" InterfaceProcessID="Object.OnEvaluatingSeizeRequest" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfResourceAvailable" ExclusionExpression="FailureType==List.ResourceFailureType.NoFailures" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">!Failure.Active &amp;&amp; (UsageCountBasedFailures.EventCount==0) &amp;&amp; (EventCountBasedFailures.EventCount==0) &amp;&amp; (CalendarTimeBasedFailures.EventCount==0) &amp;&amp; (UsageTimeBasedFailures.EventCount==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="RejectSeizeRequest" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Token.ReturnValue</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="EvaluatingSeizeRequest_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">EvaluatingSeizeRequestAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityChanged" IsOverride="True" InterfaceProcessID="Object.OnCapacityChanged" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfOnShift" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Capacity.Previous==0)&amp;&amp;(Capacity&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Capacity.Previous&gt;0)&amp;&amp;(Capacity&lt;=0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="OffShiftAssignments" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If(Capacity.Allocated&gt;0, List.ResourceStateName.OffShiftBusy, List.ResourceStateName.OffShift)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="OffShift_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">OffShiftAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="OnShiftAssignments" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If(Failure.Active, Math.If(Capacity.Allocated&gt;0, List.ResourceStateName.FailedBusy, List.ResourceStateName.Failed), ResourceState)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Execute" Name="OnShift_AddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">OnShiftAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="FailureOccurrenceLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fail" Name="Resource" ID="2">
                <Properties>
                  <Property Name="FailureName">Failure</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Delay" Name="TimeToRepair" ID="3">
                <Properties>
                  <Property Name="DelayTime">TimeToRepair</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Repair" Name="Resource" ID="4">
                <Properties>
                  <Property Name="FailureName">Failure</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.ResourceFailureType.CalendarTimeBased" ID="5">
                <Properties>
                  <Property Name="EventName">CalendarTimeBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.ResourceFailureType.UsageCountBased" ID="6">
                <Properties>
                  <Property Name="EventName">UsageCountBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.ResourceFailureType.EventCountBased" ID="7">
                <Properties>
                  <Property Name="EventName">EventCountBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.ResourceFailureType.UsageTimeBased" ID="8">
                <Properties>
                  <Property Name="EventName">UsageTimeBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Allocate" Name="Resource" ID="9">
                <Properties>
                  <Property Name="ResourceType">ParentObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFailed" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnFailedAssignments" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If(Capacity&gt;0, Math.If(Capacity.Allocated&gt;0, List.ResourceStateName.FailedBusy, List.ResourceStateName.Failed), ResourceState)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Suspend" Name="FailureOccurrenceLogic" ExclusionExpression="!FailedAddOnProcess.HasValue &amp;&amp; !RepairingAddOnProcess.HasValue" ID="3">
                <Properties>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="FailedAdd_OnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">FailedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="RepairingAdd_OnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">RepairingAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Resume" Name="FailureOccurrenceLogic" ExclusionExpression="!FailedAddOnProcess.HasValue &amp;&amp; !RepairingAddOnProcess.HasValue" ID="6">
                <Properties>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRepaired" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnRepairedAssignments" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="RepairedAdd_OnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">RepairedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="Allocate" BeginStepID="2" Scope="Public">
            <Properties />
            <Steps>
              <Step Type="Allocate" Name="Resource" ID="2">
                <Properties>
                  <Property Name="ResourceType">ParentObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="ff9df4e7-c487-4531-a221-8116b525c759" />
            </SymbolInstance>
            <DefaultAdditionalSymbols>
              <DefaultAdditionalSymbol Index="0">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="1">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="058b36ed-429c-4b02-b099-5c8bd99e8090" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="2">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="4d00a968-705b-4378-9470-fd424a6f711b" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="3">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="149296e1-b221-4f6e-9ef0-87cd53ccf9a4" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="4">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="b479091d-451e-4f0e-a7c7-30f3b9b0fb73" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="5">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="3b8a2172-9f5d-40ab-98b9-e63a31dba868" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="6">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0">
                      <MaterialRef Id="4577d29d-5313-4f0a-aa39-293072d270a5" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
            </DefaultAdditionalSymbols>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <FixedDefinition Name="Sink" Id="5f44138f-a5f7-40d1-ab9a-eea7c5f0254e" Revision="57" Author="Sales and Support" Description="The Sink object may be used to destroy entity objects that have finished processing in the model." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="34">Version 2.37: Updated the Sink object to use the string '[DynamicObjects]' as the Data Source field for classifying the sink's 'Time In System' tally statistic results.</ChangeDescription>
          <ChangeDescription Version="36">Version 2.39: Updated the Sink object process logic to specify all of the object's process delays as non-interruptible. Added a 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="37">Version 2.40: In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="39">Version 2.41: Specified the Unit Type property of the Sink object's 'TimeInSystem' TallyStatistic as 'Time'. Updated the assignments repeat groups to take state units into account.</ChangeDescription>
          <ChangeDescription Version="41">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object. Changed the Category field for classifying the sink's 'Time In System' tally statistic results.</ChangeDescription>
          <ChangeDescription Version="42">Version 3.47: Add new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="43">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="45">Version 3.54: Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="48">Version 4.58: 'Data Source' results classification for 'TimeInSystem' tally statistic is now 'DestroyedObjects'. Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="50">Version 4.61: Added new 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="53">Version 4.62: Added new 'Financials-&gt;Buffer Costs property category.</ChangeDescription>
          <ChangeDescription Version="54">Version 4.63: Reordered the position of the 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="56">Version 4.68: Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'.</ChangeDescription>
          <ChangeDescription Version="57">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="56" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
        </ChangeStringReplacements>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Buffer Costs" Description="Buffer Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="TransferInTime" DisplayName="Transfer-In Time" Description="The time required to transfer an entity into this object." ComplexityLevel="Advanced" Category="Process Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when an entity is entering this object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs immediately after an entity has entered this object and is about to start the 'Transfer-In Time'." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="DestroyingEntityAddOnProcess" DisplayName="Destroying Entity" Description="Occurs when an entity is about to be destroyed by this Sink object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ExpressionProperty Name="CapitalCost" DisplayName="Capital Cost" Description="The initial one-time setup cost to add this object to the system." ComplexityLevel="Advanced" Category="Financials" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="InputBufferCostPerUse" DisplayName="Cost Per Use" Description="The cost to hold an entity in this buffer irrespective of the waiting time." ComplexityLevel="Advanced" Category="Financials/Buffer Costs/Input Buffer" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="InputBufferHoldingCostRate" DisplayName="Holding Cost Rate" Description="The cost per unit time to hold an entity in this buffer." ComplexityLevel="Advanced" Category="Financials/Buffer Costs/Input Buffer" DefaultValue="0.0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <Overrides>
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="TransferOutConstraintsType" Visible="False" />
            <Override Name="TransferOutCondition" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="55" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="BasicNode" />
        </UsedObjects>
        <Elements>
          <Element Type="TallyStatistic" Name="TimeInSystem" Scope="Public" Description="The tally statistic that records time in system observations on entities destroyed by this Sink object.">
            <Properties>
              <Property Name="UnitType">Time</Property>
              <Property Name="DataSource">[DestroyedObjects]</Property>
              <Property Name="Category">FlowTime</Property>
              <Property Name="DataItem">TimeInSystem</Property>
            </Properties>
          </Element>
          <Element Type="Station" Name="InputBuffer" Scope="Public" Description="The station location inside this Sink object that entities enter to be destroyed.">
            <Properties>
              <Property Name="CostPerUse" Units="USD">InputBufferCostPerUse</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">InputBufferHoldingCostRate</Property>
            </Properties>
          </Element>
          <Element Type="CostCenter" Name="CapitalCosts">
            <Properties>
              <Property Name="InitialCost" Units="USD">CapitalCost</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DataSource">[Object]</Property>
              <Property Name="DataItem">"CapitalCost"</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredInputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">InputBuffer.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Delay" Name="TransferInTime" ID="4">
                <Properties>
                  <Property Name="DelayTime">TransferInTime</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="EndTransfer" Name="IntoInputBuffer" ID="5">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="DestroyingEntity_AddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">DestroyingEntityAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Tally" Name="EntityTimeInSystem" ID="7">
                <Properties>
                  <Property Name="TallyStatisticName">TimeInSystem</Property>
                  <Property Name="Value">Entity.TimeInSystem</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Destroy" Name="Entity" ID="8">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <TransferPoints>
            <ExternalNode Name="Input" Location="-1.5,0,0" ID="Input">
              <Properties>
                <Property Name="NodeClassName">BasicNode</Property>
                <Property Name="InputLocationType">Station</Property>
                <Property Name="StationName">InputBuffer</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="f5b0a0b7-4274-403c-981c-33d4b6e077a5" />
            </SymbolInstance>
            <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="-1 0 0.5" />
                <Point Location="-4 0 0.5" />
              </Points>
            </Queue>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
        <Dashboard>
          <Graphics>
            <StatusLabel Center="-5 0 -1.5" Width="10" Height="1" ExternallyVisible="True" BackColor="00ffffff" TextColor="0000ff" Expression="&quot;InputBuffer&quot;" />
            <StatusLabel Center="1.875 0 -1.5" Width="3.75" Height="1" ExternallyVisible="True" Expression="InputBuffer.Contents" />
            <Plot Center="11 0 2" Width="14" Height="8" ExternallyVisible="True" Title="InputBuffer.Contents" XAxisLabel="Time" YAxisLabel="Value">
              <Range Type="Hours">1</Range>
              <PlotLines>
                <PlotLine Expression="InputBuffer.Contents" />
              </PlotLines>
            </Plot>
          </Graphics>
        </Dashboard>
      </FixedDefinition>
      <FixedDefinition Name="Source" Id="1d0ccf22-61f9-4fc0-9b3c-01d17e71402d" Revision="86" Author="Sales and Support" Description="The Source object may be used to generate entity objects of a specified type." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="36">Version 2.37: Updated the Source object to provide an 'Initial Number Entities' option for the 'On Event' arrival mode, for creating an initial number of entities at the beginning of the simulation run in addition to entities created by the specified Event Name. Also added a 'Rate Scale Factor' option for the 'Time Varying Arrival Rate' arrival mode, for scaling the arrival rate values specified in the rate table.</ChangeDescription>
          <ChangeDescription Version="40">Version 2.39: Updated the Source object to provide a 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="48">Version 2.40: Updated the Source object to provide a 'Table Reference Assignment' property category. In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="50">Version 2.41: Updated the Source object to provide a 'Stopping Conditions' property category. Updated the assignments repeat groups to take state units into account.</ChangeDescription>
          <ChangeDescription Version="51">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="54">Version 3.47: Renamed 'Table Reference Assignment' property category to 'Table Reference Assignments'. Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="58">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="67">Version 3.54: Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger. For the 'Arrival Table' arrival mode option, added new 'Arrival Time Deviation','No-Show Probability', and 'Repeat Arrival Pattern' features. Also, to support the 'Maximum Time' stopping condition, the Source object's logic now takes advantage of a new 'Maximum Time' feature in the Timer element rather than using a Delay step-based approach.</ChangeDescription>
          <ChangeDescription Version="68">Version 3.56: For the 'Arrival Table' arrival mode option, added new 'Arrival Events Per Time Slot' feature.</ChangeDescription>
          <ChangeDescription Version="70">Version 4.58: Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="72">Version 4.61: Added new 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="74">Version 4.62: Added new 'Financials-&gt;Buffer Costs' property category.</ChangeDescription>
          <ChangeDescription Version="75">Version 4.63: Reordered the position of the 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="77">Version 4.68: Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'.</ChangeDescription>
          <ChangeDescription Version="78">Version 4.73: Renamed 'EventName' property to 'TriggeringEventName'. Renamed 'EventCount' property to 'TriggeringEventCount'.</ChangeDescription>
          <ChangeDescription Version="80">Version 4.78: Renamed 'Arrival Logic' property category to 'Entity Arrival Logic'.</ChangeDescription>
          <ChangeDescription Version="81">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="83">Version 5.90: 'Before Creating Entities' table reference assignments are now supported by the 'Initial Number Entities' feature if using the 'On Event' arrival mode.</ChangeDescription>
          <ChangeDescription Version="86">Version 5.91: Version update to support TransferNode object update. Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="77" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
        </ChangeStringReplacements>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Entity Arrival Logic" Description="Entity Arrival Logic" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Table Reference Assignments" Description="Optional Table Reference Assignments" InitiallyExpanded="False" />
            <Category Name="Table Reference Assignments/Before Creating Entities" Description="Table Reference Assignment Before Creating Entities" InitiallyExpanded="False" />
            <Category Name="Table Reference Assignments/On Created Entity" Description="Table Reference Assignment On Created Entity" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Buffer Costs" Description="Buffer Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <DynamicObjectInstanceProperty Name="EntityType" DisplayName="Entity Type" Description="The type of entities created by this Source object." Category="Entity Arrival Logic" DefaultValue="null" NullString="null" ValidObjectType="Agent" />
          <EnumProperty Name="ArrivalMode" DisplayName="Arrival Mode" Description="The mode used by this Source object to automatically generate a stream of entity arrivals." Category="Entity Arrival Logic" DefaultValue="Interarrival Time" NullString="null" EnumType="TimerIntervalType">
            <Captions>
              <Caption Value="Time" Display="Interarrival Time" />
              <Caption Value="TimeInState" Display="" Visible="False" />
              <Caption Value="RateTable" Display="Time Varying Arrival Rate" />
              <Caption Value="EventCount" Display="On Event" />
              <Caption Value="ArrivalTable" Display="Arrival Table" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="TimeOffset" DisplayName="Time Offset" Description="The time offset until the first arrival." Category="Entity Arrival Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes">
            <Switch Property="ArrivalMode" Value="Time" />
          </ExpressionProperty>
          <ExpressionProperty Name="InterarrivalTime" DisplayName="Interarrival Time" Description="The time interval between two successive arrivals. This property may be specified using a random sample from a distribution (typically the exponential distribution)." Category="Entity Arrival Logic" DefaultValue="Random.Exponential(.25)" NullString="null" UnitType="Time" DefaultUnits="Minutes">
            <Switch Property="ArrivalMode" Value="Time" />
          </ExpressionProperty>
          <RateTableProperty Name="RateTable" DisplayName="Rate Table" Description="The rate table that defines how the arrival rate changes over time (arrival process is a non-stationary poisson)." Category="Entity Arrival Logic" NullString="null">
            <Switch Property="ArrivalMode" Value="RateTable" />
          </RateTableProperty>
          <ExpressionProperty Name="RateScaleFactor" DisplayName="Rate Scale Factor" Description="The factor used to scale the arrival rate values specified in the rate table." ComplexityLevel="Advanced" Category="Entity Arrival Logic" DefaultValue="1.0" NullString="null">
            <Switch Property="ArrivalMode" Value="RateTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="InitialNumberEntities" DisplayName="Initial Number Entities" Description="An initial number of entities to be created by this Source object at the beginning of the simulation run, in addition to entities created by the 'On Event' arrival mode. Note that this initial entity creation is not included in (counted against) the arrival mode's Maximum Arrivals." Category="Entity Arrival Logic" DefaultValue="0" NullString="null">
            <Switch Property="ArrivalMode" Value="EventCount" />
          </ExpressionProperty>
          <EventProperty Name="TriggeringEventName" DisplayName="Triggering Event Name" Description="The name of the event which determines when the next entity arrival occurs at this Source object." Category="Entity Arrival Logic" NullString="null">
            <Switch Property="ArrivalMode" Value="EventCount" />
          </EventProperty>
          <ExpressionProperty Name="TriggeringEventCount" DisplayName="Triggering Event Count" Description="The number of triggering event occurrences required to trigger the next entity arrival at this Source object." ComplexityLevel="Advanced" Category="Entity Arrival Logic" DefaultValue="1" NullString="null">
            <Switch Property="ArrivalMode" Value="EventCount" />
          </ExpressionProperty>
          <TableAndColumnProperty Name="ArrivalTimeProperty" DisplayName="Arrival Time Property" Description="The name of the numeric table property (i.e., table column) that defines the list of scheduled times when arrival events are expected to occur. The number of arrival event occurrences at each scheduled time is determined by the Arrival Events Per Time Slot property. The number of entities created by each arrival event  (i.e., the arrival 'batch size') is then determined by the Entities Per Arrival property. When an arrival event occurs, a reference to the table row holding the arrival time will be automatically assigned to any individual entities created by the event." Category="Entity Arrival Logic" NullString="null">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </TableAndColumnProperty>
          <ExpressionProperty Name="ArrivalEventsPerTimeSlot" DisplayName="Arrival Events Per Time Slot" Description="The number of arrival events expected to occur at each arrival time specified in the Arrival Time Property. Upon each arrival event occurrence, the number of entities created (i.e., the arrival 'batch size') will be determined by the Entities Per Arrival property. Note that the actual timing of an arrival event may deviate from the expected schedule if the Arrival Time Deviation and Arrival No-Show Probability options are being used." ComplexityLevel="Advanced" Category="Entity Arrival Logic" DefaultValue="1" NullString="null">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="ArrivalTimeDeviation" DisplayName="Arrival Time Deviation" Description="Expression used to model differences (typically random) between the scheduled times in the arrival table and the times during a simulation run that each arrival event actually occurs. This expression may return a negative or positive value. If a negative deviation value is returned, then the actual arrival time will occur earlier than the scheduled time by that duration. If a positive deviation value is returned, then the actual arrival time will occur later than the scheduled time by that duration.  Note that this feature is automatically disabled if random sampling in the simulation run is disabled." ComplexityLevel="Advanced" Category="Entity Arrival Logic" DefaultValue="0.0" NullString="null" UnitType="Time">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="ArrivalNoShowProbability" DisplayName="Arrival No-Show Probability" Description="The probability that a scheduled arrival event in the arrival pattern will be a 'no-show' and thus not actually occur. Enter the chance of a no-show as a value between 0.0 (0%) and 1.0 (100%).  Note that this feature is automatically disabled if random sampling in the simulation run is disabled." ComplexityLevel="Advanced" Category="Entity Arrival Logic" DefaultValue="0.0" NullString="null">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="EntitiesPerArrival" DisplayName="Entities Per Arrival" Description="The number of entities that will be created by this Source object for each arrival event." Category="Entity Arrival Logic" DefaultValue="1" NullString="null" />
          <EnumProperty Name="RepeatArrivalPattern" DisplayName="Repeat Arrival Pattern" Description="Indicates if the pattern of arrival times specified in the Arrival Time Property should be repeated when the end of the pattern is reached." ComplexityLevel="Advanced" Category="Entity Arrival Logic" DefaultValue="False" NullString="null" EnumType="BooleanType">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </EnumProperty>
          <ExpressionProperty Name="MaximumArrivals" DisplayName="Maximum Arrivals" Description="The maximum number of arrivals to be automatically generated by this Source object." Category="Stopping Conditions" DefaultValue="Infinity" NullString="null" />
          <ExpressionProperty Name="MaximumTime" DisplayName="Maximum Time" Description="The maximum time from the beginning of the simulation run after which this Source object will stop generating arrivals." ComplexityLevel="Advanced" Category="Stopping Conditions" DefaultValue="Infinity" NullString="null" UnitType="Time" />
          <EventProperty Name="StopEventName" DisplayName="Stop Event Name" Description="The name of an event which will cause this Source object to stop generating arrivals." ComplexityLevel="Advanced" Category="Stopping Conditions" Required="False" NullString="null" />
          <RepeatingProperty Name="AssignmentsBeforeExiting" DisplayName="Before Exiting" Description="Optional state assignments when an entity is ready to exit this object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsBeforeExitingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsBeforeExitingNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsBeforeExitingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <TableProperty Name="AssignmentBeforeCreatingEntitiesTableName" DisplayName="Table Name" Description="The name of the table to assign a reference to when this Source is about to create an arrival of one or more entities. The table reference may be used for entity creation purposes such as specifying the 'Entity Type' to create from a table. The table reference will also be added to and carried by each created entity." ComplexityLevel="Advanced" Category="Table Reference Assignments/Before Creating Entities" Required="False" NullString="null" />
          <ExpressionProperty Name="AssignmentBeforeCreatingEntitiesTableRow" DisplayName="Row Number" Description="The one-based row index into the table." ComplexityLevel="Advanced" Category="Table Reference Assignments/Before Creating Entities" Required="False" NullString="null" />
          <TableProperty Name="AssignmentOnCreatedEntityTableName" DisplayName="Table Name" Description="The name of the table to assign a reference to after this Source has created an entity. The table reference will be added to and carried by the created entity." ComplexityLevel="Advanced" Category="Table Reference Assignments/On Created Entity" Required="False" NullString="null" />
          <ExpressionProperty Name="AssignmentOnCreatedEntityTableRow" DisplayName="Row Number" Description="The one-based row index into the table." ComplexityLevel="Advanced" Category="Table Reference Assignments/On Created Entity" Required="False" NullString="null" />
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="CreatingEntitiesAddOnProcess" DisplayName="Creating Entities" Description="Occurs when this Source object is about to create an arrival of one or more entities." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="CreatedEntityAddOnProcess" DisplayName="Created Entity" Description="Occurs when an entity has been created by this Source object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when an entity has exited this object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ExpressionProperty Name="CapitalCost" DisplayName="Capital Cost" Description="The initial one-time setup cost to add this object to the system." ComplexityLevel="Advanced" Category="Financials" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="OutputBufferCostPerUse" DisplayName="Cost Per Use" Description="The cost to hold an entity in this buffer irrespective of the waiting time." ComplexityLevel="Advanced" Category="Financials/Buffer Costs/Output Buffer" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="OutputBufferHoldingCostRate" DisplayName="Holding Cost Rate" Description="The cost per unit time to hold an entity in this buffer." ComplexityLevel="Advanced" Category="Financials/Buffer Costs/Output Buffer" DefaultValue="0.0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <Overrides>
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="TransferInConstraintsType" Visible="False" />
            <Override Name="TransferInCondition" Visible="False" />
            <Override Name="TransferOutConstraintsType" DefaultValue="Disable" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="76" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="78" OldPropertyName="EventName" NewPropertyName="TriggeringEventName" />
            <PropertyReplacement Version="78" OldPropertyName="EventCount" NewPropertyName="TriggeringEventCount" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="TransferNode" />
        </UsedObjects>
        <Elements>
          <Element Type="Station" Name="OutputBuffer" Scope="Public" Description="The station location inside this Source object where entities wait to exit the object after being created.">
            <Properties>
              <Property Name="CostPerUse" Units="USD">OutputBufferCostPerUse</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">OutputBufferHoldingCostRate</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="EntityArrivals" Scope="Public" Description="The stream of entity arrival events for this Source object.">
            <Properties>
              <Property Name="IntervalType">ArrivalMode</Property>
              <Property Name="TimeOffset">TimeOffset</Property>
              <Property Name="TimeInterval">InterarrivalTime</Property>
              <Property Name="RateTable">RateTable</Property>
              <Property Name="RateScaleFactor">RateScaleFactor</Property>
              <Property Name="TriggeringEventName">TriggeringEventName</Property>
              <Property Name="TriggeringEventCount">TriggeringEventCount</Property>
              <Property Name="ArrivalTimeProperty">ArrivalTimeProperty</Property>
              <Property Name="ArrivalEventsPerTimeSlot">ArrivalEventsPerTimeSlot</Property>
              <Property Name="ArrivalTimeDeviation">ArrivalTimeDeviation</Property>
              <Property Name="ArrivalNoShowProbability">ArrivalNoShowProbability</Property>
              <Property Name="RepeatArrivalPattern">RepeatArrivalPattern</Property>
              <Property Name="MaximumEvents">MaximumArrivals</Property>
              <Property Name="MaximumTime">MaximumTime</Property>
            </Properties>
          </Element>
          <Element Type="CostCenter" Name="CapitalCosts">
            <Properties>
              <Property Name="InitialCost" Units="USD">CapitalCost</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DataSource">[Object]</Property>
              <Property Name="DataItem">"CapitalCost"</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Subscribe" Name="ToStopEvent" ExclusionExpression="!StopEventName.HasValue" ID="2">
                <Properties>
                  <Property Name="EventName">StopEventName</Property>
                  <Property Name="ProcessName">OnStopEventOccurred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="SetRow" Name="BeforeCreatingEntities" ExclusionExpression="(ArrivalMode != Enum.TimerIntervalType.EventCount) || (InitialNumberEntities == 0) || !AssignmentBeforeCreatingEntitiesTableName.HasValue" ID="4">
                <Properties>
                  <Property Name="ObjectType">Token</Property>
                  <Property Name="TableName">AssignmentBeforeCreatingEntitiesTableName</Property>
                  <Property Name="RowNumber">AssignmentBeforeCreatingEntitiesTableRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="CreatingEntities_AddOnProcess" ExclusionExpression="(ArrivalMode != Enum.TimerIntervalType.EventCount) || (InitialNumberEntities == 0)" ID="5">
                <Properties>
                  <Property Name="ProcessName">CreatingEntitiesAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Create" Name="InitialNumberEntities" ExclusionExpression="(ArrivalMode != Enum.TimerIntervalType.EventCount) || (InitialNumberEntities == 0)" ID="6">
                <Properties>
                  <Property Name="ObjectInstanceName">EntityType</Property>
                  <Property Name="NumberOfObjects">InitialNumberEntities</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Transfer" Name="ToOutputBuffer" ExclusionExpression="(ArrivalMode != Enum.TimerIntervalType.EventCount) || (InitialNumberEntities == 0)" ID="7">
                <Properties>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">OutputBuffer</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntityArrival" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">EntityArrivals.Event</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="SetRow" Name="BeforeCreatingEntities" ExclusionExpression="!AssignmentBeforeCreatingEntitiesTableName.HasValue" ID="2">
                <Properties>
                  <Property Name="ObjectType">Token</Property>
                  <Property Name="TableName">AssignmentBeforeCreatingEntitiesTableName</Property>
                  <Property Name="RowNumber">AssignmentBeforeCreatingEntitiesTableRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="CreatingEntities_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">CreatingEntitiesAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Create" Name="EntitiesPerArrival" ID="4">
                <Properties>
                  <Property Name="ObjectInstanceName">EntityType</Property>
                  <Property Name="NumberOfObjects">EntitiesPerArrival</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToOutputBuffer" ID="5">
                <Properties>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">OutputBuffer</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnStopEventOccurred" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToDisableEntityArrivals" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>EntityArrivals.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredOutputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">OutputBuffer.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="EndTransfer" Name="IntoOutputBuffer" ID="2">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="SetRow" Name="OnCreatedEntity" ExclusionExpression="!AssignmentOnCreatedEntityTableName.HasValue" ID="3">
                <Properties>
                  <Property Name="TableName">AssignmentOnCreatedEntityTableName</Property>
                  <Property Name="RowNumber">AssignmentOnCreatedEntityTableRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="CreatedEntity_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">CreatedEntityAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ID="5">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToOutputNode" ID="6">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">Output</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExitedOutputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">OutputBuffer.Exited</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="Exited_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">ExitedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <TransferPoints>
            <ExternalNode Name="Output" Location="1.5,0,0" ID="Output">
              <Properties>
                <Property Name="NodeClassName">TransferNode</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="4253805c-d9dd-447f-b808-dc61ab3765de" />
            </SymbolInstance>
            <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="1 0 0.5" />
                <Point Location="4 0 0.5" />
              </Points>
            </Queue>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
        <Dashboard>
          <Graphics>
            <StatusLabel Center="-5 0 0" Width="10" Height="1" ExternallyVisible="True" BackColor="00ffffff" TextColor="0000ff" Expression="&quot;OutputBuffer&quot;" />
            <StatusLabel Center="1.875 0 0" Width="3.75" Height="1" ExternallyVisible="True" Expression="OutputBuffer.Contents" />
          </Graphics>
        </Dashboard>
      </FixedDefinition>
      <FixedDefinition Name="Tank" Id="33612660-55ee-45bf-ad65-85b5124c9c04" Revision="12" Author="Sales and Support" Description="The Tank object may be used to model a volume or weight capacity constrained location for holding flow entities representing quantities of fluids or other mass.&#xD;&#xA;&#xD;&#xA;The flow rate into the Tank is regulated by its 'Input' flow node. The flow rate out of the Tank is regulated by its 'Output' flow node." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="7">Version 4.79: Tank level statistics now cleared after transferring initial contents into the tank.</ChangeDescription>
          <ChangeDescription Version="10">Version 4.83: Added new 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="11">Version 4.88: Process logic now uses new property 'HasValue' function to determine whether 'Initial Contents' have been specified for the tank.</ChangeDescription>
          <ChangeDescription Version="12">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <Lists>
          <StringList Name="TankAutoRefillMode">
            <Items>
              <Item Value="NoAutomaticRefills" />
              <Item Value="RefillWhenEmpty" />
              <Item Value="RefillWhenLow" />
              <Item Value="RefillWhenSpecificEvent" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Flow Storage Logic" Description="Flow Storage Logic" />
            <Category Name="Tank Level Marks" Description="Tank Level Marks" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="State Assignments/On Tank Level Rising" Description="State Assignment Logic On Tank Level Rising" InitiallyExpanded="False" />
            <Category Name="State Assignments/On Tank Level Falling" Description="State Assignment Logic On Tank Level Falling" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers/Tank Level Rising" Description="Add-On Process Triggers/Tank Level Rising" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers/Tank Level Falling" Description="Add-On Process Triggers/Tank Level Falling" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <EnumProperty Name="CapacityUnitType" DisplayName="Capacity Unit Type" Description="The unit type to be used for specifying the tank's physical capacity." Category="Flow Storage Logic" DefaultValue="Volume" NullString="null" EnumType="FlowContentUnitType" />
          <ExpressionProperty Name="InitialVolumeCapacity" DisplayName="Initial Volume Capacity" Description="The initial maximum physical volume that can be stored in this tank." Category="Flow Storage Logic" DefaultValue="15.0" NullString="null" UnitType="Volume">
            <Switch Property="CapacityUnitType" Value="6" />
          </ExpressionProperty>
          <ExpressionProperty Name="InitialWeightCapacity" DisplayName="Initial Weight Capacity" Description="The initial maximum physical weight that can be stored in this tank." Category="Flow Storage Logic" DefaultValue="15.0" NullString="null" UnitType="Weight">
            <Switch Property="CapacityUnitType" Value="7" />
          </ExpressionProperty>
          <RepeatingProperty Name="InitialContents" DisplayName="Initial Contents" Description="The initial contents present in the tank at the start of the simulation run. " Category="Flow Storage Logic" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Initial Content" Description="Initial Content" />
              </Categories>
              <DynamicObjectInstanceProperty Name="InitialContentEntityType" DisplayName="Entity Type" Description="The initial content entity type." Category="Initial Content" NullString="null" ValidObjectType="Agent" />
              <EnumProperty Name="InitialContentUnitType" DisplayName="Unit Type" Description="The unit type to be used for specifying the initial content quantity." Category="Initial Content" DefaultValue="Volume" NullString="null" EnumType="FlowContentUnitType" />
              <ExpressionProperty Name="InitialContentQuantity" DisplayName="Quantity" Description="The initial content quantity." Category="Initial Content" DefaultValue="1.0" NullString="null" UnitTypeProperty="InitialContentUnitType" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ListProperty Name="AutoRefillMode" DisplayName="Auto Refill Mode" Description="Indicates whether the tank has automatic refills and, if so, whether a refill is triggered when the tank becomes empty, when its contents level has fallen below the 'Low' mark, or when some other specified triggering event occurs. &#xD;&#xA;&#xD;&#xA;The tank will be refilled to the maximum level determined by its physical volume or weight capacity." ComplexityLevel="Advanced" Category="Flow Storage Logic" DefaultValue="No Automatic Refills" NullString="null" List="TankAutoRefillMode">
            <Captions>
              <Caption Value="NoAutomaticRefills" Display="No Automatic Refills" />
              <Caption Value="RefillWhenEmpty" Display="Refill When Empty" />
              <Caption Value="RefillWhenLow" Display="Refill When Low" />
              <Caption Value="RefillWhenSpecificEvent" Display="Refill When Specific Event" />
            </Captions>
          </ListProperty>
          <EventProperty Name="RefillTriggeringEventName" DisplayName="Refill Triggering Event Name" Description="The name of the event that will indicate when the tank is to be refilled." ComplexityLevel="Advanced" Parent="AutoRefillMode" NullString="null">
            <Switch Property="AutoRefillMode" Value="RefillWhenSpecificEvent" />
          </EventProperty>
          <ExpressionProperty Name="DelayTimeUntilRefill" DisplayName="Delay Time Until Refill" Description="The delay time after a refill triggering event before the refill action is actually performed." ComplexityLevel="Advanced" DefaultValue="0.0" Parent="AutoRefillMode" NullString="null" UnitType="Time">
            <Switch Property="AutoRefillMode" Comparison="NotEqual" Value="NoAutomaticRefills" />
          </ExpressionProperty>
          <DynamicObjectInstanceProperty Name="RefillEntityType" DisplayName="Refill Entity Type" Description="The entity type that the tank will be refilled with." ComplexityLevel="Advanced" Parent="AutoRefillMode" NullString="null" ValidObjectType="Agent">
            <Switch Property="AutoRefillMode" Comparison="NotEqual" Value="NoAutomaticRefills" />
          </DynamicObjectInstanceProperty>
          <ExpressionProperty Name="TankLevelLowMark" DisplayName="Low Mark" Description="The contents level value to be used as the tank's 'Low' mark." ComplexityLevel="Advanced" Category="Tank Level Marks" DefaultValue="0.0" NullString="null" UnitTypeProperty="CapacityUnitType" />
          <ExpressionProperty Name="TankLevelMidMark" DisplayName="Mid Mark" Description="The contents level value to be used as the tank's 'Mid' mark." ComplexityLevel="Advanced" Category="Tank Level Marks" DefaultValue="0.0" NullString="null" UnitTypeProperty="CapacityUnitType" />
          <ExpressionProperty Name="TankLevelHighMark" DisplayName="High Mark" Description="The contents level value to be used as the tank's 'High' mark." ComplexityLevel="Advanced" Category="Tank Level Marks" DefaultValue="0.0" NullString="null" UnitTypeProperty="CapacityUnitType" />
          <RepeatingProperty Name="AssignmentsOnTankLevelRisingAboveLowMark" DisplayName="Above Low Mark" Description="Optional state assignments when the contents level of the tank is rising above the tank's 'Low' mark." ComplexityLevel="Advanced" Category="State Assignments/On Tank Level Rising" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnTankLevelRisingAboveLowMarkStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnTankLevelRisingAboveLowMarkNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnTankLevelRisingAboveLowMarkStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnTankLevelRisingAboveMidMark" DisplayName="Above Mid Mark" Description="Optional state assignments when the contents level of the tank is rising above the tank's 'Mid' mark." ComplexityLevel="Advanced" Category="State Assignments/On Tank Level Rising" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnTankLevelRisingAboveMidMarkStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnTankLevelRisingAboveMidMarkNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnTankLevelRisingAboveMidMarkStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnTankLevelRisingAboveHighMark" DisplayName="Above High Mark" Description="Optional state assignments when the contents level of the tank is rising above the tank's 'High' mark." ComplexityLevel="Advanced" Category="State Assignments/On Tank Level Rising" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnTankLevelRisingAboveHighMarkStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnTankLevelRisingAboveHighMarkNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnTankLevelRisingAboveHighMarkStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnTankFull" DisplayName="Tank Full" Description="Optional state assignments when the contents level of the tank has reached the tank's maximum volume or weight capacity." ComplexityLevel="Advanced" Category="State Assignments/On Tank Level Rising" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnTankFullStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnTankFullNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnTankFullStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnTankLevelFallingBelowHighMark" DisplayName="Below High Mark" Description="Optional state assignments when the contents level of the tank is falling below the tank's 'High' mark." ComplexityLevel="Advanced" Category="State Assignments/On Tank Level Falling" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnTankLevelFallingBelowHighMarkStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnTankLevelFallingBelowHighMarkNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnTankLevelFallingBelowHighMarkStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnTankLevelFallingBelowMidMark" DisplayName="Below Mid Mark" Description="Optional state assignments when the contents level of the tank is falling below the tank's 'Mid' mark." ComplexityLevel="Advanced" Category="State Assignments/On Tank Level Falling" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnTankLevelFallingBelowMidMarkStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnTankLevelFallingBelowMidMarkNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnTankLevelFallingBelowMidMarkStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnTankLevelFallingBelowLowMark" DisplayName="Below Low Mark" Description="Optional state assignments when the contents level of the tank is falling below the tank's 'Low' mark." ComplexityLevel="Advanced" Category="State Assignments/On Tank Level Falling" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnTankLevelFallingBelowLowMarkStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnTankLevelFallingBelowLowMarkNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnTankLevelFallingBelowLowMarkStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnTankEmpty" DisplayName="Tank Empty" Description="Optional state assignments when the contents level of the tank has fallen to zero and the tank has thus become empty." ComplexityLevel="Advanced" Category="State Assignments/On Tank Level Falling" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnTankEmptyStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnTankEmptyNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnTankEmptyStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TankLevelRisingAboveLowMarkAddOnProcess" DisplayName="Above Low Mark" Description="Occurs when the contents level of the tank is rising above the tank's 'Low' mark." ComplexityLevel="Advanced" Category="Add-On Process Triggers/Tank Level Rising" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TankLevelRisingAboveMidMarkAddOnProcess" DisplayName="Above Mid Mark" Description="Occurs when the contents level of the tank is rising above the tank's 'Mid' mark." ComplexityLevel="Advanced" Category="Add-On Process Triggers/Tank Level Rising" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TankLevelRisingAboveHighMarkAddOnProcess" DisplayName="Above High Mark" Description="Occurs when the contents level of the tank is rising above the tank's 'High' mark." ComplexityLevel="Advanced" Category="Add-On Process Triggers/Tank Level Rising" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TankFullAddOnProcess" DisplayName="Tank Full" Description="Occurs when the contents level of the tank has reached the tank's maximum volume or weight capacity." ComplexityLevel="Advanced" Category="Add-On Process Triggers/Tank Level Rising" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TankLevelFallingBelowHighMarkAddOnProcess" DisplayName="Below High Mark" Description="Occurs when the contents level of the tank is falling below the tank's 'High' mark." ComplexityLevel="Advanced" Category="Add-On Process Triggers/Tank Level Falling" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TankLevelFallingBelowMidMarkAddOnProcess" DisplayName="Below Mid Mark" Description="Occurs when the contents level of the tank is falling below the tank's 'Mid' mark." ComplexityLevel="Advanced" Category="Add-On Process Triggers/Tank Level Falling" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TankLevelFallingBelowLowMarkAddOnProcess" DisplayName="Below Low Mark" Description="Occurs when the contents level of the tank is falling below the tank's 'Low' mark." ComplexityLevel="Advanced" Category="Add-On Process Triggers/Tank Level Falling" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TankEmptyAddOnProcess" DisplayName="Tank Empty" Description="Occurs when the contents level of the tank has fallen to zero and the tank has thus become empty." ComplexityLevel="Advanced" Category="Add-On Process Triggers/Tank Level Falling" Required="False" NullString="null" Type="Process" />
          <EnumProperty Name="ContentsRankingRule" DisplayName="Contents Ranking Rule" Description="The static rule used to rank flow entities located in this tank's 'FlowContainer.Contents' queue." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="First In First Out" NullString="null" EnumType="QueueRanking">
            <Captions>
              <Caption Value="FirstInFirstOut" Display="First In First Out" />
              <Caption Value="LastInFirstOut" Display="Last In First Out" />
              <Caption Value="SmallestValueFirst" Display="Smallest Value First" />
              <Caption Value="LargestValueFirst" Display="Largest Value First" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="ContentsRankingExpression" DisplayName="Contents Ranking Expression" Description="The expression used with a 'SmallestValueFirst' or 'LargestValueFirst' ranking rule." ComplexityLevel="Advanced" DefaultValue="Entity.Priority" Required="False" Parent="ContentsRankingRule" NullString="null">
            <Switch Property="ContentsRankingRule" Comparison="GreaterThan" Value="LastInFirstOut" />
          </ExpressionProperty>
          <Overrides>
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="TransferInConstraintsType" Visible="False" />
            <Override Name="TransferInCondition" Visible="False" />
            <Override Name="TransferOutConstraintsType" Visible="False" DefaultValue="Disable" />
            <Override Name="TransferOutCondition" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events>
          <Event Name="TankFull" Description="The TankFull event provides notification that the contents level of the tank has reached the tank's maximum volume or weight capacity." />
          <Event Name="TankEmpty" Description="The TankEmpty event provides notification that the contents level of the tank has fallen to zero and the tank has thus become empty." />
        </Events>
        <UsedObjects>
          <UsedObject Name="FlowNode" />
        </UsedObjects>
        <Elements>
          <Element Type="Container" Name="FlowContainer" Scope="Public" Description="The container element used by the Tank object to store entity flow.">
            <Properties>
              <Property Name="InitialVolumeCapacity">Math.If(CapacityUnitType==Enum.FlowContentUnitType.Volume, InitialVolumeCapacity, Infinity)</Property>
              <Property Name="InitialWeightCapacity">Math.If(CapacityUnitType==Enum.FlowContentUnitType.Weight, InitialWeightCapacity, Infinity)</Property>
              <Property Name="ContentsRankingRule">ContentsRankingRule</Property>
              <Property Name="ContentsRankingExpression">ContentsRankingExpression</Property>
              <Property Name="OnFullProcess">OnFlowContainerFull</Property>
              <Property Name="OnEmptyProcess">OnFlowContainerEmpty</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="VolumeLevelRisingAboveLowMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelLowMark</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelRisingAboveLowMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="WeightLevelRisingAboveLowMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelLowMark</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelRisingAboveLowMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="VolumeLevelRisingAboveMidMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelMidMark</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelRisingAboveMidMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="WeightLevelRisingAboveMidMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelMidMark</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelRisingAboveMidMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="VolumeLevelRisingAboveHighMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelHighMark</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelRisingAboveHighMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="WeightLevelRisingAboveHighMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelHighMark</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelRisingAboveHighMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="VolumeLevelFallingBelowLowMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelLowMark</Property>
              <Property Name="CrossingDirection">Negative</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelFallingBelowLowMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="WeightLevelFallingBelowLowMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelLowMark</Property>
              <Property Name="CrossingDirection">Negative</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelFallingBelowLowMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="VolumeLevelFallingBelowMidMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelMidMark</Property>
              <Property Name="CrossingDirection">Negative</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelFallingBelowMidMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="WeightLevelFallingBelowMidMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelMidMark</Property>
              <Property Name="CrossingDirection">Negative</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelFallingBelowMidMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="VolumeLevelFallingBelowHighMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelHighMark</Property>
              <Property Name="CrossingDirection">Negative</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelFallingBelowHighMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="WeightLevelFallingBelowHighMark">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">TankLevelHighMark</Property>
              <Property Name="CrossingDirection">Negative</Property>
              <Property Name="TriggeredProcessName">OnFlowContainerLevelFallingBelowHighMark</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="StateStatistic" Name="VolumeLevelStateStatistic">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Volume</Value>
              </Property>
              <Property Name="DataSource">FlowContainer</Property>
              <Property Name="Category">Content</Property>
              <Property Name="DataItem">VolumeLevel</Property>
            </Properties>
          </Element>
          <Element Type="StateStatistic" Name="WeightLevelStateStatistic">
            <Properties>
              <Property Name="StateVariableName">
                <Value>FlowContainer.Contents.Weight</Value>
              </Property>
              <Property Name="DataSource">FlowContainer</Property>
              <Property Name="Category">Content</Property>
              <Property Name="DataItem">WeightLevel</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="ToDisableTankLevelMonitoring" ExclusionExpression="!InitialContents.HasValue" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnFlowContainerFull.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Search" Name="InitialContentsData" ExclusionExpression="!InitialContents.HasValue" ID="4">
                <Properties>
                  <Property Name="CollectionType">TableRows</Property>
                  <Property Name="TableName">InitialContents</Property>
                  <Property Name="Limit">Infinity</Property>
                </Properties>
                <Exit Name="Original" Type="Primary" NextID="10" />
                <Exit Name="Found" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Create" Name="InitialContent" ID="5">
                <Properties>
                  <Property Name="ObjectInstanceName">InitialContents.InitialContentEntityType</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="InitialContentUnitType" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">InitialContents.InitialContentUnitType==Enum.FlowContentUnitType.Volume</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Assign" Name="InitialContentWeight" ID="7">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Weight</Value>
                  </Property>
                  <Property Name="NewValue">InitialContents.InitialContentQuantity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Assign" Name="InitialContentVolume" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Volume</Value>
                  </Property>
                  <Property Name="NewValue">InitialContents.InitialContentQuantity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Transfer" Name="ToFlowContainer" ID="9">
                <Properties>
                  <Property Name="ToType">Container</Property>
                  <Property Name="ContainerName">FlowContainer</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="ToEnableTankLevelMonitoring" ExclusionExpression="!InitialContents.HasValue" ID="10">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnFlowContainerFull.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Assign" Name="ToEnableTankLevelMonitoring" ExclusionExpression="CapacityUnitType==Enum.FlowContentUnitType.Weight" ID="11">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>VolumeLevelRisingAboveLowMark.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>VolumeLevelRisingAboveMidMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>VolumeLevelRisingAboveHighMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>VolumeLevelFallingBelowLowMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>VolumeLevelFallingBelowMidMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>VolumeLevelFallingBelowHighMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Assign" Name="ToEnableTankLevelMonitoring" ExclusionExpression="CapacityUnitType==Enum.FlowContentUnitType.Volume" ID="12">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>WeightLevelRisingAboveLowMark.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>WeightLevelRisingAboveMidMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>WeightLevelRisingAboveHighMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>WeightLevelFallingBelowLowMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>WeightLevelFallingBelowMidMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>WeightLevelFallingBelowHighMark.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Subscribe" Name="ToTankEmptyEvent" ExclusionExpression="AutoRefillMode!=List.TankAutoRefillMode.RefillWhenEmpty" ID="13">
                <Properties>
                  <Property Name="EventName">TankEmpty</Property>
                  <Property Name="ProcessName">AutomaticRefillLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Subscribe" Name="ToTankLevelFallingBelowLowMarkEvent" ExclusionExpression="(AutoRefillMode!=List.TankAutoRefillMode.RefillWhenLow)||(CapacityUnitType==Enum.FlowContentUnitType.Weight)" ID="14">
                <Properties>
                  <Property Name="EventName">VolumeLevelFallingBelowLowMark.Event</Property>
                  <Property Name="ProcessName">AutomaticRefillLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Subscribe" Name="ToTankLevelFallingBelowLowMarkEvent" ExclusionExpression="(AutoRefillMode!=List.TankAutoRefillMode.RefillWhenLow)||(CapacityUnitType==Enum.FlowContentUnitType.Volume)" ID="15">
                <Properties>
                  <Property Name="EventName">WeightLevelFallingBelowLowMark.Event</Property>
                  <Property Name="ProcessName">AutomaticRefillLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="16" />
              </Step>
              <Step Type="Subscribe" Name="ToRefillTriggeringEvent" ExclusionExpression="AutoRefillMode!=List.TankAutoRefillMode.RefillWhenSpecificEvent" ID="16">
                <Properties>
                  <Property Name="EventName">RefillTriggeringEventName</Property>
                  <Property Name="ProcessName">AutomaticRefillLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="17" />
              </Step>
              <Step Type="ClearStatistics" Name="TankLevelStatistics" ExclusionExpression="!InitialContents.HasValue" ID="17">
                <Properties>
                  <Property Name="ClearStatisticsType">ClearSpecific</Property>
                  <Property Name="ObjectsOrElements">
                    <Rows>
                      <Properties>
                        <Property Name="RepeatingObjectOrElement">VolumeLevelStateStatistic</Property>
                      </Properties>
                      <Properties>
                        <Property Name="RepeatingObjectOrElement">WeightLevelStateStatistic</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="AutomaticRefillLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Delay" Name="TimeUntilRefill" ID="2">
                <Properties>
                  <Property Name="DelayTime">DelayTimeUntilRefill</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Create" Name="RefillContent" ID="3">
                <Properties>
                  <Property Name="ObjectInstanceName">RefillEntityType</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="RefillUnitType" ExclusionExpression="Math.If(CapacityUnitType==Enum.FlowContentUnitType.Volume, 1, 2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">CapacityUnitType==Enum.FlowContentUnitType.Volume</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Assign" Name="RefillWeight" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Weight</Value>
                  </Property>
                  <Property Name="NewValue">Math.Max(0.0, FlowContainer.CurrentWeightCapacity - FlowContainer.Contents.Weight)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Assign" Name="RefillVolume" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Volume</Value>
                  </Property>
                  <Property Name="NewValue">Math.Max(0.0, FlowContainer.CurrentVolumeCapacity - FlowContainer.Contents.Volume)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Transfer" Name="ToFlowContainer" ID="7">
                <Properties>
                  <Property Name="ToType">Container</Property>
                  <Property Name="ContainerName">FlowContainer</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredFlowContainer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">FlowContainer.Entered</Property>
            </Properties>
            <Steps>
              <Step Type="Transfer" Name="ToOutputNode" ID="2">
                <Properties>
                  <Property Name="FromType">CurrentContainer</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">Output</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerLevelRisingAboveLowMark" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnTankLevelRisingAboveLowMarkAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnTankLevelRisingAboveLowMark</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnTankLevelRisingAboveLowMarkStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnTankLevelRisingAboveLowMarkNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="TankLevelRisingAboveLowMark_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">TankLevelRisingAboveLowMarkAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerLevelRisingAboveMidMark" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnTankLevelRisingAboveMidMarkAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnTankLevelRisingAboveMidMark</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnTankLevelRisingAboveMidMarkStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnTankLevelRisingAboveMidMarkNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="TankLevelRisingAboveMidMark_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">TankLevelRisingAboveMidMarkAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerLevelRisingAboveHighMark" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnTankLevelRisingAboveHighMarkAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnTankLevelRisingAboveHighMark</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnTankLevelRisingAboveHighMarkStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnTankLevelRisingAboveHighMarkNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="TankLevelRisingAboveHighMark_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">TankLevelRisingAboveHighMarkAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerFull" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="TankFullEvent" ID="2">
                <Properties>
                  <Property Name="EventName">TankFull</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnTankFullAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnTankFull</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnTankFullStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnTankFullNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="TankFull_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">TankFullAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerLevelFallingBelowHighMark" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnTankLevelFallingBelowHighMarkAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnTankLevelFallingBelowHighMark</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnTankLevelFallingBelowHighMarkStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnTankLevelFallingBelowHighMarkNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="TankLevelFallingBelowHighMark_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">TankLevelFallingBelowHighMarkAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerLevelFallingBelowMidMark" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnTankLevelFallingBelowMidMarkAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnTankLevelFallingBelowMidMark</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnTankLevelFallingBelowMidMarkStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnTankLevelFallingBelowMidMarkNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="TankLevelFallingBelowMidMark_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">TankLevelFallingBelowMidMarkAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerLevelFallingBelowLowMark" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnTankLevelFallingBelowLowMarkAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnTankLevelFallingBelowLowMark</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnTankLevelFallingBelowLowMarkStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnTankLevelFallingBelowLowMarkNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="TankLevelFallingBelowLowMark_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">TankLevelFallingBelowLowMarkAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFlowContainerEmpty" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="TankEmptyEvent" ID="2">
                <Properties>
                  <Property Name="EventName">TankEmpty</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnTankEmptyAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnTankEmpty</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnTankEmptyStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnTankEmptyNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="TankEmpty_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">TankEmptyAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <TransferPoints>
            <ExternalNode Name="Input" Location="-1,0,0" ID="{4558A650-034F-4FE7-B9F3-4BD8D3153119}">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
                <Property Name="InputLocationType">Container</Property>
                <Property Name="ContainerName">FlowContainer</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="FlowControlPropertyDisplay" Value="Input Only" />
                <InitialValue Name="InputFlowControlMode" Value="Merge Flow" />
              </InitialValues>
            </ExternalNode>
            <ExternalNode Name="Output" Location="1,0,0" ID="{BE79F91B-DE32-4EBB-9445-F21E552ABE37}">
              <Properties>
                <Property Name="NodeClassName">FlowNode</Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="FlowControlPropertyDisplay" Value="Output Only" />
                <InitialValue Name="OutputFlowControlMode" Value="Split Flow" />
              </InitialValues>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="b94b2a59-c20d-43bc-8176-f020511438d0" />
            </SymbolInstance>
            <StackedBar Center="0 0 -2" Width="3" Height="3" ExternallyVisible="True" Shape="1" FloorDisplayType="2" Type="Container" Container="FlowContainer" />
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
      <TransporterDefinition Name="Tanker" Id="437e2e62-e8a1-4229-98a0-94acdcedfc2f" Revision="27" BaseClass="Vehicle" Author="Sales and Support" Description="A Tanker is used to carry flow materials from one node location to another.   Flow materials are transferred to and from the Tanker at a Dock." CheckBaseForAdvancedProperties="True">
        <Lists />
        <PropertyDefinitions>
          <Categories>
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Resource Logic" Description="Resource Logic" InitiallyExpanded="False" />
            <Category Name="Reliability Logic" Description="Reliability Logic" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="VolumeCapacity" DisplayName="Volume Capacity" Category="Transport Logic" DefaultValue="1" NullString="null" UnitType="Volume" />
          <ExpressionProperty Name="WeightCapacity" DisplayName="Weight Capacity" Category="Transport Logic" DefaultValue="Infinity" NullString="null" UnitType="Weight" />
          <Overrides />
        </PropertyDefinitions>
        <States />
        <Events>
          <Event Name="FillCompleted" />
        </Events>
        <UsedObjects>
          <UsedObject Name="Dock" />
        </UsedObjects>
        <Elements>
          <Element Type="Monitor" Name="VolumeFill" Scope="Public">
            <Properties>
              <Property Name="StateVariableName">
                <Value>RideStation.Contents.Volume</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">VolumeCapacity</Property>
              <Property Name="TriggeredProcessName">VolumeFillComplete</Property>
            </Properties>
          </Element>
          <Element Type="Monitor" Name="WeightFill" Scope="Public">
            <Properties>
              <Property Name="StateVariableName">
                <Value>RideStation.Contents.Weight</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">WeightCapacity</Property>
              <Property Name="TriggeredProcessName">WeightFillComplete</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnVisitingNode" IsOverride="True" InterfaceProcessID="Entity.OnVisitingNode" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="EnteredNode_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">EnteredNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfNotVisitingNode" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(IgnoreVisitingCurrentNode, True, ResourceState==List.ResourceStateName.Idle, False, ResourceState==List.ResourceStateName.OffShift, ((OffShiftAction==List.VehicleOffShiftAction.GoToHome)||(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome))&amp;&amp;(HomeNode!=Nothing)&amp;&amp;(DestinationNode==HomeNode)&amp;&amp;(CurrentNode!=HomeNode),(DestinationNode!=Nothing)&amp;&amp;(CurrentNode!=DestinationNode), True, False)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="35" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfBusy" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Busy)||(ResourceState==List.ResourceStateName.OffShiftBusy)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="27" />
                <Exit Name="False" Type="Alternate" NextID="30" />
              </Step>
              <Step Type="Arrive" Name="AtDestination" ID="5">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="37" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="6">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Dropoff" Name="Rider" ID="8">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="UnloadTime">UnloadTime</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="9" />
                <Exit Name="Failed" Type="Alternate" NextID="60" />
              </Step>
              <Step Type="Wait" Name="UntilRiderUnloaded" ExclusionExpression="!UnloadedAddOnProcess.HasValue" ID="9">
                <Properties>
                  <Property Name="EventName">RiderUnloaded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Pickup" Name="Rider" ID="10">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                  <Property Name="LoadTime">LoadTime</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="11" />
                <Exit Name="Failed" Type="Alternate" NextID="58" />
              </Step>
              <Step Type="Wait" Name="UntilRiderLoaded" ID="11">
                <Properties>
                  <Property Name="EventName">RiderLoaded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="55" />
              </Step>
              <Step Type="Decide" Name="IfFixedRouting" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.FixedRoute,1,2)" ID="12">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RoutingType==List.VehicleRoutingType.FixedRoute</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="44" />
                <Exit Name="False" Type="Alternate" NextID="14" />
              </Step>
              <Step Type="SetNode" Name="ToNextSequenceDestination" ID="13">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationType">BySequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="35" />
              </Step>
              <Step Type="SelectDropoff" Name="NextTransportDropoff" ID="14">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="35" />
                <Exit Name="Failed" Type="Alternate" NextID="15" />
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="15">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="35" />
                <Exit Name="Failed" Type="Alternate" NextID="16" />
              </Step>
              <Step Type="Release" Name="Vehicle" ID="16">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">SeizedResources.CapacityOwnedOf(ParentObject)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="PlanVisit" Name="NewTransportRequests" ID="17">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="17" />
                <Exit Name="Failed" Type="Alternate" NextID="18" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="18">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="19" />
                <Exit Name="False" Type="Alternate" NextID="35" />
              </Step>
              <Step Type="Decide" Name="IfParking" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.ParkAtNode,1,IdleAction!=List.VehicleIdleAction.ParkAtHome,2,0)" ID="19">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode==CurrentNode)||(HomeNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="34" />
                <Exit Name="False" Type="Alternate" NextID="20" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.ParkAtHome,1,IdleAction!=List.VehicleIdleAction.GoToHome,2,0)" ID="20">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode!=Nothing)&amp;&amp;(HomeNode!=CurrentNode)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="21" />
              </Step>
              <Step Type="Decide" Name="IfRoaming" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.Roam,1,2)" ID="21">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IdleAction==List.VehicleIdleAction.Roam</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="35" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="SetNode" Name="ToHome" ID="22">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">HomeNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="35" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="23">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="38" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="24">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="25">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="17" />
                <Exit Name="False" Type="Alternate" NextID="41" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="26">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Decide" Name="IfParked" ExclusionExpression="!ParkWhileBusy" ID="27">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="28" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="28">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="29" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="29">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfLoadingUnloading" ID="30">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(ResourceState==List.ResourceStateName.OffShift, False, (ResourceState==List.ResourceStateName.Transporting)||(ResourceState==List.ResourceStateName.OffShiftTransporting), True, Node.RidePickupQueue.NumberWaiting&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="46" />
                <Exit Name="False" Type="Alternate" NextID="25" />
              </Step>
              <Step Type="Decide" Name="IfParked" ExclusionExpression="!ParkToLoadUnload" ID="31">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="56" />
                <Exit Name="False" Type="Alternate" NextID="32" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="32">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="33" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="33">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="56" />
              </Step>
              <Step Type="Decide" Name="IfParked" ID="34">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="24" />
                <Exit Name="False" Type="Alternate" NextID="26" />
              </Step>
              <Step Type="Decide" Name="IfParked" ID="35">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="39" />
                <Exit Name="False" Type="Alternate" NextID="40" />
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="36">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="37">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="3" />
                <Exit Name="Failed" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfIdleOrOffShift" ID="38">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Idle)||(ResourceState==List.ResourceStateName.OffShift)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="24" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="IgnoreVisitingCurrentNodeFlag" ID="39">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>IgnoreVisitingCurrentNode</Value>
                  </Property>
                  <Property Name="NewValue">CurrentNode!=DestinationNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="36" />
              </Step>
              <Step Type="Assign" Name="IgnoreVisitingCurrentNodeFlag" ID="40">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>IgnoreVisitingCurrentNode</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="41">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="42" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfParking" ExclusionExpression="Math.If(OffShiftAction==List.VehicleOffShiftAction.ParkAtNode,1,OffShiftAction!=List.VehicleOffShiftAction.ParkAtHome,2,0)" ID="42">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode==CurrentNode)||(HomeNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="34" />
                <Exit Name="False" Type="Alternate" NextID="43" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ExclusionExpression="Math.If(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome,1,OffShiftAction!=List.VehicleOffShiftAction.GoToHome,2,0)" ID="43">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode!=Nothing)&amp;&amp;(HomeNode!=CurrentNode)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="Release" Name="Vehicle" ID="44">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">(ResourceState==List.ResourceStateName.OffShiftTransporting)&amp;&amp;(RideStation.Contents==0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="45" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="45">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="42" />
                <Exit Name="False" Type="Alternate" NextID="54" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ExclusionExpression="MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement" ID="46">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="47" />
              </Step>
              <Step Type="Fire" Name="MinimumDwellTimeExpirationResetEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.SpecificTime" ID="47">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="48" />
              </Step>
              <Step Type="Subscribe" Name="ToMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="48">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="31" />
              </Step>
              <Step Type="Decide" Name="IfMinimumDwellTimeExpired" ExclusionExpression="MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement" ID="49">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="50" />
              </Step>
              <Step Type="Decide" Name="IfMinimumDwellTimeCondition" ID="50">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(MinimumDwellTimeCondition.HasValue, MinimumDwellTimeCondition, True)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="51" />
                <Exit Name="False" Type="Alternate" NextID="52" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="51">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="60" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ID="52">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="53" />
              </Step>
              <Step Type="UnSubscribe" Name="FromMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="53">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Assign" Name="BeforeNextDestinationAssignments" ID="54">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingRiderReservation.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Decide" Name="CapacityRemains" ID="55">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(RideStation.Contents.Volume &lt; .999 * VolumeCapacity) &amp;&amp; (RideStation.Contents.Weight &lt; .999 * WeightCapacity)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="60" />
                <Exit Name="False" Type="Alternate" NextID="58" />
              </Step>
              <Step Type="Decide" Name="IsDock" ID="56">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode.AssociatedObject != Nothing) &amp;&amp; CurrentNode.AssociatedObject.Is.Dock</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="57" />
                <Exit Name="False" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Seize" Name="Dock" ID="57">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">CurrentNode.AssociatedObject</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IsDock" ID="58">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode.AssociatedObject != Nothing) &amp;&amp; CurrentNode.AssociatedObject.Is.Dock</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="59" />
                <Exit Name="False" Type="Alternate" NextID="49" />
              </Step>
              <Step Type="Release" Name="Dock" ID="59">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectName">CurrentNode.AssociatedObject</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="49" />
              </Step>
              <Step Type="Delay" Name="FlowInitialized" ID="60">
                <Properties>
                  <Property Name="DelayTime">.000000000000001</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderLoading" IsOverride="True" InterfaceProcessID="Transporter.OnRiderLoading" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Seize" Name="Vehicle" ExclusionExpression="RoutingType==List.VehicleRoutingType.FixedRoute" ID="2">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">Capacity.Allocated==0</Property>
                        <Property Name="SelectionExpression"></Property>
                        <Property Name="AccrueUsageCosts">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnRiderLoadingAssignments" ExclusionExpression="RoutingType==List.VehicleRoutingType.FixedRoute" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilFull" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">RideStationLoad &gt;= RideStation.Capacity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Wait" Name="UntilEntityTransferred" ID="5">
                <Properties>
                  <Property Name="EventName">Entity.Transferred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="Loaded_AddOnProcess" ExclusionExpression="!LoadedAddOnProcess.HasValue" ID="6">
                <Properties>
                  <Property Name="ProcessName">LoadedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Delay" Name="LoadedEventToBeLastCurrentEvent" ID="7">
                <Properties>
                  <Property Name="DelayTime">Math.EPSILON</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Fire" Name="RiderLoadedEvent" ID="8">
                <Properties>
                  <Property Name="EventName">RiderLoaded</Property>
                </Properties>
              </Step>
              <Step Type="Wait" Name="Filled" ID="9">
                <Properties>
                  <Property Name="EventName">FillCompleted</Property>
                  <Property Name="Events">
                    <Rows>
                      <Properties>
                        <Property Name="EventsEventName">Entity.Transferred</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="EndTransfer" Name="FillOperation" ID="10">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IsDock" ID="11">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode.AssociatedObject != Nothing) &amp;&amp; CurrentNode.AssociatedObject.Is.Dock</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderUnloading" IsOverride="True" InterfaceProcessID="Transporter.OnRiderUnloading" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Wait" Name="UntilEntityTransferred" ID="2">
                <Properties>
                  <Property Name="EventName">Entity.Transferred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="Unloaded_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">UnloadedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Delay" Name="UnloadedEventToBeLastCurrentEvent" ID="4">
                <Properties>
                  <Property Name="DelayTime">Math.EPSILON</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="RiderUnLoadedEvent" ID="5">
                <Properties>
                  <Property Name="EventName">RiderUnloaded</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="VolumeFillComplete" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="FillCompleted" ID="2">
                <Properties>
                  <Property Name="EventName">FillCompleted</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="WeightFillComplete" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="FillCompleted" ID="2">
                <Properties>
                  <Property Name="EventName">FillCompleted</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="48f879b1-e7e3-497c-b456-433cc40b5fc6" />
            </SymbolInstance>
            <StackedBar Center="0.00948501135911461 0.672689192346869 0.0119922378670882" Width="1.9532489770745" Height="1.1924034978555" ExternallyVisible="True" Shape="1" Type="Queue" Expression="Entity.Volume" QueueName="RideStation.Contents" />
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </TransporterDefinition>
      <LinkDefinition Name="TimePath" Id="ff39356c-a4f9-412c-bb3d-14baf4dc5d11" Revision="50" Author="Sales and Support" Description="The TimePath object may be used to define a pathway between two node locations where the travel time is user-specified." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="28">Version 2.39: Updated the TimePath object to provide a 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="30">Version 2.40: Removed the TimePath object's 'Close' and 'Open' public processes. For equivalent functionality, use the Assign step and assign the path's DesiredDirection state to the value 'Enum.TrafficDirection.None' to close entry onto the path, or to the value 'Enum.TrafficDirection.Either' to re-open entry onto the path. In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="31">Version 2.41: Updated the assignments repeat groups to take state units into account.</ChangeDescription>
          <ChangeDescription Version="32">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="33">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="34">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="37">Version 3.51: Do not display new link 'Cell Spacing Type', 'Cell Size', and 'Auto Align Cells' properties.</ChangeDescription>
          <ChangeDescription Version="39">Version 3.54: Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="40">Version 3.57: Added logic for new 'OnTurnedAround' standard interface process.</ChangeDescription>
          <ChangeDescription Version="41">Version 4.58: Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="42">Version 4.61: Set all inherited properties in 'Financials' category to not be visible.</ChangeDescription>
          <ChangeDescription Version="43">Version 4.63: Reordered the position of the 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="46">Version 4.68: Changed 'TravelerCapacity' integer property to 'InitialTravelerCapacity' expression property. Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'.</ChangeDescription>
          <ChangeDescription Version="47">Version 4.76: Updates required due to Suspend &amp; Resume step enhancements.</ChangeDescription>
          <ChangeDescription Version="48">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="49">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="50">Version 5.95: 'OnEntered' process logic - Simplification of the assignment expression to the Entity.Movement.Rate variable.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="46" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
        </ChangeStringReplacements>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="TravelTime" DisplayName="Travel Time" Description="The time required to travel the length of this path." Category="Travel Logic" DefaultValue="1.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when a traveler is entering this object." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsBeforeExiting" DisplayName="Before Exiting" Description="Optional state assignments when a traveler is ready to exit this object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsBeforeExitingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsBeforeExitingNewValue" DisplayName="New Value" Description="The new value to assign." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsBeforeExitingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs when a traveler's leading edge has entered this link." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="TrailingEdgeEnteredAddOnProcess" DisplayName="Trailing Edge Entered" Description="Occurs when a traveler's trailing edge has entered this path." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ReachedEndAddOnProcess" DisplayName="Reached End" Description="Occurs when a traveler's leading edge has reached the end of this path." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when a traveler has exited this link." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="True" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="Type" ComplexityLevel="Basic" />
            <Override Name="InitialDesiredSpeed" Visible="False" DefaultValue="0.0" />
            <Override Name="EntityAlignment" Visible="False" />
            <Override Name="CellSpacingType" Visible="False" />
            <Override Name="NumberOfCells" Visible="False" />
            <Override Name="CellSize" Visible="False" />
            <Override Name="AutoAlignCells" Visible="False" />
            <Override Name="DrawnToScale" Visible="False" />
            <Override Name="LogicalLength" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="45" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events />
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Link.OnEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfNoEnteredAddOnProcess" ExclusionExpression="!EnteredAddOnProcess.HasValue + (2*EnteredAddOnProcess.HasValue)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">!EnteredAddOnProcess.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Suspend" Name="TravelerMovement" ID="5">
                <Properties>
                  <Property Name="SuspendType">ObjectMovement</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Resume" Name="TravelerMovement" ID="6">
                <Properties>
                  <Property Name="ResumeType">ObjectMovement</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="EndTransfer" Name="OntoTimePath" ID="7">
                <Properties />
              </Step>
              <Step Type="Assign" Name="EntityMovementRate" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Token.ReturnValue</Value>
                  </Property>
                  <Property Name="NewValue">TravelTime</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>Entity.Movement.Rate</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(Token.ReturnValue &gt; 0.0, Size.Length/Token.ReturnValue, Infinity)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExited" IsOverride="True" InterfaceProcessID="Link.OnExited" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="Exited_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">ExitedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnReachedEnd" IsOverride="True" InterfaceProcessID="Link.OnReachedEnd" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="ReachedEnd_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">ReachedEndAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="FromTimePath" ID="4">
                <Properties>
                  <Property Name="FromType">EndOfLink</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTrailingEdgeEntered" IsOverride="True" InterfaceProcessID="Link.OnTrailingEdgeEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="TrailingEdgeEntered_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">TrailingEdgeEnteredAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTurnedAround" IsOverride="True" InterfaceProcessID="Link.OnTurnedAround" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="EntityMovementRate" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Token.ReturnValue</Value>
                  </Property>
                  <Property Name="NewValue">TravelTime</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>Entity.Movement.Rate</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(Token.ReturnValue &gt; 0.0, Size.Length / (Token.ReturnValue + (Token.ReturnValue == 0.0)), Infinity)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="EndTransfer" Name="OntoTimePath" ID="3">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <LinkDefinition Name="Track" Id="28262029-1082-43c7-8d5d-1034c0adf1ea" Revision="32" BaseClass="Path" Author="Sales and Support" Description="Track is a pathway over which a RailCar moves.   Tracks may be combined into networks.  A Track must start and end at a ControlNode." Version="1" CheckBaseForAdvancedProperties="True">
        <PropertyDefinitions>
          <Categories>
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="AllowPassing" Visible="False" DefaultValue="False" ComplexityLevel="Advanced" />
          </Overrides>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="RailCar" />
        </UsedObjects>
        <Processes>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Link.OnEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfNoEnteredAddOnProcess" ExclusionExpression="Math.If(EnteredAddOnProcess.HasValue, 2, 1)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">!EnteredAddOnProcess.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Assign" Name="DisableOnCollisionCleared" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnCollisionCleared.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Suspend" Name="TravelerMovement" ID="6">
                <Properties>
                  <Property Name="SuspendType">ObjectMovement</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Assign" Name="EnableOnCollisionCleared" ID="7">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnCollisionCleared.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Resume" Name="TravelerMovement" ID="8">
                <Properties>
                  <Property Name="ResumeType">ObjectMovement</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Assign" Name="EntityMovementRate" ExclusionExpression="SpeedLimit==Infinity" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Entity.DesiredSpeed, SpeedLimit)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollided" IsOverride="True" InterfaceProcessID="Link.OnCollided" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="EntityMovementRate" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Entity.NextEntityAheadOnLink.Movement.Rate</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="ClosingToReconnect" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RailCar.ClosingToReconnect</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Assign" Name="ClosingEnded" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RailCar.ClosingToReconnect</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
              <Step Type="Fire" Name="CloseCompleted" ID="5">
                <Properties>
                  <Property Name="EventName">RailCar.CloseCompleted</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollisionCleared" IsOverride="True" InterfaceProcessID="Link.OnCollisionCleared" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="EntityMovementRate" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((Entity.NextEntityAheadOnLink!=Nothing)&amp;&amp;(Entity.NetworkDistanceTo.NextEntityAheadOnLink==0.0), Entity.NextEntityAheadOnLink.Movement.Rate, RailCar.MyLocomotive.DesiredSpeed)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTrailingEdgeEntered" IsOverride="True" InterfaceProcessID="Link.OnTrailingEdgeEntered" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="EndTransfer" Name="OntoPath" ID="2">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="TrailingEdgeEntered_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">TrailingEdgeEnteredAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTurnedAround" IsOverride="True" InterfaceProcessID="Link.OnTurnedAround" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="EntityMovementRate" ExclusionExpression="SpeedLimit==Infinity" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Entity.DesiredSpeed, SpeedLimit)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <NodeDefinition Name="TransferNode" Id="0d40fbf0-8206-443f-b771-65f85633a2f6" Revision="130" Author="Sales and Support" Description="The TransferNode object may be used by an entity to transfer into or out of an object. This object may also be used to define an intersection point in a network of links. Optional entity destination selection and transport logic is provided." CheckBaseForAdvancedProperties="True" Color="1e90ff">
        <ChangeDescriptions>
          <ChangeDescription Version="74">Version 2.36: Renamed the 'TransferToLinkFailureLogic' process in the TransferNode process logic to 'TransferFailureLogic'. If the 'AutoTransferOnEntry' property value of the TransferNode is 'To Parent External Node' and the transfer to the specified parent external node fails, then the token now executes the 'TransferFailureLogic' process.</ChangeDescription>
          <ChangeDescription Version="75">Version 2.37: Changed 'Capacity' display name to 'Initial Capacity' as object capacities are now user assignable.</ChangeDescription>
          <ChangeDescription Version="78">Version 2.38: The RoutingGroup element named 'RoutingOut' that is owned by the TransferNode is now a private element.</ChangeDescription>
          <ChangeDescription Version="82">Version 2.39: Updated the TransferNode object process logic to specify all of the object's process delays as non-interruptible. For the 'Select From List' feature to set an entity's next destination, changed the default value of the destination 'Selection Expression' property to be 'Candidate.Node.InputLocation.Overload'.</ChangeDescription>
          <ChangeDescription Version="83">Version 2.40: In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="85">Version 2.41: Minor property description and display name updates. The RoutingGroup element named 'RoutingOut' that is owned by the TransferNode is now a public element.</ChangeDescription>
          <ChangeDescription Version="86">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="87">Version 3.44: 'SeizedObjects.UnitsOwned' function renamed to 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="88">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="89">Version 3.48: Hide new 'Random Number Stream' property in 'Routing Logic' category.</ChangeDescription>
          <ChangeDescription Version="90">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="97">Version 3.54: Added new Notify step to 'TransferFailureLogic' process to output a warning if automatically destroying an entity. Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="100">Version 3.56: Added new 'Tally Statistics' property category.</ChangeDescription>
          <ChangeDescription Version="101">Version 3.57: Change to new 'OnEnteredParking' standard interface process that was added to Simio's base node object.</ChangeDescription>
          <ChangeDescription Version="104">Version 4.58: Removed 'AutoTransferOnEntry' property. The 'ExternalNodeName' property is now always visible with display name 'Bound External Output Node'. If a transfer to parent external node attempt fails, then the token now continues normal processing instead of executing the 'TransferFailureLogic'. Added new 'Advanced Options' property category. Added 'OnEnteredToAssociatedObject' process logic.</ChangeDescription>
          <ChangeDescription Version="105">Version 4.59: Changed the default of the 'Blocked Routing Rule' property to 'Select Available Only'.</ChangeDescription>
          <ChangeDescription Version="106">Version 4.60: Process logic now uses new object 'SeizedResources.CapacityUnitsOwned' function instead of deprecated 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="107">Version 4.61: Set all inherited properties in 'Financials' category to not be visible.</ChangeDescription>
          <ChangeDescription Version="108">Version 4.63: Set all inherited properties in 'Financials-&gt;Resource Costs' to not be visible.</ChangeDescription>
          <ChangeDescription Version="109">Version 4.65: Process logic now uses new object 'SeizedResources.CapacityOwnedOf' function instead of deprecated 'SeizedResources.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="110">Version 4.66: If bound to an external output node of the parent model, a transfer node's 'Entered' event is still fired and its 'Entered' add-on process trigger still executed before transferring the entity out of the parent model.</ChangeDescription>
          <ChangeDescription Version="115">Version 4.68: The TransferNode object is no longer enabled as a resource object, and the 'InitialCapacity', 'RankingRule', and 'RankingExpression' properties have been replaced by equivalent 'InitialTravelerCapacity', 'EntryRankingRule', and 'EntryRankingExpression' properties. Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'. Renamed 'ExternalNodeName' property to 'BoundExternalOutputNode'.</ChangeDescription>
          <ChangeDescription Version="116">Version 4.70: The blocked condition for the 'RoutingOut' RoutingGroup element owned by the node now uses new node 'AssociatedStation' and 'NumberTravelers.RoutingInToEnterAssociatedObject' functions. For the 'Select From List' feature to set an entity's next destination, changed the default value of the destination 'Selection Expression' property to be 'Candidate.Node.AssociatedStationOverload'.</ChangeDescription>
          <ChangeDescription Version="118">Version 4.71: Renamed 'BlockedRoutingRule' property to 'BlockedDestinationRule'. Changed the default value of the transporter 'Selection Expression' property to be 'Candidate.Transporter.RideStationOverload'.</ChangeDescription>
          <ChangeDescription Version="122">Version 4.73: New 'Random Number Stream' property now available in the 'Advanced Options' category. Renamed 'NodeName' property to 'DestinationNodeName'. Renamed 'NodeListName' property to 'DestinationNodeListName'.</ChangeDescription>
          <ChangeDescription Version="123">Version 4.74: If a traveler is attempting to transfer out of the node and has no network assigned (i.e., is using free space for travel), then the node's process logic now transfers the traveler into free space.</ChangeDescription>
          <ChangeDescription Version="126">Version 4.75: If the 'Routing Logic -&gt; Entity Destination Type' property is specified as'Specific', can now specify the new destination node value as 'No Destination'.</ChangeDescription>
          <ChangeDescription Version="127">Version 4.77: Removed an unnecessary 'TransferFailureLogic' Execute step from the 'OnEnteredToAssociatedObject' process logic.</ChangeDescription>
          <ChangeDescription Version="128">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="130">Version 5.91: Transport Logic -&gt; 'Transporter Type' property -&gt; The 'From List' choice is now displayed as 'Select From List'. Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="104" RegularExpressionPattern="(^|[^\w_])(?i:AutoTransferOnEntry)([^\w_]|$)" ReplacementString="$1ExternalNodeName.HasValue$2" />
          <ChangeStringReplacement Version="104" RegularExpressionPattern="(^|[^\w_])(?i:List[\.]AutoTransferOnEntryType[\.]None)([^\w_]|$)" ReplacementString="$1False$2" />
          <ChangeStringReplacement Version="115" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
          <ChangeStringReplacement Version="115" RegularExpressionPattern="(^|[^\w_])(?i:ExternalNodeName)([^\w_]|$)" ReplacementString="$1BoundExternalOutputNode$2" />
          <ChangeStringReplacement Version="118" RegularExpressionPattern="(^|[^\w_])(?i:BlockedRoutingRule)([^\w_]|$)" ReplacementString="$1BlockedDestinationRule$2" />
          <ChangeStringReplacement Version="122" RegularExpressionPattern="(^|[^\w_])(?i:NodeName)([^\w_]|$)" ReplacementString="$1DestinationNodeName$2" />
          <ChangeStringReplacement Version="122" RegularExpressionPattern="(^|[^\w_])(?i:NodeListName)([^\w_]|$)" ReplacementString="$1DestinationNodeListName$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="TransferNodeDestinationType">
            <Items>
              <Item Value="Continue" />
              <Item Value="Specific" />
              <Item Value="BySequence" />
              <Item Value="SelectFromList" />
            </Items>
          </StringList>
          <StringList Name="TransferNodeTallyConditionType">
            <Items>
              <Item Value="NoCondition" />
              <Item Value="IsEntity" />
              <Item Value="IsTransporter" />
              <Item Value="CustomCondition" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Tally Statistics" Description="Optional Tally Statistics" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ListProperty Name="DestinationType" DisplayName="Entity Destination Type" Description="The method used to set a destination node for entities routing out of this node. 'By Sequence' requires that the entity object has been assigned a sequence table. The destination node value will be set to the next destination in the sequence." Category="Routing Logic" DefaultValue="Continue" NullString="null" List="TransferNodeDestinationType">
            <Captions>
              <Caption Value="BySequence" Display="By Sequence" />
              <Caption Value="SelectFromList" Display="Select From List" />
            </Captions>
          </ListProperty>
          <NodeProperty Name="DestinationNodeName" DisplayName="Node Name" Description="The name of the specific node object that is the destination." DefaultValue="No Destination" Required="False" Parent="DestinationType" NullString="No Destination" ValidObjectType="Node">
            <Switch Property="DestinationType" Value="Specific" />
          </NodeProperty>
          <NodeListProperty Name="DestinationNodeListName" DisplayName="Node List Name" Description="The name of the list of node objects from which a destination will be selected." Parent="DestinationType" NullString="null">
            <Switch Property="DestinationType" Value="SelectFromList" />
          </NodeListProperty>
          <EnumProperty Name="DestinationSelectionGoal" DisplayName="Selection Goal" Description="The goal used to select a destination node from the list of candidates." ComplexityLevel="Advanced" DefaultValue="Preferred Order" Parent="DestinationType" NullString="null" EnumType="NodeSelectionGoal">
            <Switch Property="DestinationType" Value="SelectFromList" />
            <Captions>
              <Caption Value="SmallestDistance" Display="Smallest Distance" />
              <Caption Value="LargestDistance" Display="Largest Distance" />
              <Caption Value="PreferredOrder" Display="Preferred Order" />
              <Caption Value="SmallestValue" Display="Smallest Value" />
              <Caption Value="LargestValue" Display="Largest Value" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="DestinationSelectionExpression" DisplayName="Selection Expression" Description="The expression criteria, evaluated for each candidate destination, used with a Smallest Value or Largest Value selection goal.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax 'Candidate.[NodeClass].[Attribute]' or 'Candidate.[NodeAssociatedObjectClass].[Attribute]' to evaluate attributes of either the candidate destination nodes themselves or objects associated with those candidate nodes.&#xD;&#xA;&#xD;&#xA;For example, use syntax such as 'Candidate.Node.AssociatedStation.Capacity' or 'Candidate.Server.Capacity' (which would be acceptable syntax if all of the candidate nodes were associated with Server objects)." ComplexityLevel="Advanced" DefaultValue="Candidate.Node.AssociatedStationOverload" Parent="DestinationSelectionGoal" NullString="null" SupportForeign="True">
            <Switch Property="DestinationSelectionGoal" Comparison="GreaterThan" Value="Random" />
          </ExpressionProperty>
          <ExpressionProperty Name="DestinationSelectionCondition" DisplayName="Selection Condition" Description="An optional condition evaluated for each candidate destination that must be true for the destination node to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax 'Candidate.[NodeClass].[Attribute]' or 'Candidate.[NodeAssociatedObjectClass].[Attribute]' to evaluate attributes of either the candidate destination nodes themselves or objects associated with those candidate nodes.&#xD;&#xA;&#xD;&#xA;For example, use syntax such as 'Candidate.Node.AssociatedStation.Capacity' or 'Candidate.Server.Capacity' (which would be acceptable syntax if all of the candidate nodes were associated with Server objects)." ComplexityLevel="Advanced" Required="False" Parent="DestinationType" NullString="null" SupportForeign="True">
            <Switch Property="DestinationType" Value="SelectFromList" />
          </ExpressionProperty>
          <EnumProperty Name="BlockedDestinationRule" DisplayName="Blocked Destination Rule" Description="The rule used to manage destination selection if there are destinations in the list of candidate nodes that are considered to be blocked.&#xD;&#xA;&#xD;&#xA;If the rule is 'Select Any', then whether or not destinations are considered blocked will be ignored. If the rule is 'Select Available Only', then only a destination that is not currently blocked may be assigned, and if all destinations are blocked then an entity will be held at the TransferNode until a destination becomes available. If the rule is 'Prefer Available', then a destination that is not currently blocked will be preferred, but if all destinations are blocked then the best destination per the selection goal will still be immediately assigned." ComplexityLevel="Advanced" DefaultValue="Select Available Only" Parent="DestinationType" NullString="null" EnumType="BlockedRoutingRule">
            <Switch Property="DestinationType" Value="SelectFromList" />
            <Captions>
              <Caption Value="SelectAny" Display="Select Any" />
              <Caption Value="SelectAvailableOnly" Display="Select Available Only" />
              <Caption Value="PreferAvailable" Display="Prefer Available" />
            </Captions>
          </EnumProperty>
          <BooleanProperty Name="RideOnTransporter" DisplayName="Ride On Transporter" Description="Indicates whether entities entering this node object will need to select and ride on a transporter object for further travel." Category="Transport Logic" DefaultValue="False" NullString="null" />
          <EnumProperty Name="TransporterType" DisplayName="Transporter Type" Description="The transporter type that may be selected to ride on." ComplexityLevel="Advanced" Category="Transport Logic" DefaultValue="Specific" NullString="null" EnumType="TransporterType">
            <Switch Property="RideOnTransporter" Value="True" />
            <Captions>
              <Caption Value="FromList" Display="Select From List" />
            </Captions>
          </EnumProperty>
          <ObjectInstanceProperty Name="TransporterName" DisplayName="Transporter Name" Description="The name of the specific transporter type that the entity may ride on." Parent="TransporterType" NullString="null" ValidObjectType="Transporter">
            <Switch Property="TransporterType" Value="Specific" />
          </ObjectInstanceProperty>
          <TransporterListProperty Name="TransporterListName" DisplayName="Transporter List Name" Description="The name of the list of transporter types that the entity may ride on." Parent="TransporterType" NullString="null">
            <Switch Property="TransporterType" Value="FromList" />
          </TransporterListProperty>
          <EnumProperty Name="TransporterReservationMethod" DisplayName="Reservation Method" Description="The method used to select and reserve a transporter object to ride on." ComplexityLevel="Advanced" DefaultValue="Reserve Closest" Parent="TransporterType" NullString="null" EnumType="ReservationMethod">
            <Switch Property="RideOnTransporter" Value="True" />
            <Captions>
              <Caption Value="ReserveClosest" Display="Reserve Closest" />
              <Caption Value="ReserveBest" Display="Reserve Best" />
              <Caption Value="FirstAvailableAtLocation" Display="First Available At Location" />
            </Captions>
          </EnumProperty>
          <EnumProperty Name="TransporterSelectionGoal" DisplayName="Selection Goal" Description="The goal used to rank transporter preference when multiple candidates are available to ride on." ComplexityLevel="Advanced" DefaultValue="Preferred Order" Parent="TransporterType" NullString="null" EnumType="ExtendedSelectionGoal">
            <Switch Property="RideOnTransporter" Value="True" />
            <Captions>
              <Caption Value="PreferredOrder" Display="Preferred Order" />
              <Caption Value="SmallestValue" Display="Smallest Value" />
              <Caption Value="LargestValue" Display="Largest Value" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="TransporterSelectionExpression" DisplayName="Selection Expression" Description="The expression criteria, evaluated for each candidate transporter object, used with a Smallest Value or Largest Value selection goal. In the expression, use the keyword 'Candidate' to reference a transporter object in the collection of candidates (e.g., Candidate.Transporter.RideStationOverload)." ComplexityLevel="Advanced" DefaultValue="Candidate.Transporter.RideStationOverload" Parent="TransporterSelectionGoal" NullString="null" SupportForeign="True">
            <Switch Property="TransporterSelectionGoal" Comparison="NotEqual" Value="PreferredOrder" />
          </ExpressionProperty>
          <ExpressionProperty Name="TransporterSelectionCondition" DisplayName="Selection Condition" Description="An optional condition evaluated for each candidate transporter object that must be true for the transporter to be eligible to ride on. In the condition, use the keyword 'Candidate' to reference a transporter object in the collection of candidates (e.g., Candidate.Transporter.RideStationOverload)." ComplexityLevel="Advanced" Required="False" Parent="TransporterType" NullString="null" SupportForeign="True">
            <Switch Property="RideOnTransporter" Value="True" />
          </ExpressionProperty>
          <RepeatingProperty Name="TalliesOnEntering" DisplayName="On Entering" Description="Optional tally statistics to record when an entity is entering this node." ComplexityLevel="Advanced" Category="Tally Statistics" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Tally Statistics (Basic Logic)" />
              </Categories>
              <ListProperty Name="TalliesOnEnteringTallyConditionType" DisplayName="Tally If" Description="Condition required to record the tally statistic." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Entity Entering" NullString="null" List="TransferNodeTallyConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Entering" />
                  <Caption Value="IsTransporter" Display="Transporter Entering" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TalliesOnEnteringTallyCondition" DisplayName="Condition" Description="Condition required to record the tally statistic." ComplexityLevel="Advanced" Parent="TalliesOnEnteringTallyConditionType" NullString="null">
                <Switch Property="TalliesOnEnteringTallyConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <ElementProperty Name="TalliesOnEnteringTallyStatisticName" DisplayName="Tally Statistic Name" Description="The tally statistic for which the value is to be recorded." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" Type="TallyStatistic" />
              <EnumProperty Name="TalliesOnEnteringValueType" DisplayName="Value Type" Description="The type of value to record. The value type 'Expression' records the value of the specified expression. The value type 'TimeBetween' records the time between arrivals to Tally steps referencing the tally statistic." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Expression" NullString="null" EnumType="TallyValueType" />
              <ExpressionProperty Name="TalliesOnEnteringValue" DisplayName="Value" Description="The expression value to be recorded." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" NullString="null" UnitTypeProperty="TalliesOnEnteringTallyStatisticName">
                <Switch Property="TalliesOnEnteringValueType" Value="Expression" />
              </ExpressionProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="TalliesOnExited" DisplayName="On Exited" Description="Optional tally statistics to record when an entity has exited this node." ComplexityLevel="Advanced" Category="Tally Statistics" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Tally Statistics (Basic Logic)" />
              </Categories>
              <ListProperty Name="TalliesOnExitedTallyConditionType" DisplayName="Tally If" Description="Condition required to record the tally statistic." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Entity Exited" NullString="null" List="TransferNodeTallyConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Exited" />
                  <Caption Value="IsTransporter" Display="Transporter Exited" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TalliesOnExitedTallyCondition" DisplayName="Condition" Description="Condition required to record the tally statistic." ComplexityLevel="Advanced" Parent="TalliesOnExitedTallyConditionType" NullString="null">
                <Switch Property="TalliesOnExitedTallyConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <ElementProperty Name="TalliesOnExitedTallyStatisticName" DisplayName="Tally Statistic Name" Description="The tally statistic for which the value is to be recorded." ComplexityLevel="Advanced" Category="Basic Logic" Required="False" NullString="null" Type="TallyStatistic" />
              <EnumProperty Name="TalliesOnExitedValueType" DisplayName="Value Type" Description="The type of value to record. The value type 'Expression' records the value of the specified expression. The value type 'TimeBetween' records the time between arrivals to Tally steps referencing the tally statistic." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="Expression" NullString="null" EnumType="TallyValueType" />
              <ExpressionProperty Name="TalliesOnExitedValue" DisplayName="Value" Description="The expression value to be recorded." ComplexityLevel="Advanced" Category="Basic Logic" DefaultValue="0.0" NullString="null" UnitTypeProperty="TalliesOnExitedTallyStatisticName">
                <Switch Property="TalliesOnExitedValueType" Value="Expression" />
              </ExpressionProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs when a traveler's leading edge has entered this node." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when a traveler's trailing edge has exited this node." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ExpressionProperty Name="RandomNumberStream" DisplayName="Random Number Stream" Description="The random number stream to be used if the entity is transferring from the node to an outbound link and is probabilistically selecting the outbound link using the node's 'By Link Weight' outbound link rule." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="0" Required="False" NullString="null" />
          <ExternalNodeProperty Name="BoundExternalOutputNode" DisplayName="Bound External Output Node" Description="The name of an external output node that this node has been bound to in order to transfer entities out of the containing (parent) object. The transfer attempt will be performed by an entity after entering the node and, if successful, any other crossing or routing logic for the node will be ignored." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" />
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="InitialTravelerCapacity" Description="The initial maximum number of travelers that may simultaneously occupy this node. &#xD;&#xA;&#xD;&#xA;Note that an entity using the 'Ride On Transporter' option at this transfer node will be exempted from being blocked by or counting against the node's traveler capacity limit." />
            <Override Name="EntryExemptionCondition" Visible="False" DefaultValue="$(DefinitionName).RideOnTransporter &amp;&amp; !Entity.Is.Transporter" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="114" OldPropertyName="InitialCapacity" NewPropertyName="InitialTravelerCapacity" />
            <PropertyReplacement Version="114" OldPropertyName="RankingRule" NewPropertyName="EntryRankingRule" />
            <PropertyReplacement Version="114" OldPropertyName="RankingExpression" NewPropertyName="EntryRankingExpression" />
            <PropertyReplacement Version="114" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="114" OldPropertyName="ExternalNodeName" NewPropertyName="BoundExternalOutputNode" />
            <PropertyReplacement Version="116" OldPropertyName="BlockedRoutingRule" NewPropertyName="BlockedDestinationRule" />
            <PropertyReplacement Version="121" OldPropertyName="NodeName" NewPropertyName="DestinationNodeName" />
            <PropertyReplacement Version="121" OldPropertyName="NodeListName" NewPropertyName="DestinationNodeListName" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events>
          <Event Name="Entered" Description="The Entered event provides notification that a traveler has entered the crossing area of the node." />
          <Event Name="Exited" Description="The Exited event provides notification that a traveler has exited the crossing area of the node." />
          <Event Name="RiderWaiting" Description="The RiderWaiting event provides notification that a traveler has entered the RidePickupQueue of the node waiting for a ride." />
        </Events>
        <Elements>
          <Element Type="RoutingGroup" Name="RoutingOut" Scope="Public" Description="Element holding 'Select From List' routing out logic for this TransferNode object.">
            <Properties>
              <Property Name="NodeListName">DestinationNodeListName</Property>
              <Property Name="RouteRequestRankingRule">RankingRule</Property>
              <Property Name="RouteRequestRankingExpression">RankingExpression</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Node.OnEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Tally" Name="OnEnteringTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnEnteringTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValue">TalliesOnEnteringValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="VisitNode" Name="Traveler" ID="5">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="RoutingOutLogic" ID="7">
                <Properties>
                  <Property Name="ProcessName">RoutingOutLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="8">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfTransporter" ExclusionExpression="(DestinationType==List.TransferNodeDestinationType.Continue)&amp;&amp;(!RideOnTransporter)" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.Is.Transporter</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="10">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="RandomNumberStream">RandomNumberStream</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="11" />
              </Step>
              <Step Type="Decide" Name="IfFreeSpaceTraveler" ID="11">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.CurrentNetwork==Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="13" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="12">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="TransferFailureLogic" ID="13">
                <Properties>
                  <Property Name="ProcessName">TransferFailureLogic</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfRideOnTransporter" ExclusionExpression="Math.If(RideOnTransporter,1,2)" ID="14">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RideOnTransporter</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="10" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExited" IsOverride="True" InterfaceProcessID="Node.OnExited" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Tally" Name="OnExitedTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnExited</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnExitedTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnExitedValueType</Property>
                        <Property Name="TalliesValue">TalliesOnExitedValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnExited.TalliesOnExitedTallyConditionType==List.TransferNodeTallyConditionType.NoCondition,1,TalliesOnExited.TalliesOnExitedTallyConditionType==List.TransferNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnExited.TalliesOnExitedTallyConditionType==List.TransferNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnExited.TalliesOnExitedTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="Exited_AddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">ExitedAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Fire" Name="ExitedEvent" ID="4">
                <Properties>
                  <Property Name="EventName">Exited</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredToAssociatedObject" IsOverride="True" InterfaceProcessID="Node.OnEnteredToAssociatedObject" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Tally" Name="OnEnteringTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnEnteringTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValue">TalliesOnEnteringValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="6">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToAssociatedObject" ID="7">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">AssociatedObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredFromAssociatedObject" IsOverride="True" InterfaceProcessID="Node.OnEnteredFromAssociatedObject" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Tally" Name="OnEnteringTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">TalliesOnEnteringTallyStatisticName</Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValue">TalliesOnEnteringValue</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.TransferNodeTallyConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">EnteredAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="RoutingOutLogic" ID="6">
                <Properties>
                  <Property Name="ProcessName">RoutingOutLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="7">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfTransporter" ExclusionExpression="(DestinationType==List.TransferNodeDestinationType.Continue)&amp;&amp;(!RideOnTransporter)" ID="8">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.Is.Transporter</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="9">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                  <Property Name="RandomNumberStream">RandomNumberStream</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Decide" Name="IfFreeSpaceTraveler" ID="10">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Entity.CurrentNetwork==Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="11" />
                <Exit Name="False" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="11">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="TransferFailureLogic" ID="12">
                <Properties>
                  <Property Name="ProcessName">TransferFailureLogic</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfRideOnTransporter" ExclusionExpression="Math.If(RideOnTransporter,1,2)" ID="13">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RideOnTransporter</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="9" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredParking" IsOverride="True" InterfaceProcessID="Node.OnEnteredParking" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="EndTransfer" Name="EndTransfer" ID="2">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="TransferFailureLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Notify" Name="DestroyingEntity" ID="2">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Entity '" + Entity.Name + "' failed to initiate transfer from node."</Property>
                  <Property Name="MessageContent">"Entity '" + Entity.Name + "' failed to initiate transfer from node '" + Name + "' onto an outbound link. The entity is being automatically destroyed. However, this warning may indicate a problem in the modeled logic. 

It is recommended to verify that a followable network path has been drawn from the node to the entity's assigned destination '" + Math.If(Entity.DestinationNode!=Nothing &amp;&amp; Entity.DestinationNode!=Node, Entity.DestinationNode.Name, "No Destination") + "'. If a followable path has been drawn, then verify that the path applies to the entity's assigned network '" + Math.If(Entity.CurrentNetwork!=Nothing, Entity.CurrentNetwork.Name, "No Network") +  "'."</Property>
                  <Property Name="NotifyCondition">Entity.Destroyable</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Destroy" Name="Entity" ID="3">
                <Properties />
                <Exit Name="Failed" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="4">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="RoutingOutLogic" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Decide" Name="IfDestinationTypeContinue" ExclusionExpression="Math.If(DestinationType==List.TransferNodeDestinationType.Continue,1,2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">DestinationType==List.TransferNodeDestinationType.Continue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfDestinationTypeSpecific" ExclusionExpression="Math.If(DestinationType==List.TransferNodeDestinationType.Specific,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">DestinationType==List.TransferNodeDestinationType.Specific</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfDestinationTypeBySequence" ExclusionExpression="Math.If(DestinationType==List.TransferNodeDestinationType.BySequence,1,2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">DestinationType==List.TransferNodeDestinationType.BySequence</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="SetNode" Name="ToSpecificDestination" ID="5">
                <Properties>
                  <Property Name="NodeName">DestinationNodeName</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="SetNode" Name="ToNextDestinationBySequence" ID="6">
                <Properties>
                  <Property Name="DestinationType">BySequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Route" Name="ToDestinationFromList" ID="7">
                <Properties>
                  <Property Name="RoutingGroupName">RoutingOut</Property>
                  <Property Name="SelectionGoal">DestinationSelectionGoal</Property>
                  <Property Name="SelectionExpression">DestinationSelectionExpression</Property>
                  <Property Name="SelectionCondition">DestinationSelectionCondition</Property>
                  <Property Name="BlockedDestinationRule">BlockedDestinationRule</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfRideOnTransporter" ExclusionExpression="Math.If(RideOnTransporter,1,2)" ID="8">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RideOnTransporter</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Ride" Name="OnTransporter" ID="9">
                <Properties>
                  <Property Name="TransporterType">TransporterType</Property>
                  <Property Name="TransporterName">TransporterName</Property>
                  <Property Name="TransporterListName">TransporterListName</Property>
                  <Property Name="ReservationMethod">TransporterReservationMethod</Property>
                  <Property Name="SelectionGoal">TransporterSelectionGoal</Property>
                  <Property Name="SelectionExpression">TransporterSelectionExpression</Property>
                  <Property Name="SelectionCondition">TransporterSelectionCondition</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Fire" Name="RiderWaitingEvent" ID="10">
                <Properties>
                  <Property Name="EventName">RiderWaiting</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </NodeDefinition>
    </Definitions>
    <DefinitionRefs>
      <DefinitionRef Name="RailCar">
        <Id>2c93c9ee-309c-4afc-8bb9-8ab0883811ea</Id>
        <Revision>43</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Pipe1">
        <Id>4d1d2941-3555-49c1-84ee-d56968f88fb5</Id>
        <Revision>19</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Vehicle">
        <Id>840e1952-0a07-4fce-ae96-9d4ddaa9e1ef</Id>
        <Revision>192</Revision>
      </DefinitionRef>
    </DefinitionRefs>
    <Materials>
      <TextureMaterial Id="9226fd7e-8bd8-4d07-8f3c-77c71cc02835" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="d5ce570c-ca16-42b5-8f47-b235953a47f1" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture1.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="c5778422-fe6d-4e26-9e68-9466857531f8" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture2.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="20b5162d-669c-421f-94e5-e5859b51f7e8" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture3.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="dcf9bd74-c269-42cd-89fb-c920da8f76b9" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture4.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="d2620a35-f838-4b34-b3c4-638f2c66146a" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture5.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="ff1a91f4-b980-4b78-b6b0-177798c70249" Name="Iron_ore_Pilbara">
        <Image>
          <FileRef Name="Data\Textures\Iron_ore_Pilbara.jpg" />
        </Image>
      </TextureMaterial>
      <ColorMaterial Id="38e4463f-97ac-41f3-9ead-8864402a139b" Color="a9a9a9" />
      <ColorMaterial Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" Color="000000" />
    </Materials>
    <Symbols>
      <Symbol Name="Filler" Id="41407493-27b7-44a5-8015-58b81108af6c">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Filler.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="5.53365585176658">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Filler.s3d" />
              </MeshData>
              <GeometryDataPieces>
                <GeometryDataPiece Id="0">
                  <MaterialRef Id="6f5ef915-3da8-44b2-bc8c-3e489c722f43" />
                </GeometryDataPiece>
                <GeometryDataPiece Id="1">
                  <MaterialRef Id="2043fefa-3808-4397-8ac9-0e0fd0258f76" />
                </GeometryDataPiece>
              </GeometryDataPieces>
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="6f5ef915-3da8-44b2-bc8c-3e489c722f43" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="2043fefa-3808-4397-8ac9-0e0fd0258f76" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="FlowSink" Id="9845d430-6686-4f57-b6b0-2ce3f5015bd8">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\FlowSink.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="5.11273970188239">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\FlowSink.s3d" />
              </MeshData>
              <GeometryDataPieces>
                <GeometryDataPiece Id="0">
                  <MaterialRef Id="4bdca49f-09fa-46ad-89fe-bb54198b4edf" />
                </GeometryDataPiece>
                <GeometryDataPiece Id="1">
                  <MaterialRef Id="acaafc16-63d3-4273-9be0-66bbf2357bea" />
                </GeometryDataPiece>
              </GeometryDataPieces>
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="4bdca49f-09fa-46ad-89fe-bb54198b4edf" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="acaafc16-63d3-4273-9be0-66bbf2357bea" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="FlowSource" Id="32f8c7c6-a45b-48a9-826d-c69fb09d930b">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\FlowSource.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="5.11273970188239">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\FlowSource.s3d" />
              </MeshData>
              <GeometryDataPieces>
                <GeometryDataPiece Id="0">
                  <MaterialRef Id="6938bc9f-0a33-4d44-aadb-0d993e85406f" />
                </GeometryDataPiece>
                <GeometryDataPiece Id="1">
                  <MaterialRef Id="a497946d-7ab0-4c0b-b89c-1b05429b8780" />
                </GeometryDataPiece>
              </GeometryDataPieces>
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="6938bc9f-0a33-4d44-aadb-0d993e85406f" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="a497946d-7ab0-4c0b-b89c-1b05429b8780" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="tmp3ADB" Id="3a8a7ca0-1f8d-4e2a-bf56-43aff090f528">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\tmp3ADB.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="1">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\tmp3ADB.s3d" />
              </MeshData>
              <GeometryDataPieces>
                <GeometryDataPiece Id="2">
                  <MaterialRef Id="98c8f103-fcf7-4a7c-8e55-6213309b281f" />
                </GeometryDataPiece>
                <GeometryDataPiece Id="4">
                  <MaterialRef Id="8e5896d0-92d4-41af-a4a8-6eb64855f4df" />
                </GeometryDataPiece>
              </GeometryDataPieces>
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="2">
                <MaterialRef Id="98c8f103-fcf7-4a7c-8e55-6213309b281f" />
              </Decoration>
              <Decoration SurfaceId="4">
                <MaterialRef Id="8e5896d0-92d4-41af-a4a8-6eb64855f4df" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="tmp5041" Id="a9d1d9c1-3353-40c9-b3a4-8da712e9f534">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\tmp5041.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Rotation="1.57079637050629" Scale="1">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\tmp5041.s3d" />
              </MeshData>
              <GeometryDataPieces>
                <GeometryDataPiece Id="6">
                  <MaterialRef Id="83863fce-4168-400e-9efb-0627c84ea5c3" />
                </GeometryDataPiece>
                <GeometryDataPiece Id="10">
                  <MaterialRef Id="4e3c3b60-a599-4666-a481-fca36ee17d27" />
                </GeometryDataPiece>
                <GeometryDataPiece Id="17">
                  <MaterialRef Id="8a721733-955f-4e36-94f5-2ed736755160" />
                </GeometryDataPiece>
              </GeometryDataPieces>
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="6">
                <MaterialRef Id="83863fce-4168-400e-9efb-0627c84ea5c3" />
              </Decoration>
              <Decoration SurfaceId="10">
                <MaterialRef Id="4e3c3b60-a599-4666-a481-fca36ee17d27" />
              </Decoration>
              <Decoration SurfaceId="17">
                <MaterialRef Id="8a721733-955f-4e36-94f5-2ed736755160" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Resource" Id="ff9df4e7-c487-4531-a221-8116b525c759">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Resource.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="8.474499">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Resource.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="264aaa33-7b57-47b0-8353-f5f72c41670d" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="ecd3fae6-344f-405c-b864-37d8c7546bf4" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Sink" Id="f5b0a0b7-4274-403c-981c-33d4b6e077a5">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Sink.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 3.576279E-07 0" Scale="5.228027">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Sink.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="bab850ad-84d5-4885-a81d-3f604b121144" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="def9c0aa-66b6-4b4e-b436-e0dfa0c0d5cf" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Source" Id="4253805c-d9dd-447f-b808-dc61ab3765de">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Source.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 -3.576279E-07 -1.490116E-08" Scale="5.10292">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Source.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="9699965b-b2a7-449d-a1aa-2b4b69e9f686" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="9539f632-7efb-49b3-a6cd-5c1627c06e27" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Tank" Id="b94b2a59-c20d-43bc-8176-f020511438d0">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Tank.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="5.11273970188239">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Tank.s3d" />
              </MeshData>
              <GeometryDataPieces>
                <GeometryDataPiece Id="0">
                  <MaterialRef Id="74f1f187-028b-4425-b284-dd9c23be8e23" />
                </GeometryDataPiece>
                <GeometryDataPiece Id="1">
                  <MaterialRef Id="268e2cef-ffcb-4c04-bc2c-a672faffee2a" />
                </GeometryDataPiece>
              </GeometryDataPieces>
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="74f1f187-028b-4425-b284-dd9c23be8e23" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="268e2cef-ffcb-4c04-bc2c-a672faffee2a" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Vehicle" Id="48f879b1-e7e3-497c-b456-433cc40b5fc6">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Vehicle.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="4.807791">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Vehicle.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="b1ccf372-8ea8-45c9-b0a6-3f354dead194" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="40faff5b-37d7-4bb6-aabc-dc51dbcd0e57" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
    </Symbols>
    <Definitions>
      <LinkDefinition Name="Pipe" Id="4d1d2941-3555-49c1-84ee-d56968f88fb5" Revision="19" Author="Sales and Support" Description="Carries high viscosity entity flows through an ellipitical Link by adjusting the flow speed to fully fill the Pipe from the starting end.   " ResourceLogic="True" DefaultWidth="0.25" DefaultHeight="0.25">
        <Lists>
          <StringList Name="FlowTypes">
            <Items>
              <Item Value="PushFromStart" />
              <Item Value="Continuous" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Input Flow Control" Description="Input Flow Control" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <ListProperty Name="FlowType" DisplayName="Flow Type" Description="The type of flow specified as Continuous or PushFromStart.   In Continuous flow the Pipe might become partically filled as each flow segment moves independently thru the Pipe, whereas in PushFromStart flow the Pipe is fully fiilled as each flow segment is pushed along the Pipe by its trailing flow segment.  " Category="Travel Logic" DefaultValue="Continuous" NullString="null" List="FlowTypes" />
          <Overrides>
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayName" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="WorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="CurrentSizeIndex" Visible="False" />
            <Override Name="Type" Visible="False" />
            <Override Name="InitialTravelerCapacity" Visible="False" />
            <Override Name="TrafficDirectionRule" Visible="False" />
            <Override Name="InitialDesiredDirection" Visible="False" />
            <Override Name="EntryRankingRule" Visible="True" />
            <Override Name="InitialDesiredSpeed" Visible="False" DefaultValue="Infinity" />
            <Override Name="EntityAlignment" Visible="False" />
            <Override Name="CellSpacingType" Visible="False" />
            <Override Name="NumberOfCells" Visible="False" />
            <Override Name="CellSize" Visible="False" />
            <Override Name="AutoAlignCells" Visible="False" />
            <Override Name="DrawnToScale" Visible="False" />
            <Override Name="LogicalLength" Visible="False" />
            <Override Name="CrossSectionShape" Visible="False" DefaultValue="Ellipse" />
            <Override Name="TrapezoidRatio" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <ElementReferenceState Name="LastEntityEntered" ElementType="Entity" />
        </States>
        <Events>
          <Event Name="NewEntityArrived" />
          <Event Name="EntityGap" />
        </Events>
        <Elements>
          <Element Type="Monitor" Name="MonitorLastEntity" Scope="Public">
            <Properties>
              <Property Name="StateVariableName">
                <Value>LastEntityEntered.Movement</Value>
              </Property>
              <Property Name="MonitorType">CrossingStateChange</Property>
              <Property Name="InitialThresholdValue">0</Property>
              <Property Name="TriggeredProcessName">GapForLastEntity</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnEntered" IsOverride="True" InterfaceProcessID="Link.OnEntered" BeginStepID="7" Description="Clear the need for a gap and set the desired speed.">
            <Properties />
            <Steps>
              <Step Type="Engage" Name="PipeMovement" ID="2">
                <Properties />
              </Step>
              <Step Type="Assign" Name="DesiredSpeed" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Pipe.DesiredSpeed</Value>
                  </Property>
                  <Property Name="NewValue">Link.CurrentVolumeFlowIn.Rate / (Link.Size.Width * Link.Size.Height * Math.PI / 4)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="2" />
              </Step>
              <Step Type="Assign" Name="NoLastEntity" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>LastEntityEntered</Value>
                  </Property>
                  <Property Name="NewValue">Nothing</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="NewEntityArrived" ID="5">
                <Properties>
                  <Property Name="EventName">NewEntityArrived</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="DisableMonitor" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MonitorLastEntity.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Decide" Name="PushFlow" ID="7">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnReachedEnd" IsOverride="True" InterfaceProcessID="Link.OnReachedEnd" BeginStepID="4" Description="Transfer from the pipe">
            <Properties />
            <Steps>
              <Step Type="Transfer" Name="FromPipe" ID="2">
                <Properties>
                  <Property Name="FromType">EndOfLink</Property>
                  <Property Name="TokenWaitAction">WaitUntilTransferringEvent</Property>
                </Properties>
              </Step>
              <Step Type="Disengage" Name="FromPipePosition" ID="3">
                <Properties>
                  <Property Name="EntityMovementRate">Infinity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="2" />
              </Step>
              <Step Type="Decide" Name="PushFlow" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="2" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollided" IsOverride="True" InterfaceProcessID="Link.OnCollided" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="PushFlow" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Disengage" Name="FromPipePosition" ID="3">
                <Properties>
                  <Property Name="EntityMovementRate">Math.If(Entity.NextEntityAheadOnLink != Nothing, Math.Min(Movement.Rate, Entity.NextEntityAheadOnLink.Movement.Rate), Movement.Rate)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollisionCleared" IsOverride="True" InterfaceProcessID="Link.OnCollisionCleared" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="PushFlow" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Engage" Name="WithPipePosition" ID="3">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTrailingEdgeEntered" IsOverride="True" InterfaceProcessID="Link.OnTrailingEdgeEntered" BeginStepID="9" Description="If in flow has stopped create a small gap following this entity so that flow can restart.">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="NoInFlowPipeFlow" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentVolumeFlowIn.Rate == 0) &amp;&amp; (Link.Movement.Rate&gt; 0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Assign" Name="StopPipeFlow" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Pipe.DesiredSpeed</Value>
                  </Property>
                  <Property Name="NewValue">0</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="StillLastEntity" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">LastEntityEntered == Token.AssociatedObject</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="LastEntity" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>LastEntityEntered</Value>
                  </Property>
                  <Property Name="NewValue">Token.AssociatedObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Wait" Name="GapOrEntity" ID="6">
                <Properties>
                  <Property Name="EventName">NewEntityArrived</Property>
                  <Property Name="Events">
                    <Rows>
                      <Properties>
                        <Property Name="EventsEventName">EntityGap</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="EnableMonitor" ID="7">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MonitorLastEntity.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Assign" Name="CrossingThreshold" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MonitorLastEntity.CurrentThresholdValue</Value>
                  </Property>
                  <Property Name="NewValue">LastEntityEntered.Entity.Size.Length * 1.000001</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="PushFlow" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">FlowType == List.FlowTypes.PushFromStart</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="2" />
              </Step>
            </Steps>
          </Process>
          <Process Name="GapForLastEntity" BeginStepID="2" Description="The necessary gap has been formed.">
            <Properties />
            <Steps>
              <Step Type="Fire" Name="EntityGap" ID="2">
                <Properties>
                  <Property Name="EventName">EntityGap</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <TransporterDefinition Name="RailCar" Id="2c93c9ee-309c-4afc-8bb9-8ab0883811ea" Revision="43" BaseClass="Vehicle" Author="Sales and Support" Description="A Railcar may be connected and disconnected to a train of RailCars/Locomotives.   A RailCar may pickup and drop-off cargo at ControlNodes." Version="1" CheckBaseForAdvancedProperties="True">
        <Lists />
        <PropertyDefinitions>
          <Categories>
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Resource Logic" Description="Resource Logic" InitiallyExpanded="False" />
            <Category Name="Reliability Logic" Description="Reliability Logic" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="ConnectTime" DisplayName="Connect Time" Description="The time required to connect this Railcar to end of the train." Category="Transport Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <ExpressionProperty Name="DisconnectTime" DisplayName="Disconnect Time" Description="Time required to disconnect this Railcar from the train and send it into the parking area at the drop destination." Category="Transport Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <TransporterProperty Name="InitialPickupLocomotive" DisplayName="Initial Pickup Locomotive" Description="Initial Locomotive that is assigned to pickup this Railcar from its parking area." Category="Routing Logic" DefaultValue="null" Required="False" NullString="null" ValidObjectType="Transporter" />
          <NodeProperty Name="InitialDropDestination" DisplayName="Initial Drop Destination" Description="The drop destination where this Railcar will be disconnected from the train and sent to the parking area at its destination." Category="Routing Logic" DefaultValue="null" Required="False" NullString="null" ValidObjectType="Node" />
          <Overrides>
            <Override Name="CapacityType" ComplexityLevel="Advanced" />
            <Override Name="WorkSchedule" ComplexityLevel="Advanced" />
            <Override Name="InitialCapacity" ComplexityLevel="Advanced" />
            <Override Name="RankingRule" ComplexityLevel="Advanced" />
            <Override Name="RankingExpression" ComplexityLevel="Advanced" />
            <Override Name="InitialDesiredSpeed" Visible="False" ComplexityLevel="Advanced" />
            <Override Name="InitialNumberInSystem" ComplexityLevel="Basic" />
            <Override Name="InitialSequence" ComplexityLevel="Advanced" />
            <Override Name="ParkWhileBusy" Visible="False" ComplexityLevel="Advanced" />
            <Override Name="TaskSelectionStrategy" Visible="False" />
            <Override Name="LoadTime" ComplexityLevel="Basic" />
            <Override Name="UnloadTime" ComplexityLevel="Basic" />
            <Override Name="ParkToLoadUnload" Visible="False" />
            <Override Name="MinimumDwellTimeType" ComplexityLevel="Advanced" />
            <Override Name="MinimumDwellTime" ComplexityLevel="Advanced" />
            <Override Name="MinimumDwellTimeExpirationEventName" ComplexityLevel="Advanced" />
            <Override Name="MinimumDwellTimeCondition" ComplexityLevel="Advanced" />
            <Override Name="RoutingType" Visible="False" />
            <Override Name="RouteSequence" Visible="False" />
            <Override Name="IdleAction" Visible="False" />
            <Override Name="OffShiftAction" Visible="False" />
            <Override Name="FailureType" ComplexityLevel="Advanced" />
            <Override Name="FailureEventName" ComplexityLevel="Advanced" />
            <Override Name="CountBetweenFailures" ComplexityLevel="Advanced" />
            <Override Name="UptimeBetweenFailures" ComplexityLevel="Advanced" />
            <Override Name="TimeToRepair" ComplexityLevel="Advanced" />
            <Override Name="RunInitializedAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="RunEndingAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="AllocatedAddOnProcess" Visible="True" ComplexityLevel="Advanced" />
            <Override Name="ReleasedAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="FailedAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="RepairingAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="RepairedAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="EnteredNodeAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="UnloadedAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="LoadedAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="ExitingNodeAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="EvaluatingTransportRequestAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="EvaluatingSeizeRequestAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="OnShiftAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="OffShiftAddOnProcess" ComplexityLevel="Advanced" />
            <Override Name="CapitalCostPerVehicle" ComplexityLevel="Advanced" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <ElementReferenceState Name="PredecessorRailCar" ElementType="Transporter" />
          <ElementReferenceState Name="SuccessorRailCar" ElementType="Transporter" />
          <ElementReferenceState Name="MyLocomotive" ElementType="Transporter" />
          <BooleanState Name="ClosingToReconnect" />
          <ElementReferenceState Name="DropDestination" ElementType="Node" />
          <ElementReferenceState Name="PickupLocomotive" ElementType="Transporter" />
        </States>
        <Events>
          <Event Name="CloseCompleted" />
        </Events>
        <UsedObjects>
          <UsedObject Name="Locomotive" />
        </UsedObjects>
        <Elements />
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="5" Description="x">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Park" Name="AtInitialNode" ID="2">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">InitialNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="6" />
                <Exit Name="Failed" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfUnpark" ExclusionExpression="Math.If((RoutingType==List.VehicleRoutingType.FixedRoute)||(IdleAction==List.VehicleIdleAction.Roam),0,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="4">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState!=List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
              </Step>
              <Step Type="PlanVisit" Name="InitialMoveOrTransportRequests" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.OnDemand,0,2)" ID="7">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="7" />
                <Exit Name="Failed" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="Locomotive" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive</Value>
                  </Property>
                  <Property Name="NewValue">InitialPickupLocomotive[1]</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="2" />
              </Step>
              <Step Type="Assign" Name="DropNode" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>DropDestination</Value>
                  </Property>
                  <Property Name="NewValue">InitialDropDestination</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Decide" Name="LocomotiveDefined" ID="10">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">InitialPickupLocomotive.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="2" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnVisitingNode" IsOverride="True" InterfaceProcessID="Entity.OnVisitingNode" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="EnteredNode_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">EnteredNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfNotVisitingNode" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(IgnoreVisitingCurrentNode, True, ResourceState==List.ResourceStateName.Idle, False, ResourceState==List.ResourceStateName.OffShift, ((OffShiftAction==List.VehicleOffShiftAction.GoToHome)||(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome))&amp;&amp;(HomeNode!=Nothing)&amp;&amp;(DestinationNode==HomeNode)&amp;&amp;(CurrentNode!=HomeNode),(DestinationNode!=Nothing)&amp;&amp;(CurrentNode!=DestinationNode), True, False)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="32" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfBusy" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Busy)||(ResourceState==List.ResourceStateName.OffShiftBusy)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="27" />
                <Exit Name="False" Type="Alternate" NextID="30" />
              </Step>
              <Step Type="Arrive" Name="AtDestination" ID="5">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="34" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="6">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Dropoff" Name="Rider" ID="8">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="UnloadTime">UnloadTime</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="9" />
                <Exit Name="Failed" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Wait" Name="UntilRiderUnloaded" ExclusionExpression="!UnloadedAddOnProcess.HasValue" ID="9">
                <Properties>
                  <Property Name="EventName">RiderUnloaded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="63" />
              </Step>
              <Step Type="Pickup" Name="Rider" ID="10">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                  <Property Name="LoadTime">LoadTime</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="11" />
                <Exit Name="Failed" Type="Alternate" NextID="46" />
              </Step>
              <Step Type="Wait" Name="UntilRiderLoaded" ExclusionExpression="!LoadedAddOnProcess.HasValue" ID="11">
                <Properties>
                  <Property Name="EventName">RiderLoaded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="64" />
              </Step>
              <Step Type="Decide" Name="IfFixedRouting" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.FixedRoute,1,2)" ID="12">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RoutingType==List.VehicleRoutingType.FixedRoute</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="41" />
                <Exit Name="False" Type="Alternate" NextID="14" />
              </Step>
              <Step Type="SetNode" Name="ToNextSequenceDestination" ID="13">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationType">BySequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="32" />
              </Step>
              <Step Type="SelectDropoff" Name="NextTransportDropoff" ID="14">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="32" />
                <Exit Name="Failed" Type="Alternate" NextID="15" />
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="15">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="32" />
                <Exit Name="Failed" Type="Alternate" NextID="16" />
              </Step>
              <Step Type="Release" Name="Vehicle" ID="16">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">SeizedResources.CapacityOwnedOf(ParentObject)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="PlanVisit" Name="NewTransportRequests" ID="17">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="17" />
                <Exit Name="Failed" Type="Alternate" NextID="18" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="18">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="52" />
                <Exit Name="False" Type="Alternate" NextID="32" />
              </Step>
              <Step Type="Decide" Name="IfParking" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.ParkAtNode,1,IdleAction!=List.VehicleIdleAction.ParkAtHome,2,0)" ID="19">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode==CurrentNode)||(HomeNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="31" />
                <Exit Name="False" Type="Alternate" NextID="20" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.ParkAtHome,1,IdleAction!=List.VehicleIdleAction.GoToHome,2,0)" ID="20">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode!=Nothing)&amp;&amp;(HomeNode!=CurrentNode)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="21" />
              </Step>
              <Step Type="Decide" Name="IfRoaming" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.Roam,1,2)" ID="21">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IdleAction==List.VehicleIdleAction.Roam</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="32" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="SetNode" Name="ToHome" ID="22">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">HomeNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="32" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="23">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="35" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="24">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="25">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="17" />
                <Exit Name="False" Type="Alternate" NextID="38" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="26">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Decide" Name="IfParked" ExclusionExpression="!ParkWhileBusy" ID="27">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="28" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="28">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="29" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="29">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfLoadingUnloading" ID="30">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(ResourceState==List.ResourceStateName.OffShift, False, (ResourceState==List.ResourceStateName.Transporting)||(ResourceState==List.ResourceStateName.OffShiftTransporting), True, Node.RidePickupQueue.NumberWaiting&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="43" />
                <Exit Name="False" Type="Alternate" NextID="25" />
              </Step>
              <Step Type="Decide" Name="IfParked" ID="31">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="24" />
                <Exit Name="False" Type="Alternate" NextID="26" />
              </Step>
              <Step Type="Decide" Name="IfParked" ID="32">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="36" />
                <Exit Name="False" Type="Alternate" NextID="37" />
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="33">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="34">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="3" />
                <Exit Name="Failed" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfIdleOrOffShift" ID="35">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Idle)||(ResourceState==List.ResourceStateName.OffShift)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="24" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="IgnoreVisitingCurrentNodeFlag" ID="36">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>IgnoreVisitingCurrentNode</Value>
                  </Property>
                  <Property Name="NewValue">CurrentNode!=DestinationNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="33" />
              </Step>
              <Step Type="Assign" Name="IgnoreVisitingCurrentNodeFlag" ID="37">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>IgnoreVisitingCurrentNode</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="38">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="39" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfParking" ExclusionExpression="Math.If(OffShiftAction==List.VehicleOffShiftAction.ParkAtNode,1,OffShiftAction!=List.VehicleOffShiftAction.ParkAtHome,2,0)" ID="39">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode==CurrentNode)||(HomeNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="31" />
                <Exit Name="False" Type="Alternate" NextID="40" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ExclusionExpression="Math.If(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome,1,OffShiftAction!=List.VehicleOffShiftAction.GoToHome,2,0)" ID="40">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode!=Nothing)&amp;&amp;(HomeNode!=CurrentNode)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="Release" Name="Vehicle" ID="41">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">(ResourceState==List.ResourceStateName.OffShiftTransporting)&amp;&amp;(RideStation.Contents==0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="42" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="42">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="39" />
                <Exit Name="False" Type="Alternate" NextID="51" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ExclusionExpression="MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement" ID="43">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="44" />
              </Step>
              <Step Type="Fire" Name="MinimumDwellTimeExpirationResetEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.SpecificTime" ID="44">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="45" />
              </Step>
              <Step Type="Subscribe" Name="ToMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="45">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="55" />
              </Step>
              <Step Type="Decide" Name="IfMinimumDwellTimeExpired" ExclusionExpression="MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement" ID="46">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="56" />
                <Exit Name="False" Type="Alternate" NextID="47" />
              </Step>
              <Step Type="Decide" Name="IfMinimumDwellTimeCondition" ID="47">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(MinimumDwellTimeCondition.HasValue, MinimumDwellTimeCondition, True)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="48" />
                <Exit Name="False" Type="Alternate" NextID="49" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="48">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ID="49">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="50" />
              </Step>
              <Step Type="UnSubscribe" Name="FromMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="50">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="56" />
              </Step>
              <Step Type="Assign" Name="BeforeNextDestinationAssignments" ID="51">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingRiderReservation.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Decide" Name="NotFollowing" ID="52">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PredecessorRailCar == Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="19" />
                <Exit Name="False" Type="Alternate" NextID="32" />
              </Step>
              <Step Type="Assign" Name="StopLocomotive" ID="53">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive.Locomotive.Movement.Rate</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Assign" Name="RestartLocomotive" ID="54">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">MyLocomotive.DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="60" />
              </Step>
              <Step Type="Decide" Name="HasLocomotive" ID="55">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MyLocomotive != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="57" />
                <Exit Name="False" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Decide" Name="HasLocomotive" ID="56">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MyLocomotive != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="58" />
                <Exit Name="False" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Assign" Name="IncrStopRequest" ID="57">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive.Locomotive.StopRequest</Value>
                  </Property>
                  <Property Name="NewValue">MyLocomotive.Locomotive.StopRequest + 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="53" />
              </Step>
              <Step Type="Assign" Name="DecrStopRequest" ID="58">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MyLocomotive.Locomotive.StopRequest</Value>
                  </Property>
                  <Property Name="NewValue">MyLocomotive.Locomotive.StopRequest - 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="59" />
              </Step>
              <Step Type="Decide" Name="NoStopRequest" ID="59">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MyLocomotive.Locomotive.StopRequest &lt; 1</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="54" />
                <Exit Name="False" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Decide" Name="SoloLocomotive" ID="60">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Is.Locomotive &amp;&amp; (SuccessorRailCar == Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="37" />
              </Step>
              <Step Type="Execute" Name="RiderUnloaded_AddOnProcess" ID="61">
                <Properties>
                  <Property Name="ProcessName">MyLocomotive.Locomotive.RailcarRiderUnloadedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Execute" Name="RiderLoaded_AddOnProcess" ID="62">
                <Properties>
                  <Property Name="ProcessName">MyLocomotive.Locomotive.RailcarRiderLoadedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Decide" Name="ProcessDefined" ID="63">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MyLocomotive.Locomotive.RailcarRiderUnloadedAddOnProcess != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="61" />
                <Exit Name="False" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Decide" Name="ProcessDefined" ID="64">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MyLocomotive.Locomotive.RailcarRiderLoadedAddOnProcess != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="62" />
                <Exit Name="False" Type="Alternate" NextID="10" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderReservationAccepted" IsOverride="True" InterfaceProcessID="Transporter.OnRiderReservationAccepted" BeginStepID="3">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RailcarRiderReservationAccepted_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">MyLocomotive.Locomotive.RailcarRiderReservationAcceptedAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="LocomotiveDefined" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(MyLocomotive != Nothing) &amp;&amp; (MyLocomotive.Locomotive.RailcarRiderReservationAcceptedAddOnProcess != Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="2" />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <Graphics>
            <Queue Queue="RideStation.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="0.923027879347295 4.73682900802762 -0.0214215779708934" />
                <Point Location="-1.0769721206527 4.73682900802762 -0.0214215779708934" />
              </Points>
            </Queue>
            <SymbolInstance Center="0.0127291242362506 0 0.0127291242362579" ExternallyVisible="True">
              <SymbolRef Id="22c7c663-1ead-470a-9e39-b2f50c610b39" />
            </SymbolInstance>
            <Ellipse Center="8.794514962919 0.862745140547893 -0.000110686758884315" Width="0.6695371800543" Height="0.435283522204124" ExternallyVisible="True" YHeight="0.100000001490116">
              <Decorations>
                <Decoration SurfaceId="0">
                  <MaterialRef Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" />
                </Decoration>
                <Decoration SurfaceId="1">
                  <MaterialRef Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" />
                </Decoration>
              </Decorations>
            </Ellipse>
            <Ellipse Center="-8.79768925662761 0.953578939807703 0.00781295645857716" Width="0.714898373248666" Height="0.435283522204124" ExternallyVisible="True" YHeight="0.100000001490116">
              <Decorations>
                <Decoration SurfaceId="0">
                  <MaterialRef Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" />
                </Decoration>
                <Decoration SurfaceId="1">
                  <MaterialRef Id="419ee0d4-ed99-4797-adeb-5e1fb5882239" />
                </Decoration>
              </Decorations>
            </Ellipse>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </TransporterDefinition>
      <TransporterDefinition Name="Vehicle" Id="840e1952-0a07-4fce-ae96-9d4ddaa9e1ef" Revision="192" Author="Sales and Support" Description="The Vehicle object may be used to transport entity objects between node locations. Additionally, an 'On Demand' routing type vehicle may be used as a moveable resource that is seized and released for non-transport related tasks by model process logic." ResourceLogic="True" CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="74">Version 2.36: Updated the Vehicle object to provide a ResourceState state variable tracking Idle, Busy, and Failed states (and statistics). Additionally, an 'On Demand' routing type vehicle may now be used as a moveable resource that is seized and released for tasks by model process logic. Significant changes to the Vehicle object's process logic were made to support these new features. An obsoleted 'IsIdle' state variable and 'RideReserved' event were also removed.</ChangeDescription>
          <ChangeDescription Version="75">Version 2.38: Updated the Vehicle object to fix a bug where the vehicle's process logic sometimes hung if using the 'Loaded' or 'Unloaded' add-on process trigger features. This fix to the Vehicle process logic involved adding a Math.Epsilon delay into the 'OnRiderLoading' and 'OnRiderUnloading' processes.</ChangeDescription>
          <ChangeDescription Version="76">Version 2.39: Updated the Vehicle object process logic to specify all of the object's process delays as non-interruptible.</ChangeDescription>
          <ChangeDescription Version="94">Version 2.40: The 'Transport Logic' property category is now first in the category display order in the Properties Window. The 'None' Idle Action option was renamed to 'Remain In Place'. The display name for the EvaluatingAllocationAddOnProcess property was changed to 'Evaluating Seize Request'. The display name for the EvaluatingRiderAddOnProcess was changed to 'Evaluating Transport Request'. The 'Network' and 'Desired Speed' property display names were changed to 'Initial Network' and 'Initial Desired Speed' respectively. New 'Allocated' and 'Released' add-on process triggers were added and the 'Allocated' and 'Released' events fired by the vehicle were made public. Added a new 'Allocated' public process. Added 'Transporting' and 'FailedBusy' state values to the object's ResourceState state variable. Restructured the failure-related process logic. In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="95">Version 2.41: Added customized resource utilization calculation for the object using its 'ResourceState' list state.</ChangeDescription>
          <ChangeDescription Version="96">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="99">Version 3.43: Updated the Vehicle object's OnVisitingNode process logic to now include a SelectVisit step attempt that searches for an accepted visit request (either a transport pickup or a seize visit) before considering the vehicle as 'Idle'. Also, if the vehicle resource is released from transporting activity and then immediately reseized, added some decision logic to account for possibility of the new Seize requesting a visit to the same node destination as the vehicle's current node.</ChangeDescription>
          <ChangeDescription Version="100">Version 3.44: 'SeizedObjects.UnitsOwned' function renamed to 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="103">Version 3.45: A Vehicle object in the 'Transporting' state will now accept multiple transport reservation requests up to its ride capacity if the request(s) originate from the same pickup location that the vehicle is already traveling to.</ChangeDescription>
          <ChangeDescription Version="104">Version 3.46: Removed special-casing of ride capacity '1' in the vehicle's OnVisitingNode process to allow dynamic assignments of the vehicle's ride capacity to consistently work as expected.</ChangeDescription>
          <ChangeDescription Version="107">Version 3.47: Updated the Vehicle object's process logic to handle the scenario where, if the vehicle has picked up a rider who did not make a reservation, the vehicle will still accept multiple transport reservation requests up to its ride capacity while at the same pickup point. A vehicle object also now always immediately goes into the Transporting state if picking up an unreserved rider. Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="112">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'. The 'Exiting Node' add-on process trigger is now also called when the Worker is exiting a node by parking in the node's parking station. Added new 'Park While Busy' and 'Park to Load/Unload' properties.</ChangeDescription>
          <ChangeDescription Version="113">Version 3.52: If the model's 'Disable Randomness' option is being used, the object's 'Reliability Logic' is now automatically disabled to not generate any failure occurrences.</ChangeDescription>
          <ChangeDescription Version="116">Version 3.53: Conversion to 'OnEvaluatingMoveRequest' and 'OnMoveRequestAccepted' standard interface processes. Added vehicle support to allow multiple move requests by an owning entity.</ChangeDescription>
          <ChangeDescription Version="120">Version 3.54: Usage of 'Run.RandomnessDisabled' function instead of deprecated 'DisableRandomness' function. Added new Notify step to 'OnCapacityChanged' process to output a warning if the vehicle's resource capacity is assigned a value other than 1. Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="121">Version 3.55: Conversion to 'OnRiderReservationAccepted' standard interface process.</ChangeDescription>
          <ChangeDescription Version="122">Version 3.56: Conversion to 'OnEvaluatingSeizeRequest' standard interface process.</ChangeDescription>
          <ChangeDescription Version="124">Version 3.57: OnRunInitialized logic change - Never try to unpark vehicle if not parked. Removed some unnecessary Wait steps from the 'OnVisitingNode' process logic.</ChangeDescription>
          <ChangeDescription Version="130">Version 4.58: OnVisitingNode process logic - After arriving to the destination of a requested move, check the vehicle's visit request queue for additional accepted move requests. OnRunInitialized process logic - After parking at the initial node, do a PlanVisit step to check for initial move or transport requests. 'Dynamic Objects' property category renamed to 'Population'. Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="131">Version 4.59: Process logic now uses new entity 'CurrentNode' and 'DestinationNode' object reference functions instead of deprecated 'CurrentNodeID' and 'DestinationNodeID' functions.</ChangeDescription>
          <ChangeDescription Version="132">Version 4.60: Process logic now uses new object 'SeizedResources.CapacityUnitsOwned' function instead of deprecated 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="134">Version 4.61: Added new 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="135">Version 4.62: Added new 'Financials-&gt;Transport Costs' property category.</ChangeDescription>
          <ChangeDescription Version="138">Version 4.63: Reordered the position of the 'Financials' property category.  Added new 'Financials-&gt;Resource Costs' property category.</ChangeDescription>
          <ChangeDescription Version="145">Version 4.65: Process logic now uses new object 'SeizedResources.CapacityOwnedOf' function instead of deprecated 'SeizedResources.CapacityUnitsOwned'. Private 'HomeNodeID' state variable replaced by new Public 'HomeNode' node reference state variable. Private 'IgnoredDestinationNodeID' state variable replaced by new Private boolean 'IgnoreVisitingCurrentNode' state variable assignment. 'Repairing' add-on process trigger marked as obsolete and is no longer displayed in the Properties window if not previously defined.</ChangeDescription>
          <ChangeDescription Version="146">Version 4.66: Added Work Schedule support.</ChangeDescription>
          <ChangeDescription Version="149">Version 4.68: Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'. Renamed 'EvaluatingAllocationAddOnProcess' property to 'EvaluatingSeizeRequestAddOnProcess'. Renamed 'EvaluatingRiderAddOnProcess' property to 'EvaluatingTransportRequestAddOnProcess'. Renamed 'Process Logic' property category to 'Resource Logic'.</ChangeDescription>
          <ChangeDescription Version="151">Version 4.71: Process logic now uses new transporter 'RideStationLoad' function instead of deprecated 'RideCapacityRemaining'. Renamed 'EventName' property to 'FailureEventName'.</ChangeDescription>
          <ChangeDescription Version="163">Version 4.73: New 'Minimum Dwell Time' related features now available in the 'Transport Logic' category. In the process logic, removed the 'RiderPickupsFinished' event and the 'OnRiderReservationsPickedUp' process which was triggered by that event.</ChangeDescription>
          <ChangeDescription Version="164">Version 4.74: If dwelling due to minimum dwell time requirement, and the vehicle goes off-shift, the 'Dwell Only If' condition is now rechecked.</ChangeDescription>
          <ChangeDescription Version="182">Version 4.75: Added 'OnEnteredFreeSpace' process logic to support free space travel.</ChangeDescription>
          <ChangeDescription Version="183">Version 4.76: Updates required due to Suspend &amp; Resume step enhancements.</ChangeDescription>
          <ChangeDescription Version="184">Version 5.80: Fixed Route Vehicle - 'Minimum Dwell Time' option related bug fix.</ChangeDescription>
          <ChangeDescription Version="185">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="186">Version 5.88: If the 'Minimum Dwell Time' feature is being used, by default the vehicle will now dwell at a node only if the node is a TransferNode with its RideOnTransporter property set to 'True'.</ChangeDescription>
          <ChangeDescription Version="187">Version 5.90: Some simplification of the vehicle's 'OnEnteredFreeSpace' process logic.</ChangeDescription>
          <ChangeDescription Version="189">Version 5.91: Fixed issues assigning a correct value to the vehicle's 'OnEvaluatingRiderAtPickup.Enabled' state. Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="190">Version 5.92: Fixed issues assigning the resource state of a fixed route vehicle if using both work schedule and failure related features.</ChangeDescription>
          <ChangeDescription Version="192">Version 5.95: Updates to the 'OnCapacityChanged' process logic.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="149" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
          <ChangeStringReplacement Version="149" RegularExpressionPattern="(^|[^\w_])(?i:EvaluatingRiderAddOnProcess)([^\w_]|$)" ReplacementString="$1EvaluatingTransportRequestAddOnProcess$2" />
          <ChangeStringReplacement Version="149" RegularExpressionPattern="(^|[^\w_])(?i:EvaluatingAllocationAddOnProcess)([^\w_]|$)" ReplacementString="$1EvaluatingSeizeRequestAddOnProcess$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="VehicleMinimumDwellTimeType">
            <Items>
              <Item Value="NoRequirement" />
              <Item Value="SpecificTime" />
              <Item Value="DwellUntilEvent" />
              <Item Value="DwellUntilFull" />
            </Items>
          </StringList>
          <StringList Name="VehicleRoutingType">
            <Items>
              <Item Value="OnDemand" />
              <Item Value="FixedRoute" />
            </Items>
          </StringList>
          <StringList Name="VehicleIdleAction">
            <Items>
              <Item Value="ParkAtNode" />
              <Item Value="ParkAtHome" />
              <Item Value="Roam" />
              <Item Value="GoToHome" />
              <Item Value="None" />
            </Items>
          </StringList>
          <StringList Name="VehicleOffShiftAction">
            <Items>
              <Item Value="ParkAtNode" />
              <Item Value="ParkAtHome" />
              <Item Value="GoToHome" />
              <Item Value="None" />
            </Items>
          </StringList>
          <StringList Name="VehicleFailureType">
            <Items>
              <Item Value="NoFailures" />
              <Item Value="CalendarTimeBased" />
              <Item Value="EventCountBased" />
            </Items>
          </StringList>
          <StringList Name="ResourceStateName">
            <Items>
              <Item Value="Idle" />
              <Item Value="Busy" />
              <Item Value="Blocked" />
              <Item Value="Failed" />
              <Item Value="OffShift" />
              <Item Value="FailedBusy" />
              <Item Value="OffShiftBusy" />
              <Item Value="Transporting" />
              <Item Value="FailedTransporting" />
              <Item Value="OffShiftTransporting" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Resource Logic" Description="Resource Logic" InitiallyExpanded="False" />
            <Category Name="Reliability Logic" Description="Reliability Logic" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <BooleanProperty Name="ParkWhileBusy" DisplayName="Park While Busy" Description="Indicates whether this Vehicle object should park while busy at a node due to a seize request. Parking a vehicle can be useful to avoid blocking other travelers on the network." ComplexityLevel="Advanced" Category="Resource Logic" DefaultValue="False" NullString="null" />
          <EnumProperty Name="TaskSelectionStrategy" DisplayName="Task Selection Strategy" Description="The strategy used by the Vehicle object to select its next transport pickup or dropoff task." ComplexityLevel="Advanced" Category="Transport Logic" DefaultValue="First In Queue" NullString="null" EnumType="TripSelectionGoal">
            <Captions>
              <Caption Value="SmallestDistance" Display="Smallest Distance" />
              <Caption Value="LargestDistance" Display="Largest Distance" />
              <Caption Value="SmallestPriority" Display="Smallest Priority" />
              <Caption Value="LargestPriority" Display="Largest Priority" />
              <Caption Value="FirstInQueue" Display="First In Queue" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="LoadTime" DisplayName="Load Time" Description="The time required for this Vehicle object to load an entity (i.e., the load time per entity)." ComplexityLevel="Advanced" Category="Transport Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <ExpressionProperty Name="UnloadTime" DisplayName="Unload Time" Description="The time required for this Vehicle object to unload an entity (i.e., the unload time per entity)." ComplexityLevel="Advanced" Category="Transport Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <BooleanProperty Name="ParkToLoadUnload" DisplayName="Park to Load/Unload" Description="Indicates whether this Vehicle object should park to load and unload entities at a node. Parking a vehicle can be useful to avoid blocking other travelers on the network." ComplexityLevel="Advanced" Category="Transport Logic" DefaultValue="False" NullString="null" />
          <ListProperty Name="MinimumDwellTimeType" DisplayName="Minimum Dwell Time Type" Description="Specifies the minimum dwell time requirement for this Vehicle object when loading and unloading entities at a node. A 'minimum dwell time' is a minimum amount of time the vehicle is required to wait, or 'dwell', at a node to load and unload entities." ComplexityLevel="Advanced" Category="Transport Logic" DefaultValue="No Requirement" NullString="null" List="VehicleMinimumDwellTimeType">
            <Captions>
              <Caption Value="NoRequirement" Display="No Requirement" />
              <Caption Value="SpecificTime" Display="Specific Time" />
              <Caption Value="DwellUntilEvent" Display="Dwell Until Event" />
              <Caption Value="DwellUntilFull" Display="Dwell Until Full" />
            </Captions>
          </ListProperty>
          <ExpressionProperty Name="MinimumDwellTime" DisplayName="Minimum Dwell Time" Description="The specific minimum amount of time that this Vehicle object is required to wait, or 'dwell', at a node to load and unload entities." ComplexityLevel="Advanced" DefaultValue="0.0" Parent="MinimumDwellTimeType" NullString="null" UnitType="Time">
            <Switch Property="MinimumDwellTimeType" Value="SpecificTime" />
          </ExpressionProperty>
          <EventProperty Name="MinimumDwellTimeExpirationEventName" DisplayName="Event Name" Description="The name of the event that will indicate the expiration of the minimum wait time requirement for this Vehicle object when loading and unloading entities at a node." ComplexityLevel="Advanced" Parent="MinimumDwellTimeType" NullString="null">
            <Switch Property="MinimumDwellTimeType" Value="DwellUntilEvent" />
          </EventProperty>
          <ExpressionProperty Name="MinimumDwellTimeCondition" DisplayName="Dwell Only If" Description="If specified, this condition will be used to indicate whether the vehicle must respect the minimum dwell time at a node if that requirement has not yet expired, thereby forcing the vehicle to wait, or 'dwell', at the node for possible additional loads.&#xD;&#xA;&#xD;&#xA;Example uses of this property might include allowing the vehicle to exit a node before the minimum dwell time has expired if the vehicle has reached full ride capacity, or if there is little to no chance of additional loads. Another example condition might be to only respect the minimum dwell time requirement if the vehicle is at a node meeting some specific criteria." ComplexityLevel="Advanced" DefaultValue="Math.If($(DefinitionName).CurrentNode.Is.TransferNode, $(DefinitionName).CurrentNode.TransferNode.RideOnTransporter, False) &amp;&amp; ($(DefinitionName).RideStation.Capacity &gt; $(DefinitionName).RideStationLoad) &amp;&amp; ($(DefinitionName).ResourceState == 7)" Required="False" Parent="MinimumDwellTimeType" NullString="null">
            <Switch Property="MinimumDwellTimeType" Comparison="NotEqual" Value="NoRequirement" />
          </ExpressionProperty>
          <NodeProperty Name="InitialNode" DisplayName="Initial Node (Home)" Description="The initial node location of this Vehicle object at the beginning of the simulation run. Also indicates the vehicle's initial 'Home' location if the object is specified to 'Park At Home' or 'Go To Home' when idle." Category="Routing Logic" Required="False" NullString="null" ValidObjectType="Node" />
          <ListProperty Name="RoutingType" DisplayName="Routing Type" Description="Specifies the routing behavior of this vehicle. If 'On Demand', then the vehicle will route to locations on the network according to visit requests. An 'on demand' vehicle may also be used as a moveable resource that is seized and released for non-transport related tasks by model process logic. If 'Fixed Route', then the vehicle will follow a fixed route sequence to transport riders and will only load and unload entities at locations on the specified route." Category="Routing Logic" DefaultValue="On Demand" NullString="null" List="VehicleRoutingType">
            <Captions>
              <Caption Value="OnDemand" Display="On Demand" />
              <Caption Value="FixedRoute" Display="Fixed Route" />
            </Captions>
          </ListProperty>
          <SequenceProperty Name="RouteSequence" DisplayName="Route Sequence" Description="The sequence table that defines the route sequence that this vehicle will loop." Category="Routing Logic" NullString="null">
            <Switch Property="RoutingType" Value="FixedRoute" />
          </SequenceProperty>
          <ListProperty Name="IdleAction" DisplayName="Idle Action" Description="The action of this Vehicle object when it does not have any tasks to perform." ComplexityLevel="Advanced" Category="Routing Logic" DefaultValue="Park At Node" NullString="null" List="VehicleIdleAction">
            <Switch Property="RoutingType" Value="OnDemand" />
            <Captions>
              <Caption Value="ParkAtNode" Display="Park At Node" />
              <Caption Value="ParkAtHome" Display="Park At Home" />
              <Caption Value="GoToHome" Display="Go To Home" />
              <Caption Value="None" Display="Remain In Place" />
            </Captions>
          </ListProperty>
          <ListProperty Name="OffShiftAction" DisplayName="Off Shift Action" Description="The action of this Vehicle object when it goes 'off shift'. Note that, if the vehicle is busy or transporting when an off shift period begins, then this action will be taken when the vehicle is released from (i.e., finishes) the remaining tasks." ComplexityLevel="Advanced" Category="Routing Logic" DefaultValue="Park At Node" NullString="null" List="VehicleOffShiftAction">
            <Captions>
              <Caption Value="ParkAtNode" Display="Park At Node" />
              <Caption Value="ParkAtHome" Display="Park At Home" />
              <Caption Value="GoToHome" Display="Go To Home" />
              <Caption Value="None" Display="Remain In Place" />
            </Captions>
          </ListProperty>
          <ListProperty Name="FailureType" DisplayName="Failure Type" Description="Specifies whether this object has failures that affect the object's availability, and the method used to trigger the failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="No Failures" NullString="null" List="VehicleFailureType">
            <Captions>
              <Caption Value="NoFailures" Display="No Failures" />
              <Caption Value="CalendarTimeBased" Display="Calendar Time Based" />
              <Caption Value="EventCountBased" Display="Event Count Based" />
            </Captions>
          </ListProperty>
          <EventProperty Name="FailureEventName" DisplayName="Event Name" Description="The name of the event which determines when the next failure occurs." ComplexityLevel="Advanced" Category="Reliability Logic" NullString="null">
            <Switch Property="FailureType" Value="EventCountBased" />
          </EventProperty>
          <ExpressionProperty Name="CountBetweenFailures" DisplayName="Count Between Failures" Description="The count between failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Uniform(100,200)" NullString="null">
            <Switch Property="FailureType" Comparison="GreaterThan" Value="CalendarTimeBased" />
          </ExpressionProperty>
          <ExpressionProperty Name="UptimeBetweenFailures" DisplayName="Uptime Between Failures" Description="The uptime between failure occurrences." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Exponential(100)" NullString="null" UnitType="Time">
            <Switch Property="FailureType" Value="CalendarTimeBased" />
          </ExpressionProperty>
          <ExpressionProperty Name="TimeToRepair" DisplayName="Time To Repair" Description="The time required to repair a failure when one occurs." ComplexityLevel="Advanced" Category="Reliability Logic" DefaultValue="Random.Triangular(0.5,1.0,1.5)" NullString="null" UnitType="Time">
            <Switch Property="FailureType" Comparison="NotEqual" Value="NoFailures" />
          </ExpressionProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="AllocatedAddOnProcess" DisplayName="Allocated" Description="Occurs when this Vehicle resource has been allocated to perform some transport tasks, or when another object has seized this Vehicle resource for some non-transport related tasks." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ReleasedAddOnProcess" DisplayName="Released" Description="Occurs when this Vehicle resource has been released (freed) after completing a set of transport tasks, or when another object has released this Vehicle resource from some non-transport related tasks." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="FailedAddOnProcess" DisplayName="Failed" Description="Occurs when this object has failed." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RepairingAddOnProcess" DisplayName="Repairing" Description="Occurs when the repair time for a failure at this object is about to begin. This property has been marked as obsolete. Use the 'Failed' add-on process trigger instead." Obsolete="True" ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="RepairedAddOnProcess" DisplayName="Repaired" Description="Occurs when a failure is repaired at this object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EnteredNodeAddOnProcess" DisplayName="Entered Node" Description="Occurs when this Vehicle object has entered a node's crossing area, including occurrences when the Vehicle object has entered by unparking from a node's parking station." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="UnloadedAddOnProcess" DisplayName="Unloaded" Description="Occurs after an entity has been unloaded from this Vehicle." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="LoadedAddOnProcess" DisplayName="Loaded" Description="Occurs after an entity has been loaded onto this Vehicle." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="ExitingNodeAddOnProcess" DisplayName="Exiting Node" Description="Occurs when this Vehicle object is about to begin exiting a node's crossing area, including occurrences when the Vehicle is exiting by parking in a node's parking station." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EvaluatingTransportRequestAddOnProcess" DisplayName="Evaluating Transport Request" Description="Occurs when this Vehicle object is evaluating whether to accept or reject a transport request from a potential rider. In the executed decision process, assigning a value less than or equal to 0.0 to the executing token's ReturnValue state (Token.ReturnValue) indicates that the transport request is rejected." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="EvaluatingSeizeRequestAddOnProcess" DisplayName="Evaluating Seize Request" Description="Occurs when an 'On Demand' routing type Vehicle is evaluating whether to accept or reject a request from another object to seize the vehicle resource. In the executed decision process, assigning a value less than or equal to 0.0 to the executing token's ReturnValue state (Token.ReturnValue) indicates that the seize request is rejected." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="OnShiftAddOnProcess" DisplayName="On Shift" Description="Occurs when the object goes 'on shift' because of its specified work schedule." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ElementProperty Name="OffShiftAddOnProcess" DisplayName="Off Shift" Description="Occurs when the object goes 'off shift' because of its specified work schedule." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" Type="Process" />
          <ExpressionProperty Name="CapitalCostPerVehicle" DisplayName="Capital Cost Per Vehicle" Description="The initial one-time setup cost to add a vehicle of this type to the system." ComplexityLevel="Advanced" Category="Financials" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <Overrides>
            <Override Name="ParentCostCenter" Visible="True" Description="The parent cost center that costs charged, or accrued, to vehicles of this type are rolled up into. If a parent cost center is not explicitly specified, then costs accrued to a vehicle will be automatically rolled up into the parent object that contains the vehicle's current location." />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="True" Description="The cost per unit time charged, or accrued, to the cost of a vehicle of this type when it is idle." />
            <Override Name="ResourceCostPerUse" Visible="True" Description="The one-time cost that is accrued each time a vehicle of this type is used for a non-transport task, regardless of the usage duration. This cost will be charged to the cost of the owner object (i.e., task) using the vehicle." />
            <Override Name="ResourceUsageCostRate" Visible="True" Description="The cost per unit time to use a vehicle of this type for a non-transport task. This cost will be charged to the cost of the owner object (i.e., task) using the vehicle." />
            <Override Name="LogResourceUsage" Visible="True" />
            <Override Name="DisplayCategory" Visible="True" />
            <Override Name="DisplayColor" Visible="True" />
            <Override Name="CapacityType" Visible="True" Description="The availability of this vehicle type to perform tasks. 'Fixed' indicates that this type of vehicle is always available. 'WorkSchedule' indicates that each vehicle of this type follows a work schedule defining its 'On-shift, Off-shift' availability over time." Category="Resource Logic" ComplexityLevel="Advanced" />
            <Override Name="WorkSchedule" Visible="True" Description="The name of the schedule that defines the 'On-shift, Off-shift' availability of this type of vehicle over time." Category="Resource Logic" ComplexityLevel="Advanced" />
            <Override Name="WorkDayExceptions" Visible="True" />
            <Override Name="WorkPeriodExceptions" Visible="True" />
            <Override Name="InitialCapacity" Visible="False" DefaultValue="1" ComplexityLevel="Advanced" />
            <Override Name="RankingRule" Visible="True" Description="The static ranking rule used to order requests waiting to seize this Vehicle object for a process task. Note: This feature only applies to an 'On Demand' routing type vehicle." Category="Resource Logic" ComplexityLevel="Advanced" />
            <Override Name="RankingExpression" Visible="True" ComplexityLevel="Advanced" />
            <Override Name="DynamicSelectionRule" Visible="True" Description="Indicates whether this vehicle, when it becomes available, dynamically selects the next seize request from its statically ranked allocation queue using a dynamic selection rule. Note: This feature only applies to an 'On Demand' routing type vehicle." Category="Resource Logic" />
            <Override Name="InitialNumberInSystem" DefaultValue="1" />
            <Override Name="Destroyable" Visible="False" DefaultValue="False" />
            <Override Name="InitialPriority" ComplexityLevel="Advanced" />
            <Override Name="InitialSequence" Visible="False" />
            <Override Name="CanTransferInAndOutOfObjects" DefaultValue="False" />
            <Override Name="DueDateExpression" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="148" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="148" OldPropertyName="EvaluatingAllocationAddOnProcess" NewPropertyName="EvaluatingSeizeRequestAddOnProcess" />
            <PropertyReplacement Version="148" OldPropertyName="EvaluatingRiderAddOnProcess" NewPropertyName="EvaluatingTransportRequestAddOnProcess" />
            <PropertyReplacement Version="150" OldPropertyName="EventName" NewPropertyName="FailureEventName" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States>
          <ElementReferenceState Name="HomeNode" Description="Node reference state variable indicating the 'Home' node location that the vehicle is to travel to if using the 'Park At Home' or 'Go To Home' action when idle. This state variable is assignable." ElementType="Node" />
          <BooleanState Name="IgnoreVisitingCurrentNode" Private="True" />
          <BooleanState Name="MinimumDwellTimeExpired" InitialValue="1" Private="True" />
          <ListState Name="ResourceState" Description="The current resource state of this object (numeric values for this state are Idle = 0, Busy = 1, Failed = 3, OffShift = 4, FailedBusy = 5, OffShiftBusy = 6, Transporting = 7, OffShiftTransporting = 9)." List="ResourceStateName" AutomaticAssignment="ResourceAutoStates" ResourceUtilizationCalculation="Custom">
            <AutoStates>
              <AutoState Label="FailedBusy" State="Failed AutoState" />
              <AutoState Label="OffShiftBusy" State="OffShift AutoState" />
              <AutoState Label="Transporting" State="Busy AutoState" />
              <AutoState Label="FailedTransporting" State="Failed AutoState" />
              <AutoState Label="OffShiftTransporting" State="OffShift AutoState" />
            </AutoStates>
            <ResourceUtilizationCalculationSettings>
              <ResourceUtilizationCalculationSetting StateName="Idle" Setting="NotApplicable" />
              <ResourceUtilizationCalculationSetting StateName="Busy" Setting="IncludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="Blocked" Setting="ExcludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="Failed" Setting="ExcludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="OffShift" Setting="ExcludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="FailedBusy" Setting="IncludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="OffShiftBusy" Setting="IncludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="Transporting" Setting="IncludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="FailedTransporting" Setting="IncludeUnitsAllocated" />
              <ResourceUtilizationCalculationSetting StateName="OffShiftTransporting" Setting="IncludeUnitsAllocated" />
            </ResourceUtilizationCalculationSettings>
          </ListState>
        </States>
        <Events>
          <Event Name="RiderLoaded" Description="The RiderLoaded event provides notification to the vehicle's OnVisitingNode process that a rider has been loaded." Public="False" />
          <Event Name="RiderUnloaded" Description="The RiderUnloaded event provides notification to the vehicle's OnVisitingNode process that a rider has been unloaded." Public="False" />
          <Event Name="CalendarTimeBasedFailuresReset" Description="An occurrence of this event will reset the vehicle's 'CalendarTimeBasedFailures' timer." Public="False" />
          <Event Name="EventCountBasedFailuresReset" Description="An occurrence of this event will reset the vehicle's 'EventCountBasedFailures' timer." Public="False" />
          <Event Name="Allocated" Description="The Allocated event provides notification that the vehicle resource has been allocated to some transport or non-transport related tasks." />
          <Event Name="Released" Description="The Released event provides notification that the vehicle resource has been released (freed) from some transport or non-transport related tasks." />
          <Event Name="RemainInPlaceEnded" Description="The RemainInPlaceEnded event provides notification to the vehicle's process logic that the vehicle is to no longer remain in place at its current node if currently doing so." Public="False" />
          <Event Name="MinimumDwellTimeExpirationReset" Description="An occurrence of this event will reset the vehicle's 'MinimumDwellTimeExpirationTimer' timer." Public="False" />
        </Events>
        <Elements>
          <Element Type="Failure" Name="Failure" Scope="Public" Description="The failure occurrences for this object.">
            <Properties>
              <Property Name="ReportStatistics">False</Property>
              <Property Name="OnFailedProcess">OnFailed</Property>
              <Property Name="OnRepairedProcess">OnRepaired</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="CalendarTimeBasedFailures">
            <Properties>
              <Property Name="TimeOffset">UptimeBetweenFailures</Property>
              <Property Name="TimeInterval">UptimeBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">CalendarTimeBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="EventCountBasedFailures">
            <Properties>
              <Property Name="IntervalType">EventCount</Property>
              <Property Name="TriggeringEventName">FailureEventName</Property>
              <Property Name="TriggeringEventCount">CountBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEvent">EventCountBasedFailuresReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="MinimumDwellTimeExpirationTimer">
            <Properties>
              <Property Name="TimeOffset">MinimumDwellTime</Property>
              <Property Name="TimeInterval">MinimumDwellTime</Property>
              <Property Name="MaximumEvents">Math.If(MinimumDwellTimeExpired,0,1)</Property>
              <Property Name="ResetEvent">MinimumDwellTimeExpirationReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="CostCenter" Name="CapitalCosts">
            <Properties>
              <Property Name="InitialCost" Units="USD">CapitalCostPerVehicle</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DataSource">[Object]</Property>
              <Property Name="DataItem">"CapitalCost"</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="5">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Park" Name="AtInitialNode" ID="2">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">InitialNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="6" />
                <Exit Name="Failed" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfUnpark" ExclusionExpression="Math.If((RoutingType==List.VehicleRoutingType.FixedRoute)||(IdleAction==List.VehicleIdleAction.Roam),0,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="4">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">RunInitializedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="2" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState!=List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
              </Step>
              <Step Type="PlanVisit" Name="InitialMoveOrTransportRequests" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.OnDemand,0,2)" ID="7">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="7" />
                <Exit Name="Failed" Type="Alternate" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCreated" IsOverride="True" InterfaceProcessID="Object.OnCreated" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Seize" Name="Vehicle" ExclusionExpression="RoutingType==List.VehicleRoutingType.OnDemand" ID="2">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="SetRow" Name="ToRouteSequence" ExclusionExpression="RoutingType==List.VehicleRoutingType.OnDemand" ID="3">
                <Properties>
                  <Property Name="ObjectType">ParentObject</Property>
                  <Property Name="TableName">RouteSequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="SetNode" Name="ToFirstDestination" ExclusionExpression="RoutingType==List.VehicleRoutingType.OnDemand" ID="4">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationType">BySequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.VehicleFailureType.CalendarTimeBased" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CalendarTimeBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.VehicleFailureType.CalendarTimeBased" ID="6">
                <Properties>
                  <Property Name="EventName">CalendarTimeBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType!=List.VehicleFailureType.EventCountBased" ID="7">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>EventCountBasedFailures.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">Run.RandomnessDisabled==False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvent" ExclusionExpression="FailureType!=List.VehicleFailureType.EventCountBased" ID="8">
                <Properties>
                  <Property Name="EventName">EventCountBasedFailures.Event</Property>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Assign" Name="OnCreatedAssignments" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Capacity.Previous, 1)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState!=List.ResourceStateName.OffShift</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState!=List.ResourceStateName.OffShift</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState!=List.ResourceStateName.OffShift</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState!=List.ResourceStateName.OffShift</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Assign" Name="HomeNode" ExclusionExpression="!InitialNode.HasValue" ID="10">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>HomeNode</Value>
                  </Property>
                  <Property Name="NewValue">InitialNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Assign" Name="ToEnableMinimumDwellTimeExpirationTimer" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.SpecificTime" ID="11">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpirationTimer.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ExclusionExpression="Math.If(OnShiftAddOnProcess.HasValue,0,2)" ID="12">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState!=List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="15" />
                <Exit Name="False" Type="Alternate" NextID="13" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ExclusionExpression="Math.If(OffShiftAddOnProcess.HasValue,0,2)" ID="13">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Execute" Name="OffShift_AddOnProcess" ID="14">
                <Properties>
                  <Property Name="ProcessName">OffShiftAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="OnShift_AddOnProcess" ID="15">
                <Properties>
                  <Property Name="ProcessName">OnShiftAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityAllocated" IsOverride="True" InterfaceProcessID="Object.OnCapacityAllocated" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnCapacityAllocatedAssignments" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If(!Failure.Active, Math.If(Object==ParentObject, List.ResourceStateName.Transporting, List.ResourceStateName.Busy), ResourceState)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(ResourceState==List.ResourceStateName.Transporting, RideStation.Capacity &gt; RideStationLoad, False)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(ResourceState==List.ResourceStateName.Transporting, RideStation.Capacity &gt; RideStationLoad, False)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Transporting</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Transporting</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Fire" Name="AllocatedEvent" ID="3">
                <Properties>
                  <Property Name="EventName">Allocated</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="AllocatedAdd_OnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">AllocatedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityReleased" IsOverride="True" InterfaceProcessID="Object.OnCapacityReleased" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnCapacityReleasedAssignments" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((ResourceState==List.ResourceStateName.OffShiftBusy) || (ResourceState==List.ResourceStateName.OffShiftTransporting), List.ResourceStateName.OffShift, ResourceState==List.ResourceStateName.FailedBusy, List.ResourceStateName.Failed, ResourceState)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="SetNode" Name="ToClearDestination" ID="3">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Fire" Name="RemainInPlaceEndedEvent" ID="4">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="ReleasedEvent" ID="5">
                <Properties>
                  <Property Name="EventName">Released</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="ReleasedAdd_OnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">ReleasedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEvaluatingSeizeRequest" IsOverride="True" InterfaceProcessID="Object.OnEvaluatingSeizeRequest" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfSelfSeizeRequest" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Object==ParentObject</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfFixedRouting" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.FixedRoute,1,2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RoutingType==List.VehicleRoutingType.FixedRoute</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Execute" Name="EvaluatingSeizeRequest_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">EvaluatingSeizeRequestAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="RejectSeizeRequest" ID="5">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Token.ReturnValue</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="AcceptSeizeRequest" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Token.ReturnValue</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityChanged" IsOverride="True" InterfaceProcessID="Object.OnCapacityChanged" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Notify" Name="IfInvalidCapacity" ID="2">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Invalid resource capacity detected"</Property>
                  <Property Name="MessageContent">"Invalid capacity value '" + String.FromReal(Capacity) + "' assigned to resource '" + Name + "'. The resource capacity cannot be greater than 1.

The capacity will be automatically adjusted to the maximum allowable value. However, this action may indicate a problem in the modeled logic."</Property>
                  <Property Name="NotifyCondition">Capacity &gt; 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="ValidCapacity" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Capacity.Previous==0)&amp;&amp;(Capacity&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="3" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(Capacity.Previous&gt;0)&amp;&amp;(Capacity==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="Assign" Name="OffShiftAssignments" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((SeizedResources.CapacityOwnedOf(ParentObject)&gt;0)&amp;&amp;(!Failure.Active), List.ResourceStateName.OffShiftTransporting, (Capacity.Allocated&gt;0)&amp;&amp;(SeizedResources.CapacityOwnedOf(ParentObject)==0)&amp;&amp;((VisitRequestQueue.NumberWaiting==0)||(!Failure.Active)), List.ResourceStateName.OffShiftBusy, List.ResourceStateName.OffShift)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">(ResourceState==List.ResourceStateName.OffShiftTransporting)&amp;&amp;(VisitRequestQueue.NumberWaiting&gt;0)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">(ResourceState==List.ResourceStateName.OffShiftTransporting)&amp;&amp;(VisitRequestQueue.NumberWaiting&gt;0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="29" />
              </Step>
              <Step Type="Execute" Name="OffShift_AddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">OffShiftAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="30" />
              </Step>
              <Step Type="Assign" Name="OnShiftAssignments" ID="8">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((ResourceState==List.ResourceStateName.Failed)&amp;&amp;(Capacity.Allocated&gt;0)&amp;&amp;(SeizedResources.CapacityOwnedOf(ParentObject)==0)&amp;&amp;(VisitRequestQueue.NumberWaiting==0), List.ResourceStateName.FailedBusy, ResourceState)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle || (ResourceState==List.ResourceStateName.Transporting &amp;&amp; (RideStation.Capacity &gt; RideStationLoad))</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle || (ResourceState==List.ResourceStateName.Transporting &amp;&amp; (RideStation.Capacity &gt; RideStationLoad))</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(RoutingType==List.VehicleRoutingType.OnDemand, ResourceState==List.ResourceStateName.Idle, SeizedResources.CapacityOwnedOf(ParentObject)==0)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(RoutingType==List.VehicleRoutingType.OnDemand, ResourceState==List.ResourceStateName.Idle, SeizedResources.CapacityOwnedOf(ParentObject)==0)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle || ResourceState==List.ResourceStateName.Transporting</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle || ResourceState==List.ResourceStateName.Transporting</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="28" />
              </Step>
              <Step Type="Execute" Name="OnShift_AddOnProcess" ID="9">
                <Properties>
                  <Property Name="ProcessName">OnShiftAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Allocate" Name="Vehicle" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.OnDemand,0,2)" ID="10">
                <Properties>
                  <Property Name="ResourceType">ParentObject</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="11" />
              </Step>
              <Step Type="PlanVisit" Name="NewTransportRequests" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.OnDemand,0,2)" ID="11">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="11" />
                <Exit Name="Failed" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="12">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="13" />
                <Exit Name="False" Type="Alternate" NextID="25" />
              </Step>
              <Step Type="Decide" Name="IfNoIdleActionRequired" ID="13">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(IdleAction==List.VehicleIdleAction.GoToHome,Math.If(CurrentNode!=Nothing,CurrentNode==HomeNode,False),IdleAction==List.VehicleIdleAction.ParkAtNode,IsParked,IdleAction==List.VehicleIdleAction.ParkAtHome,IsParked&amp;&amp;Math.If(CurrentNode!=Nothing,CurrentNode==HomeNode,False),IdleAction==List.VehicleIdleAction.None)</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="18" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="14">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Decide" Name="IfNoOffShiftActionRequired" ID="15">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(OffShiftAction==List.VehicleOffShiftAction.GoToHome,Math.If(CurrentNode!=Nothing,CurrentNode==HomeNode,False),OffShiftAction==List.VehicleOffShiftAction.ParkAtNode,IsParked,OffShiftAction==List.VehicleOffShiftAction.ParkAtHome,IsParked&amp;&amp;Math.If(CurrentNode!=Nothing,CurrentNode==HomeNode,False),OffShiftAction==List.VehicleOffShiftAction.None)</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="20" />
              </Step>
              <Step Type="Fire" Name="RemainInPlaceEndedEvent" ID="16">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
              </Step>
              <Step Type="Fire" Name="RemainInPlaceEndedEvent" ID="17">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfInFreeSpace" ID="18">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode==Nothing)&amp;&amp;(CurrentLink==Nothing)&amp;&amp;(CurrentStation==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="32" />
                <Exit Name="False" Type="Alternate" NextID="19" />
              </Step>
              <Step Type="Decide" Name="IfUnpark" ID="19">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked &amp;&amp; (OnVisitingNode.NumberTokensInProcess==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="16" />
              </Step>
              <Step Type="Decide" Name="IfInFreeSpace" ID="20">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode==Nothing)&amp;&amp;(CurrentLink==Nothing)&amp;&amp;(CurrentStation==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="33" />
                <Exit Name="False" Type="Alternate" NextID="21" />
              </Step>
              <Step Type="Decide" Name="IfUnpark" ID="21">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked &amp;&amp; (OnVisitingNode.NumberTokensInProcess==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="23" />
                <Exit Name="False" Type="Alternate" NextID="17" />
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="22">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="23">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="ValidCapacity" ID="24">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(CurrentCapacity, 1)</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfStartingFixedRoute" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.OnDemand,2,0)" ID="25">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(RideStation.Contents==0)&amp;&amp;(Sequence.DestinationNodes.FirstItem!=Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="26" />
              </Step>
              <Step Type="SetRow" Name="ToRouteSequence" ID="26">
                <Properties>
                  <Property Name="ObjectType">ParentObject</Property>
                  <Property Name="TableName">RouteSequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="27" />
              </Step>
              <Step Type="SetNode" Name="ToFirstDestination" ID="27">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationType">BySequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="31" />
              </Step>
              <Step Type="Seize" Name="Vehicle" ExclusionExpression="RoutingType==List.VehicleRoutingType.OnDemand" ID="28">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">SeizedResources.CapacityOwnedOf(ParentObject)==0</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Release" Name="Vehicle" ExclusionExpression="RoutingType==List.VehicleRoutingType.OnDemand" ID="29">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">RideStation.Contents==0</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfDwellingForMinimumDwellTime" ExclusionExpression="Math.If(MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement,2,0)" ID="30">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">!MinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="17" />
                <Exit Name="False" Type="Alternate" NextID="14" />
              </Step>
              <Step Type="Decide" Name="IfInFreeSpace" ID="31">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode==Nothing)&amp;&amp;(CurrentLink==Nothing)&amp;&amp;(CurrentStation==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="35" />
                <Exit Name="False" Type="Alternate" NextID="19" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ID="32">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">((IdleAction==List.VehicleIdleAction.GoToHome)||(IdleAction==List.VehicleIdleAction.ParkAtHome))&amp;&amp;(HomeNode!=Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="34" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ID="33">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">((OffShiftAction==List.VehicleOffShiftAction.GoToHome)||(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome))&amp;&amp;(HomeNode!=Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="34" />
              </Step>
              <Step Type="SetNode" Name="ToHomeNode" ID="34">
                <Properties>
                  <Property Name="NodeName">HomeNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="35" />
              </Step>
              <Step Type="Travel" Name="ToDestinationNode" ID="35">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationObject">DestinationNode</Property>
                  <Property Name="MaximumMovementRate">DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="36" />
              </Step>
              <Step Type="Transfer" Name="ToDestinationNode" ID="36">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">DestinationNode</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">RunEndingAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnVisitingNode" IsOverride="True" InterfaceProcessID="Entity.OnVisitingNode" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="EnteredNode_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">EnteredNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfNotVisitingNode" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(IgnoreVisitingCurrentNode, True, ResourceState==List.ResourceStateName.Idle, False, ResourceState==List.ResourceStateName.OffShift, ((OffShiftAction==List.VehicleOffShiftAction.GoToHome)||(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome))&amp;&amp;(HomeNode!=Nothing)&amp;&amp;(DestinationNode==HomeNode)&amp;&amp;(CurrentNode!=HomeNode),(DestinationNode!=Nothing)&amp;&amp;(CurrentNode!=DestinationNode), True, False)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="35" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfBusy" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Busy)||(ResourceState==List.ResourceStateName.OffShiftBusy)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="27" />
                <Exit Name="False" Type="Alternate" NextID="30" />
              </Step>
              <Step Type="Arrive" Name="AtDestination" ID="5">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="37" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="6">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
              </Step>
              <Step Type="Dropoff" Name="Rider" ID="8">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="UnloadTime">UnloadTime</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="9" />
                <Exit Name="Failed" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Wait" Name="UntilRiderUnloaded" ExclusionExpression="!UnloadedAddOnProcess.HasValue" ID="9">
                <Properties>
                  <Property Name="EventName">RiderUnloaded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Pickup" Name="Rider" ID="10">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                  <Property Name="LoadTime">LoadTime</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="11" />
                <Exit Name="Failed" Type="Alternate" NextID="49" />
              </Step>
              <Step Type="Wait" Name="UntilRiderLoaded" ExclusionExpression="!LoadedAddOnProcess.HasValue" ID="11">
                <Properties>
                  <Property Name="EventName">RiderLoaded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Decide" Name="IfFixedRouting" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.FixedRoute,1,2)" ID="12">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">RoutingType==List.VehicleRoutingType.FixedRoute</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="44" />
                <Exit Name="False" Type="Alternate" NextID="14" />
              </Step>
              <Step Type="SetNode" Name="ToNextSequenceDestination" ID="13">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationType">BySequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="35" />
              </Step>
              <Step Type="SelectDropoff" Name="NextTransportDropoff" ID="14">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="35" />
                <Exit Name="Failed" Type="Alternate" NextID="15" />
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="15">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="35" />
                <Exit Name="Failed" Type="Alternate" NextID="16" />
              </Step>
              <Step Type="Release" Name="Vehicle" ID="16">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">SeizedResources.CapacityOwnedOf(ParentObject)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="PlanVisit" Name="NewTransportRequests" ID="17">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="17" />
                <Exit Name="Failed" Type="Alternate" NextID="18" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="18">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="19" />
                <Exit Name="False" Type="Alternate" NextID="35" />
              </Step>
              <Step Type="Decide" Name="IfParking" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.ParkAtNode,1,IdleAction!=List.VehicleIdleAction.ParkAtHome,2,0)" ID="19">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode==CurrentNode)||(HomeNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="34" />
                <Exit Name="False" Type="Alternate" NextID="20" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.ParkAtHome,1,IdleAction!=List.VehicleIdleAction.GoToHome,2,0)" ID="20">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode!=Nothing)&amp;&amp;(HomeNode!=CurrentNode)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="21" />
              </Step>
              <Step Type="Decide" Name="IfRoaming" ExclusionExpression="Math.If(IdleAction==List.VehicleIdleAction.Roam,1,2)" ID="21">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IdleAction==List.VehicleIdleAction.Roam</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="35" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="SetNode" Name="ToHome" ID="22">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">HomeNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="35" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="23">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="38" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="24">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfIdle" ID="25">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="17" />
                <Exit Name="False" Type="Alternate" NextID="41" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="26">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Decide" Name="IfParked" ExclusionExpression="!ParkWhileBusy" ID="27">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="28" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="28">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="29" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="29">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfLoadingUnloading" ID="30">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(ResourceState==List.ResourceStateName.OffShift, False, (ResourceState==List.ResourceStateName.Transporting)||(ResourceState==List.ResourceStateName.OffShiftTransporting), True, Node.RidePickupQueue.NumberWaiting&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="46" />
                <Exit Name="False" Type="Alternate" NextID="25" />
              </Step>
              <Step Type="Decide" Name="IfParked" ExclusionExpression="!ParkToLoadUnload" ID="31">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="32" />
              </Step>
              <Step Type="Execute" Name="ExitingNode_AddOnProcess" ID="32">
                <Properties>
                  <Property Name="ProcessName">ExitingNodeAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="33" />
              </Step>
              <Step Type="Park" Name="AtCurrentNode" ID="33">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">CurrentNode</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfParked" ID="34">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="24" />
                <Exit Name="False" Type="Alternate" NextID="26" />
              </Step>
              <Step Type="Decide" Name="IfParked" ID="35">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="39" />
                <Exit Name="False" Type="Alternate" NextID="40" />
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="36">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="37">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="3" />
                <Exit Name="Failed" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfIdleOrOffShift" ID="38">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Idle)||(ResourceState==List.ResourceStateName.OffShift)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="24" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="IgnoreVisitingCurrentNodeFlag" ID="39">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>IgnoreVisitingCurrentNode</Value>
                  </Property>
                  <Property Name="NewValue">CurrentNode!=DestinationNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="36" />
              </Step>
              <Step Type="Assign" Name="IgnoreVisitingCurrentNodeFlag" ID="40">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>IgnoreVisitingCurrentNode</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="41">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="42" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfParking" ExclusionExpression="Math.If(OffShiftAction==List.VehicleOffShiftAction.ParkAtNode,1,OffShiftAction!=List.VehicleOffShiftAction.ParkAtHome,2,0)" ID="42">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode==CurrentNode)||(HomeNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="34" />
                <Exit Name="False" Type="Alternate" NextID="43" />
              </Step>
              <Step Type="Decide" Name="IfHoming" ExclusionExpression="Math.If(OffShiftAction==List.VehicleOffShiftAction.ParkAtHome,1,OffShiftAction!=List.VehicleOffShiftAction.GoToHome,2,0)" ID="43">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(HomeNode!=Nothing)&amp;&amp;(HomeNode!=CurrentNode)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="22" />
                <Exit Name="False" Type="Alternate" NextID="24" />
              </Step>
              <Step Type="Release" Name="Vehicle" ID="44">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">(ResourceState==List.ResourceStateName.OffShiftTransporting)&amp;&amp;(RideStation.Contents==0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="45" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="45">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="42" />
                <Exit Name="False" Type="Alternate" NextID="54" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ExclusionExpression="MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement" ID="46">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="47" />
              </Step>
              <Step Type="Fire" Name="MinimumDwellTimeExpirationResetEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.SpecificTime" ID="47">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="48" />
              </Step>
              <Step Type="Subscribe" Name="ToMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="48">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="31" />
              </Step>
              <Step Type="Decide" Name="IfMinimumDwellTimeExpired" ExclusionExpression="MinimumDwellTimeType==List.VehicleMinimumDwellTimeType.NoRequirement" ID="49">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">MinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="50" />
              </Step>
              <Step Type="Decide" Name="IfMinimumDwellTimeCondition" ID="50">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(MinimumDwellTimeCondition.HasValue, MinimumDwellTimeCondition, True)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="51" />
                <Exit Name="False" Type="Alternate" NextID="52" />
              </Step>
              <Step Type="Wait" Name="UntilRemainInPlaceEnded" ID="51">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ID="52">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="53" />
              </Step>
              <Step Type="UnSubscribe" Name="FromMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="53">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Assign" Name="BeforeNextDestinationAssignments" ID="54">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingRiderReservation.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnMoveRequestAccepted" IsOverride="True" InterfaceProcessID="Entity.OnMoveRequestAccepted" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="2">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfInFreeSpace" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode==Nothing)&amp;&amp;(CurrentLink==Nothing)&amp;&amp;(CurrentStation==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfUnpark" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked &amp;&amp; (OnVisitingNode.NumberTokensInProcess==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Fire" Name="RemainInPlaceEndedEvent" ID="5">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="6">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="Travel" Name="ToDestinationNode" ID="7">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationObject">DestinationNode</Property>
                  <Property Name="MaximumMovementRate">DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Transfer" Name="ToDestinationNode" ID="8">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">DestinationNode</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredFreeSpace" IsOverride="True" InterfaceProcessID="Entity.OnEnteredFreeSpace" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Decide" Name="IfDestinationNode" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">DestinationNode != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfEnteredFreeSpaceFromNode" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">Math.If(PreviousNode != Nothing, DirectDistanceTo.Object(PreviousNode) == 0.0, False)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Assign" Name="MovementRate" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">0</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfTransporting" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Transporting)||(ResourceState==List.ResourceStateName.OffShiftTransporting)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfNearestOutputNode" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PreviousNode.Nearest.OutputNode != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="SetNode" Name="ToNearestOutputNode" ID="7">
                <Properties>
                  <Property Name="NodeName">PreviousNode.Nearest.OutputNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Decide" Name="IfNearestInputNode" ID="8">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PreviousNode.Nearest.InputNode != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="11" />
                <Exit Name="False" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Decide" Name="IfNearestNode" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">PreviousNode.Nearest.Node != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="SetNode" Name="ToNearestNode" ID="10">
                <Properties>
                  <Property Name="NodeName">PreviousNode.Nearest.Node</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="SetNode" Name="ToNearestInputNode" ID="11">
                <Properties>
                  <Property Name="NodeName">PreviousNode.Nearest.InputNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Travel" Name="ToDestinationNode" ID="12">
                <Properties>
                  <Property Name="DestinationObject">DestinationNode</Property>
                  <Property Name="MaximumMovementRate">DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Transfer" Name="ToDestinationNode" ID="13">
                <Properties>
                  <Property Name="NodeName">DestinationNode</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderReservationAccepted" IsOverride="True" InterfaceProcessID="Transporter.OnRiderReservationAccepted" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfIdle" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">ResourceState==List.ResourceStateName.Idle</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnRiderReservationAcceptedAssignments" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingRiderReservation.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Seize" Name="Vehicle" ID="4">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="SelectionExpression"></Property>
                        <Property Name="AccrueUsageCosts">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="SelectVisit" Name="ToAcceptedDestination" ID="5">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfInFreeSpace" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(CurrentNode==Nothing)&amp;&amp;(CurrentLink==Nothing)&amp;&amp;(CurrentStation==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfUnpark" ID="7">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">IsParked &amp;&amp; (OnVisitingNode.NumberTokensInProcess==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Fire" Name="RemainInPlaceEndedEvent" ID="8">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
              </Step>
              <Step Type="UnPark" Name="Vehicle" ID="9">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                </Properties>
              </Step>
              <Step Type="Travel" Name="ToDestinationNode" ID="10">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="DestinationObject">DestinationNode</Property>
                  <Property Name="MaximumMovementRate">DesiredSpeed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Transfer" Name="ToDestinationNode" ID="11">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="NodeName">DestinationNode</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEvaluatingRiderReservation" IsOverride="True" InterfaceProcessID="Transporter.OnEvaluatingRiderReservation" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfAcceptTransportRequest" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="Expression">(ResourceState==List.ResourceStateName.Idle) || (Entity.CurrentNode==DestinationNode) || (Entity.CurrentNode==CurrentNode &amp;&amp; DestinationNode==Nothing)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="RejectTransportRequest" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Token.ReturnValue</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="EvaluatingTransportRequest_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">EvaluatingTransportRequestAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEvaluatingRiderAtPickup" IsOverride="True" InterfaceProcessID="Transporter.OnEvaluatingRiderAtPickup" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="EvaluatingTransportRequest_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">EvaluatingTransportRequestAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderLoading" IsOverride="True" InterfaceProcessID="Transporter.OnRiderLoading" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Seize" Name="Vehicle" ExclusionExpression="RoutingType==List.VehicleRoutingType.FixedRoute" ID="2">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">Capacity.Allocated==0</Property>
                        <Property Name="SelectionExpression"></Property>
                        <Property Name="AccrueUsageCosts">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="OnRiderLoadingAssignments" ExclusionExpression="RoutingType==List.VehicleRoutingType.FixedRoute" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">RideStation.Capacity &gt; RideStationLoad</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilFull" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">RideStationLoad &gt;= RideStation.Capacity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Wait" Name="UntilEntityTransferred" ExclusionExpression="!LoadedAddOnProcess.HasValue" ID="5">
                <Properties>
                  <Property Name="EventName">Entity.Transferred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="Loaded_AddOnProcess" ExclusionExpression="!LoadedAddOnProcess.HasValue" ID="6">
                <Properties>
                  <Property Name="ProcessName">LoadedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Delay" Name="LoadedEventToBeLastCurrentEvent" ExclusionExpression="!LoadedAddOnProcess.HasValue" ID="7">
                <Properties>
                  <Property Name="DelayTime">Math.EPSILON</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Fire" Name="RiderLoadedEvent" ExclusionExpression="!LoadedAddOnProcess.HasValue" ID="8">
                <Properties>
                  <Property Name="EventName">RiderLoaded</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderUnloading" IsOverride="True" InterfaceProcessID="Transporter.OnRiderUnloading" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Wait" Name="UntilEntityTransferred" ExclusionExpression="!UnloadedAddOnProcess.HasValue" ID="2">
                <Properties>
                  <Property Name="EventName">Entity.Transferred</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="Unloaded_AddOnProcess" ExclusionExpression="!UnloadedAddOnProcess.HasValue" ID="3">
                <Properties>
                  <Property Name="ProcessName">UnloadedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Delay" Name="UnloadedEventToBeLastCurrentEvent" ExclusionExpression="!UnloadedAddOnProcess.HasValue" ID="4">
                <Properties>
                  <Property Name="DelayTime">Math.EPSILON</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="RiderUnLoadedEvent" ExclusionExpression="!UnloadedAddOnProcess.HasValue" ID="5">
                <Properties>
                  <Property Name="EventName">RiderUnloaded</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRiderLoaded" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">RideStation.Entered</Property>
            </Properties>
            <Steps>
              <Step Type="EndTransfer" Name="OntoVehicle" ID="2">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="FailureOccurrenceLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fail" Name="Vehicle" ID="2">
                <Properties>
                  <Property Name="FailureName">Failure</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Delay" Name="TimeToRepair" ID="3">
                <Properties>
                  <Property Name="DelayTime">TimeToRepair</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Repair" Name="Vehicle" ID="4">
                <Properties>
                  <Property Name="FailureName">Failure</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.VehicleFailureType.CalendarTimeBased" ID="5">
                <Properties>
                  <Property Name="EventName">CalendarTimeBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Fire" Name="ResetFailureTimer" ExclusionExpression="FailureType!=List.VehicleFailureType.EventCountBased" ID="6">
                <Properties>
                  <Property Name="EventName">EventCountBasedFailuresReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Seize" Name="Vehicle" ExclusionExpression="RoutingType==List.VehicleRoutingType.OnDemand" ID="7">
                <Properties>
                  <Property Name="OwnerType">ParentObject</Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ObjectType">ParentObject</Property>
                        <Property Name="UnitsPerObject">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Allocate" Name="Vehicle" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.OnDemand,0,2)" ID="8">
                <Properties>
                  <Property Name="ResourceType">ParentObject</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="PlanVisit" Name="NewTransportRequests" ExclusionExpression="Math.If(RoutingType==List.VehicleRoutingType.OnDemand,0,2)" ID="9">
                <Properties>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="9" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFailed" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnFailedAssignments" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If(ResourceState==List.ResourceStateName.OffShiftTransporting, List.ResourceStateName.OffShift, (ResourceState==List.ResourceStateName.OffShiftBusy)&amp;&amp;(VisitRequestQueue.NumberWaiting&gt;0),  List.ResourceStateName.OffShift, (Capacity&gt;0)&amp;&amp;(Capacity.Allocated&gt;0)&amp;&amp;(SeizedResources.CapacityOwnedOf(ParentObject)==0)&amp;&amp;(VisitRequestQueue.NumberWaiting==0), List.ResourceStateName.FailedBusy, Capacity&gt;0, List.ResourceStateName.Failed, ResourceState)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Suspend" Name="VehicleMovement" ID="3">
                <Properties>
                  <Property Name="SuspendType">ObjectMovement</Property>
                  <Property Name="ObjectType">ParentObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Suspend" Name="OnVisitingNodeProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">OnVisitingNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Suspend" Name="FailureOccurrenceLogic" ExclusionExpression="!FailedAddOnProcess.HasValue &amp;&amp; !RepairingAddOnProcess.HasValue" ID="5">
                <Properties>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="FailedAdd_OnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">FailedAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Execute" Name="RepairingAdd_OnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">RepairingAddOnProcess</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Resume" Name="FailureOccurrenceLogic" ExclusionExpression="!FailedAddOnProcess.HasValue &amp;&amp; !RepairingAddOnProcess.HasValue" ID="8">
                <Properties>
                  <Property Name="ProcessName">FailureOccurrenceLogic</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRepaired" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnRepairedAssignments" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((Capacity==0)&amp;&amp;(SeizedResources.CapacityOwnedOf(ParentObject)&gt;0), List.ResourceStateName.OffShiftTransporting, (Capacity==0)&amp;&amp;(Capacity.Allocated&gt;0),  List.ResourceStateName.OffShiftBusy, ResourceState)</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">(ResourceState==List.ResourceStateName.Idle)||(ResourceState==List.ResourceStateName.Transporting &amp;&amp; (RideStation.Capacity &gt; RideStationLoad))</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderReservation.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">(ResourceState==List.ResourceStateName.Idle)||(ResourceState==List.ResourceStateName.Transporting &amp;&amp; (RideStation.Capacity &gt; RideStationLoad))</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle || ResourceState==List.ResourceStateName.Transporting || ResourceState==List.ResourceStateName.OffShiftTransporting</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingRiderAtPickup.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ResourceState==List.ResourceStateName.Idle || ResourceState==List.ResourceStateName.Transporting || ResourceState==List.ResourceStateName.OffShiftTransporting</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Resume" Name="VehicleMovement" ID="3">
                <Properties>
                  <Property Name="ResumeType">ObjectMovement</Property>
                  <Property Name="ObjectType">ParentObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Resume" Name="OnVisitingNodeProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">OnVisitingNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="RepairedAdd_OnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">RepairedAddOnProcess</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="PlanVisit" BeginStepID="2" Scope="Public">
            <Properties />
            <Steps>
              <Step Type="PlanVisit" Name="NewMoveOrTransportRequests" ID="2">
                <Properties>
                  <Property Name="EntityType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="Pickup" BeginStepID="2" Scope="Public">
            <Properties />
            <Steps>
              <Step Type="Pickup" Name="Rider" ID="2">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="SelectionGoal">TaskSelectionStrategy</Property>
                  <Property Name="LoadTime">LoadTime</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="Dropoff" BeginStepID="2" Scope="Public">
            <Properties />
            <Steps>
              <Step Type="Dropoff" Name="Rider" ID="2">
                <Properties>
                  <Property Name="TransporterType">ParentObject</Property>
                  <Property Name="UnloadTime">UnloadTime</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="Allocate" BeginStepID="2" Scope="Public">
            <Properties />
            <Steps>
              <Step Type="Allocate" Name="Vehicle" ID="2">
                <Properties>
                  <Property Name="ResourceType">ParentObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnMinimumDwellTimeExpired" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">MinimumDwellTimeExpirationTimer.Event</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="MinimumDwellTimeExpiredFlag" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>MinimumDwellTimeExpired</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="UnSubscribe" Name="FromMinimumDwellTimeExpirationEvent" ExclusionExpression="MinimumDwellTimeType!=List.VehicleMinimumDwellTimeType.DwellUntilEvent" ID="3">
                <Properties>
                  <Property Name="EventName">MinimumDwellTimeExpirationEventName</Property>
                  <Property Name="ProcessName">OnMinimumDwellTimeExpired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Fire" Name="RemainInPlaceEndedEvent" ID="4">
                <Properties>
                  <Property Name="EventName">RemainInPlaceEnded</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="48f879b1-e7e3-497c-b456-433cc40b5fc6" />
            </SymbolInstance>
            <Queue Queue="RideStation.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="1 0.699999988079071 0" />
                <Point Location="-1 0.699999988079071 0" />
              </Points>
            </Queue>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </TransporterDefinition>
    </Definitions>
    <Materials>
      <TextureMaterial Id="6f5ef915-3da8-44b2-bc8c-3e489c722f43" Name="ARROW2">
        <Image>
          <FileRef Name="Data\Textures\ARROW2.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="2043fefa-3808-4397-8ac9-0e0fd0258f76" Name="server">
        <Image>
          <FileRef Name="Data\Textures\server.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="4bdca49f-09fa-46ad-89fe-bb54198b4edf" Name="ARROW2">
        <Image>
          <FileRef Name="Data\Textures\ARROW21.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="acaafc16-63d3-4273-9be0-66bbf2357bea" Name="SERVER">
        <Image>
          <FileRef Name="Data\Textures\SERVER.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="6938bc9f-0a33-4d44-aadb-0d993e85406f" Name="ARROW2">
        <Image>
          <FileRef Name="Data\Textures\ARROW22.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="a497946d-7ab0-4c0b-b89c-1b05429b8780" Name="SERVER">
        <Image>
          <FileRef Name="Data\Textures\SERVER1.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="98c8f103-fcf7-4a7c-8e55-6213309b281f" Name="Boxcar_railbox">
        <Image>
          <FileRef Name="Data\Textures\Boxcar_railbox.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="8e5896d0-92d4-41af-a4a8-6eb64855f4df" Name="Translucent_Glass_Saftey">
        <Image>
          <FileRef Name="Data\Textures\Translucent_Glass_Saftey.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="83863fce-4168-400e-9efb-0627c84ea5c3" Name="Metal-floor">
        <Image>
          <FileRef Name="Data\Textures\Metal-floor.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="4e3c3b60-a599-4666-a481-fca36ee17d27" Name="Carpet_Gray">
        <Image>
          <FileRef Name="Data\Textures\Carpet_Gray.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="8a721733-955f-4e36-94f5-2ed736755160" Name="CorrogateRust">
        <Image>
          <FileRef Name="Data\Textures\CorrogateRust.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="264aaa33-7b57-47b0-8353-f5f72c41670d" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture6.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="ecd3fae6-344f-405c-b864-37d8c7546bf4" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture7.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="bab850ad-84d5-4885-a81d-3f604b121144" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture8.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="def9c0aa-66b6-4b4e-b436-e0dfa0c0d5cf" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture9.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="9699965b-b2a7-449d-a1aa-2b4b69e9f686" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture10.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="9539f632-7efb-49b3-a6cd-5c1627c06e27" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture11.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="74f1f187-028b-4425-b284-dd9c23be8e23" Name="ARROW2">
        <Image>
          <FileRef Name="Data\Textures\ARROW23.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="268e2cef-ffcb-4c04-bc2c-a672faffee2a" Name="SERVER">
        <Image>
          <FileRef Name="Data\Textures\SERVER2.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="b1ccf372-8ea8-45c9-b0a6-3f354dead194" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture12.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="40faff5b-37d7-4bb6-aabc-dc51dbcd0e57" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture13.jpg" />
        </Image>
      </TextureMaterial>
    </Materials>
    <Symbols>
      <Symbol Name="tmp60A5" Id="22c7c663-1ead-470a-9e39-b2f50c610b39">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\tmp60A5.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 0 0" Scale="1">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\tmp60A5.s3d" />
              </MeshData>
              <GeometryDataPieces>
                <GeometryDataPiece Id="0">
                  <MaterialRef Id="76fff9b4-7b29-451c-a996-20c76f207a53" />
                </GeometryDataPiece>
              </GeometryDataPieces>
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="76fff9b4-7b29-451c-a996-20c76f207a53" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
    </Symbols>
    <Materials>
      <TextureMaterial Id="76fff9b4-7b29-451c-a996-20c76f207a53" Name="Boxcar_railbox">
        <Image>
          <FileRef Name="Data\Textures\Boxcar_railbox1.jpg" />
        </Image>
      </TextureMaterial>
    </Materials>
  </CommonItems>
</Project>
<!-- IqnQ4KyAC/hxJKV/jqaWBHKiSQZmgDFE3GSJq8Ti4pC2f74J5aQtF4TwMjCxXlgnge3+r59X8lGAVaTQzKHFrg== -->